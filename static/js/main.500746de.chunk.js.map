{"version":3,"sources":["graph-builder/graph-actions.js","graph-builder/graph-core/3-component.js","graph-builder/graph-core/2-canvas.js","graph-builder/graph-core/1-core.js","graph-builder/local-storage-manager.js","component/ZoomSetter.jsx","graph-builder/graphml/parser/PropFromArr.js","graph-builder/graphml/parser/parseProperties.js","graph-builder/graphml/parser/index.js","toolbarActions/toolbarFunctions.js","component/TabBar.jsx","graph-builder/graphml/builder/nodeML.js","graph-builder/graphml/builder/graphML.js","graph-builder/graphml/builder/edgeML.js","graph-builder/graphml/builder/index.js","graph-builder/graph-core/index.js","graph-builder/graph-core/6-server.js","graph-builder/graph-core/5-load-save.js","graph-builder/graph-core/4-undo-redo.js","graph-builder/calculations/boundary-point.js","graph-builder/index.js","graph-builder/tailored-graph-builder.js","GraphArea.jsx","config/defaultValidators.js","GraphWorkspace.jsx","component/modals/ParentModal.jsx","component/modals/GraphCompDetails.jsx","toolbarActions/toolbarList.js","component/HeaderComps.jsx","component/Header.jsx","component/modals/ProjectDetails.jsx","component/modals/ShareModal.jsx","component/CodeEdit.jsx","component/modals/Settings.jsx","component/File-drag-drop.jsx","component/modals/History.jsx","component/fileBrowser.jsx","component/modals/FileEdit.jsx","component/modals/Contribute.jsx","App.jsx","serviceWorkerRegistration.js","reportWebVitals.js","index.jsx","graph-builder/calculations/bending-dist-weight.js","config/cytoscape-style.js","config/cytoscape-options.js","reducer/actionType.js","component/modals/NodeDetails.jsx","component/modals/EdgeDetails.jsx","config/defaultStyles.js","reducer/initialState.js","reducer/reducer.js"],"names":["ADD_NODE","ADD_EDGE","UPDATE_NODE","UPDATE_EDGE","UPDATE_DATA","DEL_NODE","DEL_EDGE","SET_POS","SET_DIM","SET_BENDW","GraphComponent","args","nodeValidator","edgeValidator","setEdgeNodeValidator","getTid","Date","getTime","allNodes","this","cy","$","start","x","y","found","i","length","nodePos","position","label","style","type","getPos","data","id","tid","node","add","group","addAction","actionName","GA","parameters","sourceID","targetID","getById","edgesWith","edges","getEdgesBetweenNodes","dists","Set","forEach","edge","target","bendDistance","d","has","bendWeight","bendPoint","BendingDistanceWeight","getWeightDistance","w","getBendingD","edgeData","bendData","parseBendinDW","source","addEdgeWithLabel","dispatcher","T","Model_Open_Create_Edge","cb","edgeLabel","edgeStyle","message","validiateEdge","ok","shouldUpdateLabel","getStyle","key","val","connectedEdges","deleteEdge","json","remove","removed","jsonEd","isNode","deleteNode","pos","emit","dim","height","width","setPos","toString","indexOf","lastIndexOf","a","b","slice","trim","eval","map","sourceLabel","getRealSourceId","targetLabel","comp","validator","getNodesEdges","nodes","undefined","err","e","validiateComp","GraphCanvas","reset","removeListener","setZoomUI","on","Math","round","zoom","fit","v","elements","window","confirm","el","deleteElem","actionArr","SET_ZOOM_LEVEL","payload","element","superState","projectName","authorName","cytoscape","use","edgehandles","nodeEditing","Konva","gridGuide","cyOptions","container","bendNode","classes","registerEvents","initizialize","resizeToContentCueEnabled","setWidth","setHeight","isNoResizeMode","isNoControlsMode","snapToGridOnRelease","zoomDash","panGrid","preview","handlePosition","handleNodes","complete","c","addEdge","getElementById","shouldEmit","SET_PROJECT_DETAILS","value","graphID","SET_AUTHOR","serverID","els","ELE_UNSELECTED","every","isEdge","ids","ELE_SELECTED","selectDeselectEventHandler","scratch","addClass","evt","ev","hasClass","CoreGraph","getBendEdgePoint","DW","addBendChange","removeClass","resetAllComp","resetAllAction","parseFloat","getCoordinate","ALL_GRAPHS","localStorageManager","btoa","AUTHOR_NAME","allgs","localStorage","getItem","setItem","JSON","stringify","parse","atob","saveAllgs","Array","from","addEmptyIfNot","get","save","graphContent","addGraph","serializedJson","delete","removeItem","getAllGraphs","addToFront","Garr","unshift","getAuthorName","setAuthorName","clearGraph","getFileList","minZoom","GraphOption","maxZoom","marks","ZoomComp","myGraph","curGraphInstance","zoomValue","zoomLevel","className","role","tabIndex","onClick","resetZoom","onKeyDown","fitZoom","min","max","onChange","setZoom","included","PropFromArr","obj","arr","flatenArr","flatArr","constructor","o","push","p","filter","Object","keys","s","t","propFromArr","split","property","any","S","A","F","mapByDefault","def","includes","parseNode","parseProps","opacity","parseInt","shape","backgroundColor","borderColor","borderWidth","parseEdge","thickness","parseActionML","parser","graphMlCnt","Promise","resolve","xml2js","Parser","parseString","grahMLObj","grahML","parseDetails","actionHistory","equivalent","inverse","parseActionHistory","getGraphFun","createNode","state","setState","Model_Open_Create_Node","validiateNode","addNode","editElement","eleSelectedPayload","Model_Open_Update_Node","retMessage","updateNode","labelAllowed","getLabel","Model_Open_Update_Edge","updateEdge","downloadImg","format","saveGraphMLFile","graph","graphs","curGraphIndex","fileHandle","createWritable","stream","write","saveToFolder","close","toast","success","info","saveWithoutFileHandle","readFile","file","fr","FileReader","name","pop","onload","result","then","ADD_GRAPH","graphML","fileName","getFile","readAsText","createFile","EDIT_TEXTFILE","show","newProject","NEW_GRAPH","clearAll","undo","redo","contribute","SET_CONTRIBUTE_MODAL","viewHistory","SET_HISTORY_MODAL","TabBar","closeTab","stopPropagation","REMOVE_GRAPH","SET_CUR_INSTANCE","editCur","SET_EDIT_DETAILS_MODAL","React","useEffect","hotkeys","event","preventDefault","document","click","querySelector","bind","data-tip","size","CHANGE_TAB","data-for","place","effect","nodeML","posX","posY","color","graphml","xmlns","for","edgedefault","edgeML","lineColor","lineWidth","configuration","sx","sy","tx","ty","builder","G","edg","X","Builder","buildObject","GraphServer","config","setServerID","IS_WORKFLOW_ON_SERVER","Boolean","Axios","post","uploadedDirName","res","alert","catch","autoSaveIntervalId","saveLocalStorage","saveAs","png","full","getName","jpg","nodeID","edgeID","shouldNodeBeSaved","all","nodeJson","shouldEdgeBeSaved","edgeJson","hash","GraphLoadSave","stringifyAction","str","graphmlBuilder","jsonifyGraph","bytes","TextEncoder","encode","blob","Blob","navigator","userAgent","options","types","description","accept","showSaveFilePicker","handle","prompt","match","SET_FILE_HANDLE","content","parseAction","setProjectName","setProjectAuthor","clearTimeout","setTimeout","graphMLParser","graphObject","loadGraphFromLocalStorage","loadJson","props","methodsMapped","updateData","setDim","setBendWightDist","curActionIndex","SET_UNDO","SET_REDO","prevPos","curPos","prevDim","curDim","prevDW","curDW","splice","actionIdentity","GraphUndoRedo","sequencify","md5","at","informUI","performAction","curTid","addPositionChange","addDimensionChange","r","sort","k","boundaryPoint","getEq","P1","P2","m","getX1X2","Cn","P","h","B","C","D","getY1Y2","x1","x2","dist","getClosestEllipse","y1","y2","slope","setSubQ","S1","S2","getClosestRect","abs","Infinity","TailoredGraphBuilder","connectedNodes","juncNode","TailoredGraph","calJuncNodePos","juncNodeId","incomers","unselectify","ed","sourceNode","targetNode","sourceNodeStyle","juncNodePos","getBoundaryPoint","ungrabify","addAutoMove","addEdgeWithJuncNode","tidd","juncNodes","outgoers","addEdgeWithoutJuncNode","addEdgeAction","junctionNode","n1","n2","n","union","c1","c2","values","parNode","meanNbrPosition","setOfPos","posStr","Graph","graphContainerRef","active","useState","instance","setInstance","ref","useRef","setContainerDim","elToAss","current","offsetWidth","offsetHeight","set","setCurStatus","addEventListener","MyGraph","forcePullFromServer","setGraphML","initialiseNewGraph","zIndex","display","GraphComp","allSavedGs","ADD_GRAPH_BULK","flex","flexDirection","background","ReactModal","setAppElement","Modal","closeModal","ModelOpen","title","children","curClass","setCurClass","isOpen","setIsOpen","stid","setStid","contentLabel","overlayClassName","aria-hidden","ModalComp","setData","errorMessage","setErrorMessage","modalPayload","submitText","Children","defaultStyle","defaultLabel","ParentModal","onSubmit","toolbarList","text","icon","FaPlus","action","visibility","hotkey","FaFileImport","FaSave","saveToDisk","saveAction","FaThermometerEmpty","FaUndo","undoEnabled","FaRedo","redoEnabled","FaEdit","eleSelected","FaTrash","FaHistory","isWorkflowOnServer","FaToggleOn","FiToggleLeft","toggleServer","FaHammer","build","FaBug","debug","FiPlay","run","FaRegTimesCircle","clear","FiStopCircle","stop","FaBomb","destroy","FiTriangle","FaDownload","fn","DropDown","Icon","menuButton","FileUploader","fileRef","Switcher","checked","ActionButton","fontSize","Vsep","Hsep","Space","Header","actions","replace","substring","handler","shortcut","setHotKeys","ProjectDetails","curGraph","inputRef","useCallback","focus","newGraphModal","editDetailsModal","authorNameE","openExisting","NewWorkflow","SET_NEW_GRAPH_MODAL","placeholder","required","ShareModal","serializedGraph","setSerializedGraph","copyText","setCopyText","cond","shareModal","serializeGraph","link","location","protocol","host","pathname","SET_SHARE_MODAL","readOnly","clipboard","writeText","getElementsByClassName","select","CodeEdit","pre","docString","createRef","spellCheck","data-gramm_editor","SettingsModal","setNodeValidator","setEdgeValidator","getNodeValidator","getEdgeValidator","settingsModal","SET_SETTING_MODAL","app","SET_FILE_REF","getElementsByTagName","cc","classList","dragEvent","dataTransfer","files","HistoryModal","curState","setcurState","historyList","setHistoryList","historyView","setHistoryView","mapActionToTrue","filterAction","setFilterAction","getLabelFromID","reverse","stringifyActionType","prefixTid","index","DT","date","toLocaleDateString","time","toLocaleTimeString","tempCurState","undoSingleAction","redoSingleAction","restoreState","fontWeight","par","htmlFor","listStyleType","LocalFileBrowser","dirButton","setDirButton","fileState","setFileState","handleFileInDirs","topKey","topLevel","entries","valueSubDir","kind","fileData","concat","modified","lastModified","fileObj","newFeature","showDirectoryPicker","dirHandle","SET_DIR_NAME","newFeatureFile","pickerOpts","excludeAcceptAllOption","multiple","showOpenFilePicker","webkitRelativePath","directory","webkitdirectory","disabled","onSelectFile","foundi","g","detailRenderer","fileRenderer","FileRenderers","TableFile","folderRenderer","FolderRenderers","TableFolder","FileEditModal","codeStuff","setCodeStuff","setFileName","submit","saveAsSubmit","saveSubmit","newFileName","textFileModal","onValueChange","highlight","code","fileEx","languages","verilog","cpp","python","matlab","bash","plaintext","highlightSyntax","padding","fontFamily","minHeight","minWidth","border","ContributeModal","study","setStudy","path","setPath","auth","setAuth","setTitle","desc","setDesc","branch","setBranch","contributeModal","useReducer","reducer","initialState","onbeforeunload","returnValue","Settings","History","Contribute","FileEdit","GraphCompDetails","Model_Close","overflow","GraphWorkspace","autoClose","pauseOnHover","hostname","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","error","console","rotate","Q","cos","sin","extraRad","PI","getRadian","tanQ","atan","selector","overlayOpacity","textValign","textHalign","curveStyle","targetArrowShape","targetArrowColor","segmentDistances","segmentWeights","edgeDistances","lineStyle","edgeTextRotation","textBackgroundOpacity","textBackgroundColor","textBackgroundShape","textBorderColor","textBorderWidth","textBorderOpacity","borderOpacity","overlayColor","overlayPadding","zoomingEnabled","userZoomingEnabled","zealit","require","$$typeof","TURN_DRAW","SET_ZOOM","ADD_GRAPH_INSTANCE","NodeDetails","textRef","widthSet","labelName","setLabelName","labelFile","setLabelFile","indexOfFile","prop","borderRadius","lname","list","item","some","Triangle","EqTriangle","borderLeft","borderBottom","borderTop","marginLeft","EdgeDetails","borderBottomWidth","borderBottomColor","borderBottomStyle","NodeStyle","EdgeStyle","drawModeOn","initialGraphState","component","newState"],"mappings":"uHAAe,KACXA,SAAU,WACVC,SAAU,WACVC,YAAa,cACbC,YAAa,cACbC,YAAa,cACbC,SAAU,WACVC,SAAU,WACVC,QAAS,UACTC,QAAS,UACTC,UAAW,c,s+CCLTC,e,waAWF,0BAAsB,IAAD,mOAANC,EAAM,yBAANA,EAAM,gBACjB,yCAASA,IACT,IAAaC,EAAgCD,EAA7C,GAA4BE,EAAiBF,EAA7C,GAFiB,OAGjB,EAAKG,qBAAqB,CAAEF,gBAAeC,kBAC3C,EAAKE,OAAS,kBAAM,IAAIC,MAAOC,WAJd,E,yNAOrB,WAII,IAHA,IAAMC,EAAWC,KAAKC,GAAGC,EAAE,QACrBC,EAAQ,CAAEC,EAAG,IAAKC,EAAG,KACvBC,GAAQ,EACLA,GAAO,CACVA,GAAQ,EACR,IAAK,IAAIC,EAAI,EAAGA,EAAIR,EAASS,OAAQD,GAAK,EAAG,CACzC,IAAME,EAAUV,EAASQ,GAAGG,WAC5BJ,EAAQA,GAAUG,EAAQL,IAAMD,EAAMC,GAAKK,EAAQJ,IAAMF,EAAME,EAE/DC,IACAH,EAAMC,GAAK,GACXD,EAAME,GAAK,IAGnB,OAAOF,I,qBAGX,SAAQQ,EAAOC,GAC0B,IADnBC,EACkB,uDADX,QAASH,EACE,uDADSV,KAAKc,SAClDC,EAAoC,uDAA7B,GAAIC,EAAyB,uCAArBC,EAAqB,uDAAfjB,KAAKJ,SACpBsB,EAAOlB,KAAKC,GAAGkB,IAAI,CACrBC,MAAO,QACPL,KAAK,mWACEA,GADH,IACSC,KAAIL,QAAOE,OAAMD,UAE9BF,aAUJ,OARAV,KAAKqB,UACD,CAAEC,WAAYC,8CAAGrC,SAAUsC,WAAY,CAACN,EAAKF,OAC7C,CACIM,WAAYC,8CAAG1C,SACf2C,WAAY,CAACb,EAAOC,EAAOC,EAAMH,EAAUK,EAAMG,EAAKF,OAE1DC,GAEGC,I,kCAGX,SAAqBO,EAAUC,GAC3B,OAAO1B,KAAK2B,QAAQF,GAAUG,UAAU5B,KAAK2B,QAAQD,M,yBAGzD,SAAYD,EAAUC,GAClB,IAAMG,EAAQ7B,KAAK8B,qBAAqBL,EAAUC,GAC5CK,EAAQ,IAAIC,IAClBH,EAAMI,SAAQ,SAACC,GACPR,IAAaQ,EAAKC,SAASnB,KAAMe,EAAMZ,IAAIe,EAAKnB,KAAK,YAAYqB,cAChEL,EAAMZ,KAAKe,EAAKnB,KAAK,YAAYqB,iBAE1C,IAAK,IAAIC,EAAI,GAAIA,GAAK,GAAI,CACtB,IAAKN,EAAMO,IAAID,GAAI,OAAOA,EAC1B,IAAKN,EAAMO,KAAKD,GAAI,OAAQA,K,2BAIpC,YAEI,IADAZ,EACD,EADCA,SAAUC,EACX,EADWA,SAAUb,EACrB,EADqBA,KAAM0B,EAC3B,EAD2BA,WAAYH,EACvC,EADuCA,aAAcI,EACrD,EADqDA,UAEpD,GAAa,UAAT3B,EAAkB,MAAO,CAAEuB,aAAc,EAAGG,WAAY,GAC5D,GAAIH,GAAgBG,EAAY,MAAO,CAAEH,eAAcG,cACvD,GAAIC,EAAW,CACX,IAAQpC,EAASoC,EAATpC,EAAGC,EAAMmC,EAANnC,EACX,EAAiBoC,iEAAsBC,kBACnC,CAAEtC,IAAGC,KAAKL,KAAK2B,QAAQF,GAAUf,WAAYV,KAAK2B,QAAQD,GAAUhB,YAExE,MAAO,CAAE0B,aAHT,EAAQC,EAGkBE,WAH1B,EAAWI,GAKf,MAAO,CAAEP,aAAcpC,KAAK4C,YAAYnB,EAAUC,GAAWa,WAAY,M,8BAG7E,SAAiBM,GAAgC,IAAtB5B,EAAqB,uDAAfjB,KAAKJ,SAClC,EAA2BiD,EAAnBhC,YAAR,MAAe,QAAf,EACMiC,EAAW9C,KAAK+C,cAAL,mWAAwBF,GAAaA,EAASC,WACzDZ,EAAOlC,KAAKC,GAAGkB,IAAI,CACrBC,MAAO,QACPL,KAAK,mWACE8B,GADH,IACaG,OAAQH,EAASpB,SAAUU,OAAQU,EAASnB,SAAUb,OAAMiC,eASjF,OANA9C,KAAKqB,UACD,CAAEC,WAAYC,8CAAGpC,SAAUqC,WAAY,CAACU,EAAKlB,OAC7C,CAAEM,WAAYC,8CAAGzC,SAAU0C,WAAY,CAAC,mWAAKqB,GAAN,IAAgB7B,GAAIkB,EAAKlB,SAChEC,GAGGiB,I,qBAGX,SAAQW,GAAgC,IAAD,OAArB5B,EAAqB,uDAAfjB,KAAKJ,SACzB,GAAKiD,EAAShC,MAA0B,UAAlBgC,EAAShC,MAAqBgC,EAASlC,MACzD,OAAOX,KAAKiD,iBAAL,mWAA2BJ,GAA3B,IAAqChC,KAAMgC,EAAShC,MAAQ,UAAWI,GAElFjB,KAAKkD,WAAW,CACZrC,KAAMsC,wCAAEC,uBACRC,GAAI,SAACC,EAAWC,GACZ,IAAMC,EAAU,EAAKC,cAAcH,EAAWC,EAC1CV,EAASnB,SAAUmB,EAASnB,SAAU,KAAM,OAEhD,OADI8B,EAAQE,IAAI,EAAKT,iBAAL,mWAA2BJ,GAA3B,IAAqChC,KAAMgC,EAAShC,MAAQ,UAAWI,GAChFuC,O,sBAMnB,SAASxC,GACL,OAAOhB,KAAK2B,QAAQX,GAAID,KAAK,W,sBAGjC,SAASC,GACL,OAAOhB,KAAK2B,QAAQX,GAAID,KAAK,UAAYf,KAAK2B,QAAQX,GAAID,KAAK,W,wBAGnE,SAAWC,EAAIJ,EAAOD,EAAOgD,GAAyC,IAAtB1C,EAAqB,uDAAfjB,KAAKJ,SACvDI,KAAKqB,UACD,CACIC,WAAYC,8CAAGxC,YACfyC,WAAY,CAACR,EAAIhB,KAAK4D,SAAS5C,GAAKhB,KAAK2B,QAAQX,GAAID,KAAK,SAAU4C,IAExE,CAAErC,WAAYC,8CAAGxC,YAAayC,WAAY,CAACR,EAAIJ,EAAOD,EAAOgD,IAC7D1C,GAEA0C,GAAmB3D,KAAK2B,QAAQX,GAAID,KAAK,QAASJ,GACtDX,KAAK2B,QAAQX,GAAID,KAAK,QAASH,K,wBAGnC,SAAWI,EAAIJ,EAAOD,EAAOgD,GAAyC,IAAtB1C,EAAqB,uDAAfjB,KAAKJ,SACvDI,KAAKqB,UACD,CACIC,WAAYC,8CAAGvC,YACfwC,WAAY,CAACR,EAAIhB,KAAK4D,SAAS5C,GAAKhB,KAAK2B,QAAQX,GAAID,KAAK,SAAU4C,IAExE,CAAErC,WAAYC,8CAAGvC,YAAawC,WAAY,CAACR,EAAIJ,EAAOD,EAAOgD,IAC7D1C,GAEA0C,GAAmB3D,KAAK2B,QAAQX,GAAID,KAAK,QAASJ,GACtDX,KAAK2B,QAAQX,GAAID,KAAK,QAASH,K,wBAGnC,SAAWI,EAAI6C,EAAKC,GAA2B,IAAtB7C,EAAqB,uDAAfjB,KAAKJ,SAMhC,OALAI,KAAKqB,UACD,CAAEC,WAAYC,8CAAGtC,YAAauC,WAAY,CAACR,EAAI6C,EAAK7D,KAAK2B,QAAQX,GAAID,KAAK8C,KAC1E,CAAEvC,WAAYC,8CAAGtC,YAAauC,WAAY,CAACR,EAAI6C,EAAKC,IAAQ7C,GAEhEjB,KAAK2B,QAAQX,GAAID,KAAK8C,EAAKC,GACpB9D,O,wBAGX,SAAWgB,GAA0B,IAAD,OAArBC,EAAqB,uDAAfjB,KAAKJ,SAChBsB,EAAOlB,KAAK2B,QAAQX,GAC1BE,EAAK6C,eAAe,kBAAkB9B,SAAQ,SAACC,GAAD,OAAU,EAAK8B,WAAW9B,EAAKlB,KAAMC,MACnFC,EAAK6C,iBAAiB9B,SAAQ,SAACC,GAAD,OAAU,EAAK8B,WAAW9B,EAAKlB,KAAMC,MACnEjB,KAAKqB,UACD,CACIC,WAAYC,8CAAG1C,SACf2C,WAAY,CACRN,EAAKH,KAAK,SAAUf,KAAK4D,SAAS1C,EAAKF,MAAOE,EAAKH,KAAK,QACxDG,EAAKR,WAAYQ,EAAK+C,OAAOlD,KAAMC,IAG3C,CAAEM,WAAYC,8CAAGrC,SAAUsC,WAAY,CAACR,IAAOC,GAEnDC,EAAKgD,W,wBAGT,SAAWlD,GAA0B,IAAtBC,EAAqB,uDAAfjB,KAAKJ,SACtB,GAAgC,IAA5BI,KAAK2B,QAAQX,GAAIR,SAAgBR,KAAK2B,QAAQX,GAAImD,UAAtD,CACA,IAAMC,EAASpE,KAAK2B,QAAQX,GAAIiD,OAChCjE,KAAKqB,UACD,CACIC,WAAYC,8CAAGzC,SACf0C,WAAY,CAAC,mWACN4C,EAAOrD,MADF,IACQU,SAAU2C,EAAOrD,KAAKiC,OAAQtB,SAAU0C,EAAOrD,KAAKoB,WAG5E,CAAEb,WAAYC,8CAAGpC,SAAUqC,WAAY,CAACR,IAAOC,GAEnDjB,KAAK2B,QAAQX,GAAIkD,Y,wBAGrB,SAAWlD,GAA0B,IAAtBC,EAAqB,uDAAfjB,KAAKJ,SACtB,OAAII,KAAK2B,QAAQX,GAAIqD,SAAiBrE,KAAKsE,WAAWtD,EAAIC,GACnDjB,KAAKgE,WAAWhD,EAAIC,K,oBAG/B,SAAOD,EAAIuD,GACPvE,KAAK2B,QAAQX,GAAIN,SAAS6D,GAC1BvE,KAAK2B,QAAQX,GAAIwD,KAAK,W,oBAG1B,SAAOxD,EAAIyD,EAAKF,GACZ,IAAM3D,EAAQZ,KAAK2B,QAAQX,GAAID,KAAK,SACpCf,KAAK2B,QAAQX,GAAID,KAAK,QAAtB,mWAAoCH,GAApC,IAA2C8D,OAAQD,EAAIC,OAAQC,MAAOF,EAAIE,SAC1E3E,KAAK4E,OAAO5D,EAAIuD,K,8BAGpB,WACI,MAAe,CAACvE,KAAKP,cAAcoF,WAAWC,QAAQ,KAAM9E,KAAKP,cAAcoF,WAAWE,YAAY,MAA/FC,EAAP,KAAUC,EAAV,KACA,OAAOjF,KAAKP,cAAcoF,WAAWK,MAAMF,EAAI,EAAGC,GAAGE,S,8BAGzD,WACI,MAAe,CAACnF,KAAKN,cAAcmF,WAAWC,QAAQ,KAAM9E,KAAKN,cAAcmF,WAAWE,YAAY,MAA/FC,EAAP,KAAUC,EAAV,KACA,OAAOjF,KAAKN,cAAcmF,WAAWK,MAAMF,EAAI,EAAGC,GAAGE,S,kCAGzD,SAAAxF,qBAAA,OAAwD,IAAjCF,cAAgC,MAAhCA,cAAeC,cAAiB,MAAjBA,cAElCM,KAAKP,cAAgB2F,KAAK3F,eAE1BO,KAAKN,cAAgB0F,KAAK1F,iB,2BAG9B,WAAiB,IAAD,OAaZ,MAAO,CAZOM,KAAKC,GAAGC,EAAE,sBAAsBmF,KAAI,SAACnE,GAAD,MAAW,CACzDP,MAAOO,EAAKH,KAAK,SACjBH,MAAOM,EAAKH,KAAK,SACjBC,GAAIE,EAAKH,KAAK,UAEJf,KAAKC,GAAGC,EAAE,sBAAsBmF,KAAI,SAACnD,GAAD,MAAW,CACzDvB,MAAOuB,EAAKnB,KAAK,SACjBuE,YAAa,EAAK3D,QAAQ,EAAK4D,gBAAgBrD,EAAKc,SAAShC,OAAOD,KAAK,SACzEyE,YAAatD,EAAKC,SAASpB,KAAK,SAChCH,MAAOsB,EAAKnB,KAAK,SACjBC,GAAIkB,EAAKnB,KAAK,a,2BAKtB,SAAc0E,EAAMC,EAAW7E,GAC3B,MAAuBb,KAAK2F,gBAA5B,uLAAOC,EAAP,KAAc/D,EAAd,KACA,IACI,IAAM2B,EAAUkC,EAAUD,EAAMG,EAAO/D,EAAOhB,GAC9C,OAAI2C,QAA0BqC,IAAfrC,EAAQE,SAAoCmC,IAAhBrC,EAAQsC,IAA0BtC,EACtE,CAAEE,IAAI,EAAOoC,IAAK,qDAC3B,MAAOC,GACL,MAAO,CAAErC,IAAI,EAAOoC,IAAI,8BAAD,OAAgCC,EAAEvC,a,2BAIjE,SAAc7C,EAAOC,EAAOI,EAAIH,GAC5B,GAAIG,EAAI,CACJ,IAAME,EAAOlB,KAAK2B,QAAQX,GAC1B,OAAOhB,KAAKgG,cAAc,CACtBrF,MAAOA,GAASO,EAAKH,KAAK,SAC1BH,MAAOA,GAASM,EAAKH,KAAK,SAC1BC,MACDhB,KAAKP,cAAeoB,GAE3B,OAAOb,KAAKgG,cAAc,CAAErF,QAAOC,QAAOI,MAAMhB,KAAKP,cAAeoB,K,2BAGxE,SAAcF,EAAOC,EAAOa,EAAUC,EAAUV,EAAIH,GAChD,GAAIG,EAAI,CACJ,IAAMkB,EAAOlC,KAAK2B,QAAQX,GAC1B,OAAOhB,KAAKgG,cAAc,CACtBrF,MAAOA,GAASuB,EAAKnB,KAAK,SAC1BH,MAAOA,GAASsB,EAAKnB,KAAK,SAC1BuE,YAAatF,KAAK2B,QAAQ3B,KAAKuF,gBAAgBrD,EAAKc,SAAShC,OAAOD,KAAK,SACzEyE,YAAatD,EAAKC,SAASpB,KAAK,SAChCC,MACDhB,KAAKN,cAAemB,GAE3B,OAAOb,KAAKgG,cAAc,CACtBrF,QACAC,QACA0E,YAAatF,KAAK2B,QAAQ3B,KAAKuF,gBAAgB9D,IAAWV,KAAK,SAC/DyE,YAAaxF,KAAK2B,QAAQD,GAAUX,KAAK,SACzCC,MACDhB,KAAKN,cAAemB,O,gBA9RFoF,0CAkSd1G,sC,8NCnST0G,E,+JAGF,WACIjG,KAAKC,GAAGiG,U,uBAGZ,SAAU7C,GACNrD,KAAKC,GAAGkG,eAAe,QACvBnG,KAAKoG,UAAY/C,EACjBrD,KAAKC,GAAGoG,GAAG,QAAQ,SAACN,GAAD,OAAO1C,EAAGiD,KAAKC,MAAM,IAAMR,EAAE5D,OAAOqE,c,qBAG3D,WACIxG,KAAKC,GAAGwG,Q,qBAGZ,SAAQC,GACJ1G,KAAKC,GAAGuG,KAAKE,EAAI,O,qBAGrB,WACI,OAAOJ,KAAKC,MAAuB,IAAjBvG,KAAKC,GAAGuG,U,sBAG9B,WAAY,IAAD,OACP,OAAkC,IAA9BxG,KAAKC,GAAG0G,WAAWnG,UAElBoG,OAAOC,QAAQ,oCACpB7G,KAAKC,GAAG0G,WAAW1E,SAAQ,SAAC6E,GAAD,OAAQ,EAAKC,WAAWD,EAAG9F,KAAM,MAC5DhB,KAAKgH,UAAY,GACjBhH,KAAKC,GAAGuE,KAAK,mBACN,K,0BAGX,WACIxE,KAAKC,GAAG0G,WAAWzC,W,0BAGvB,WACI,qEACAlE,KAAKkD,WAAW,CAAErC,KAAMsC,IAAE8D,eAAgBC,QAASZ,KAAKC,MAAuB,IAAjBvG,KAAKC,GAAGuG,c,cCpB1E,WAAYxF,EAAImG,EAASjE,EAAYkE,EAAYC,EAAa5H,EAAeC,EAAe4H,GAAa,oBACjGpE,IAAYlD,KAAKkD,WAAaA,GAC9BkE,IAAYpH,KAAKoH,WAAaA,GACc,oBAArCG,IAAU,OAAQ,gBACzBA,IAAUC,IAAIC,KAE8B,oBAArCF,IAAU,OAAQ,gBACzBG,IAAYH,IAAWrH,IAAGyH,KAEgB,oBAAnCJ,IAAU,OAAQ,cACzBK,IAAUL,KAGdvH,KAAKC,GAAKsH,IAAU,2BAAKM,KAAN,IAAiBC,UAAWX,KAC/CnH,KAAKgB,GAAKA,EACVhB,KAAKqH,YAAcA,EACnBrH,KAAKsH,WAAaA,EAClBtH,KAAKC,GAAGuE,KAAK,kBACbxE,KAAK+H,SAAW/H,KAAKC,GAAGkB,IACpB,CAAEC,MAAO,QAASL,KAAM,CAAEF,KAAM,QAAUmH,QAAS,CAAC,YAExDhI,KAAKiI,iBACLjI,KAAKC,GAAGuE,KAAK,kBACbxE,KAAKkI,e,gDAGT,WAAgB,IAAD,OACXlI,KAAKC,GAAGyH,YAAY,CAChBS,0BAA2B,kBAAM,GACjCC,SAFgB,SAEPlH,EAAMyD,GACXzD,EAAKH,KAAK,QAAV,2BAAwBG,EAAKH,KAAK,UAAlC,IAA4C4D,YAEhD0D,UALgB,SAKNnH,EAAMwD,GACZxD,EAAKH,KAAK,QAAV,2BAAwBG,EAAKH,KAAK,UAAlC,IAA4C2D,aAEhD4D,eARgB,SAQDpH,GAAQ,MAA6B,UAAtBA,EAAKH,KAAK,SACxCwH,iBATgB,SASCrH,GAAQ,MAA6B,UAAtBA,EAAKH,KAAK,WAG9Cf,KAAKC,GAAG2H,UAAU,CACdY,qBAAqB,EACrBC,UAAU,EACVC,SAAS,IAEb1I,KAAKC,GAAGwH,YAAY,CAChBkB,SAAS,EACTC,eAFgB,WAGZ,MAAO,QAEXC,YAAa,8CACbC,SAAU,SAAC9D,EAAGC,EAAG8D,GAAQA,EAAE7E,SAAU,EAAK8E,QAAQ,CAAEvH,SAAUuD,EAAEhE,KAAMU,SAAUuD,EAAEjE,Y,qBAI1F,SAAQZ,GACJ,OAAOJ,KAAKC,GAAGgJ,eAAe7I,K,4BAGlC,SAAeA,GACX,OAAOJ,KAAK2B,QAAQvB,GAAGW,KAAK,UAAY,mB,iBAG5C,YAEI,IADAd,EACD,EADCA,GAAIiD,EACL,EADKA,WAAYkE,EACjB,EADiBA,WAAYC,EAC7B,EAD6BA,YAAaC,EAC1C,EAD0CA,WAErCpE,IAAYlD,KAAKkD,WAAaA,GAC9BkE,IAAYpH,KAAKoH,WAAaA,GAC9BnH,IAAID,KAAKC,GAAKA,GACdoH,IAAarH,KAAKqH,YAAcA,GAChCC,IAAYtH,KAAKsH,WAAaA,K,4BAGtC,SAAeD,GAAiC,IAApB6B,IAAmB,yDAC3ClJ,KAAKqH,YAAcA,EACf6B,GACAlJ,KAAKkD,WAAW,CACZrC,KAAMsC,IAAEgG,oBACRjC,QAAS,CACLkC,MAAO/B,EACPgC,QAASrJ,KAAKgB,GACdH,KAAM,iBAIlBb,KAAKC,GAAGuE,KAAK,oB,8BAGjB,SAAiB8C,GAAgC,IAApB4B,IAAmB,yDAC5ClJ,KAAKsH,WAAaA,EACd4B,GACAlJ,KAAKkD,WAAW,CACZrC,KAAMsC,IAAEmG,WACRpC,QAAS,CACLkC,MAAO9B,EACP+B,QAASrJ,KAAKgB,GACdH,KAAM,gBAIlBb,KAAKC,GAAGuE,KAAK,oB,yBAGjB,SAAY+E,GAA8B,IAApBL,IAAmB,yDACrClJ,KAAKuJ,SAAWA,EACZL,GACAlJ,KAAKkD,WAAW,CACZrC,KAAMsC,IAAEgG,oBACRjC,QAAS,CACLkC,MAAOG,EACPF,QAASrJ,KAAKgB,GACdH,KAAM,cAIlBb,KAAKC,GAAGuE,KAAK,oB,wCAGjB,WACI,IAEI3D,EAFE2I,EAAMxJ,KAAKC,GAAGC,EAAE,aACtB,GAAmB,IAAfsJ,EAAIhJ,OAAgB,OAAOR,KAAKkD,WAAW,CAAErC,KAAMsC,IAAEsG,iBAEvB5I,EAA9B2I,EAAIE,OAAM,SAAC3D,GAAD,OAAOA,EAAE1B,YAAkB,OAChCmF,EAAIE,OAAM,SAAC3D,GAAD,OAAOA,EAAE4D,YAAkB,OAClC,MACZ,IAAMC,EAAMJ,EAAInE,KAAI,SAACU,GAAD,OAAOA,EAAEhF,KAAK,SAClC,OAAOf,KAAKkD,WAAW,CACnBrC,KAAMsC,IAAE0G,aACR3C,QAAS,CACL0C,MAAK/I,Y,4BAKjB,WAAkB,IAAD,OACbb,KAAKC,GAAGoG,GAAG,mBAAmB,kBAAM,EAAKyD,gCACzC9J,KAAKC,GAAGoG,GAAG,OAAQ,wBAAwB,SAACN,GACxCA,EAAE5D,OAAOF,SAAQ,SAACf,GACdA,EAAK6I,QAAQ,WAAb,eAA8B7I,EAAKR,mBAI3CV,KAAKC,GAAGoG,GAAG,2BAA2B,SAACN,EAAGlF,EAAMK,GAC5CA,EAAK6I,QAAQ,SAAU7I,EAAKH,KAAK,SAAS2D,QAC1CxD,EAAK6I,QAAQ,QAAS7I,EAAKH,KAAK,SAAS4D,OACzCzD,EAAK6I,QAAQ,WAAb,eAA8B7I,EAAKR,gBAGvCV,KAAKC,GAAGoG,GAAG,oBAAoB,WAC3B,EAAK0B,SAAS5B,eAAe,sBAAuB,EAAK4B,SAASiC,SAAS,aAG/EhK,KAAKC,GAAGoG,GAAG,UAAU,SAAC4D,GAAD,MAAyC,SAA/BA,EAAI9H,OAAO,GAAGpB,KAAK,QAAqB,EAAKd,GAAGuE,KAAK,aAAe,KACnGxE,KAAKC,GAAGoG,GAAG,UAAU,SAAC4D,GAAD,MAAyC,SAA/BA,EAAI9H,OAAO,GAAGpB,KAAK,QAAqB,EAAKd,GAAGuE,KAAK,aAAe,KAEnGxE,KAAKC,GAAGoG,GAAG,aAAa,SAAC6D,GACjBA,EAAG/H,SAAW,EAAKlC,KACnB,EAAKA,GAAGuE,KAAK,aACb,EAAKvE,GAAGC,EAAE,cAAcgE,aAGhClE,KAAKC,GAAGoG,GAAG,6BAA6B,WACpC,IAAMS,EAAK,EAAK7G,GAAGC,EAAE,aAErB,OADkB,IAAd4G,EAAGtG,QAAiBsG,EAAG,GAAG6C,UAAU,EAAK1J,GAAGuE,KAAK,aAC9CsC,EAAGtC,KAAK,gBAEnBxE,KAAKC,GAAGoG,GAAG,YAAa,QAAQ,SAAC6D,GAC7BA,EAAG/H,OAAOqC,KAAK,gBAGnBxE,KAAKC,GAAGoG,GAAG,YAAa,QAAQ,SAAC6D,GACxB,EAAKnC,SAASoC,SAAS,WAAW,EAAKlK,GAAGuE,KAAK,aACpD,IAAMsC,EAAKoD,EAAG/H,OACd,EAAK4F,SAASrH,SAAS0J,EAAUC,iBAAiBvD,IAClD,EAAKiB,SAAS1B,GAAG,QAAQ,WACrB,IAAMiE,EAAK7H,IAAsBC,kBAC7B,EAAKqF,SAASrH,WAAYoG,EAAG9D,SAAStC,WAAYoG,EAAG3E,SAASzB,YAElEoG,EAAG/F,KAAK,WAAY,CAAEqB,aAAckI,EAAGjI,EAAGE,WAAY+H,EAAG3H,IACzDuH,EAAG/H,OAAOqC,KAAK,cAEnB,EAAKuD,SAAS1B,GAAG,QAAQ,WACRS,EACRiD,QAAQ,iBAAkBjD,EAAG/F,KAAK,gBAE3C,EAAKgH,SAAS1B,GAAG,YAAY,WACzB,IAAMnF,EAAO4F,EACb,EAAKyD,cAAcrJ,EAAKF,KAAME,EAAK6I,QAAQ,kBAAmBjD,EAAG/F,KAAK,gBAE1E,EAAKgH,SAASyC,YAAY,e,8BAIlC,SAAiBxJ,EAAIsJ,GACjBtK,KAAK2B,QAAQX,GAAID,KAAK,WAAYuJ,K,0BAUtC,WACItK,KAAK8J,+B,mBAGT,WACI9J,KAAKyK,eACLzK,KAAK0K,oB,+BAbT,SAAwB5D,GACpB,MAAqCA,EAAG/F,KAAK,YAArCwB,EAAR,EAAQA,WAAYH,EAApB,EAAoBA,aACdO,EAAIgI,WAAWpI,GACfF,EAAIsI,WAAWvI,GACrB,OAAOK,IAAsBmI,cAAcjI,EAAGN,EAAGyE,EAAG9D,SAAStC,WAAYoG,EAAG3E,SAASzB,gB,MDhL9EuF,O,kZEjDf,IAAgB4E,EAOVC,EAAsB,CACxBD,WAAYjE,OAAOmE,KAAK,cACxBC,YAAapE,OAAOmE,KAAK,eAEzBE,OAXYJ,EAWEjE,OAAOmE,KAAK,cAVrBnE,OAAOsE,aAAaC,QAAQN,IAC7BjE,OAAOsE,aAAaE,QAAQP,EAAYjE,OAAOmE,KAAKM,KAAKC,UAAU,MAEhE,IAAItJ,IAAIqJ,KAAKE,MAAM3E,OAAO4E,KAAK5E,OAAOsE,aAAaC,QAAQN,OASlEY,UANwB,WAOpB7E,OAAOsE,aAAaE,QAAQpL,KAAK6K,WAAYjE,OAAOmE,KAAKM,KAAKC,UAAUI,MAAMC,KAAK3L,KAAKiL,WAG5FW,cAVwB,WAWfhF,OAAOsE,aAAaC,QAAQnL,KAAK6K,aAClCjE,OAAOsE,aAAaE,QAAQpL,KAAK6K,WAAYjE,OAAOmE,KAAKM,KAAKC,UAAU,OAIhFO,IAhBwB,SAgBpB7K,GACA,OAAwC,OAApC4F,OAAOsE,aAAaC,QAAQnK,GAAqB,KAC9CqK,KAAKE,MAAM3E,OAAO4E,KAAK5E,OAAOsE,aAAaC,QAAQnK,MAE9D8K,KApBwB,SAoBnB9K,EAAI+K,GACL/L,KAAKgM,SAAShL,GACd,IAAMiL,EAAiBZ,KAAKC,UAAUS,GACtCnF,OAAOsE,aAAaE,QAAQpK,EAAI4F,OAAOmE,KAAKkB,KAEhD/H,OAzBwB,SAyBjBlD,GACChB,KAAKiL,MAAMiB,OAAOlL,IAAKhB,KAAKyL,YAChCP,aAAaiB,WAAWnL,IAE5BgL,SA7BwB,SA6BfhL,GACDhB,KAAKiL,MAAM3I,IAAItB,KACnBhB,KAAKiL,MAAM9J,IAAIH,GACfhB,KAAKyL,cAETW,aAlCwB,WAmCpB,OAAOf,KAAKE,MAAM3E,OAAO4E,KAAK5E,OAAOsE,aAAaC,QAAQnL,KAAK6K,eAEnEwB,WArCwB,SAqCbrL,GACP,IAAIhB,KAAKiL,MAAM3I,IAAItB,GAAnB,CACAhB,KAAKiL,MAAM9J,IAAIH,GACf,IAAMsL,EAAOjB,KAAKE,MAAM3E,OAAO4E,KAAK5E,OAAOsE,aAAaC,QAAQnL,KAAK6K,cACrEyB,EAAKC,QAAQvL,GACb4F,OAAOsE,aAAaE,QAAQpL,KAAK6K,WAAYjE,OAAOmE,KAAKM,KAAKC,UAAUgB,OAE5EE,cA5CwB,WA6CpB,OAAOtB,aAAaC,QAAQnL,KAAKgL,cAAgB,IAErDyB,cA/CwB,SA+CVnF,GACV4D,aAAaE,QAAQpL,KAAKgL,YAAa1D,IAE3CoF,WAlDwB,SAkDb1L,GACP4F,OAAOsE,aAAaiB,WAAWnL,IAEnC2L,YArDwB,WAsDpB,OAAOzB,aAAaC,QAAQ,aAAe,KAGpCL,O,iOCxDP8B,EAAqBC,IAArBD,QAASE,EAAYD,IAAZC,QACXC,EAAQ,GAqDCC,EAnDE,SAAC,GAAgC,IAA9B5F,EAA6B,EAA7BA,WAAYlE,EAAiB,EAAjBA,WACtB+J,EAAU7F,EAAW8F,iBAC3B,IAAKD,EAAS,OAAO,6BACrB,IAAME,EAAY/F,EAAWgG,UAC7B,OACI,8BACI,sBAAKC,UAAU,YAAf,UACI,qBACIC,KAAK,SACLC,SAAU,EACVF,UAAU,oBACVG,QAAS,kBAAMP,EAAQQ,aACvBC,UAAW,SAACxD,GAAD,MAAmB,MAAXA,EAAGrG,KAAgBoJ,EAAQQ,aALlD,SAOI,cAAC,IAAD,MAGJ,qBACIH,KAAK,SACLC,SAAU,EACVF,UAAU,oBACVG,QAAS,kBAAMP,EAAQU,WACvBD,UAAW,SAACxD,GAAD,MAAmB,MAAXA,EAAGrG,KAAgBoJ,EAAQQ,aALlD,SAOI,cAAC,IAAD,MAGJ,sBAAKJ,UAAU,sBAAf,UACKF,EADL,OAIA,qBAAKE,UAAU,SAAf,SACI,cAAC,IAAD,CACIO,IAAK,IAAMhB,EACXiB,IAAK,IAAMf,EACXC,MAAOA,EACPe,SACI,SAAC1E,GACG6D,EAAQc,QAAQ3E,GAChBlG,EAAW,CAAErC,KAAMsC,IAAE8D,eAAgBC,QAASkC,KAGtD4E,UAAU,EACV5E,MAAO+D,Y,2FCHhBc,E,WAlDX,WAAYC,GAAM,oBACdlO,KAAKmO,IAAM,CAACD,GACZlO,KAAKoO,Y,6CAGT,WAEI,IAFS,IAAD,OACFC,EAAU,GACP9N,EAAI,EAAGA,EAAIP,KAAKmO,IAAI3N,OAAQD,GAAK,EAClCP,KAAKmO,IAAI5N,GAAG+N,cAAgB5C,MAAO1L,KAAKmO,IAAI5N,GAAG0B,SAAQ,SAACsM,GAAD,OAAO,EAAKJ,IAAIK,KAAKD,MAC3EF,EAAQG,KAAKxO,KAAKmO,IAAI5N,IAE/BP,KAAKmO,IAAME,I,eAGf,SAAEI,GACE,OAAO,IAAIR,EAAYjO,KAAKmO,IAAI9I,KAAI,SAACkJ,GAAD,OAAOA,EAAEE,MAAIC,QAAO,SAACH,GAAD,OAAOA,Q,eAGnE,SAAEE,GAGE,OAFAzO,KAAKmO,IAAMnO,KAAKmO,IAAI9I,KAAI,SAACkJ,GAAD,OAAOA,EAAEE,MAAIC,QAAO,SAACH,GAAD,OAAOA,KACnDvO,KAAKoO,YACEpO,O,iBAGX,WACI,IAAMmO,EAAM,GAQZ,OAPAnO,KAAKmO,IAAIlM,SAAQ,SAACiM,GACdS,OAAOC,KAAKV,GAAKjM,SAAQ,SAAC4B,GACtBsK,EAAIK,KAAKN,EAAIrK,UAGrB7D,KAAKmO,IAAMA,EACXnO,KAAKoO,YACEpO,O,wBAGX,SAAW6O,EAAGC,GACV,IAAMC,EAAc,IAAId,EAAYjO,KAAKmO,KAIzC,OAHAU,EAAEG,MAAM,KAAK/M,SACT,SAACgN,GAAD,MAA4B,MAAbA,EAAmBF,EAAYG,MAAQH,EAAYI,EAAEF,MAE9D,IAANH,EAAgBC,EAAYK,IACtB,IAANN,EAAgBC,EACbA,EAAYM,M,eAGvB,WAAM,OAAOrP,KAAKmO,M,eAElB,WAAM,OAAOnO,KAAKmO,IAAI,O,KC/CpBmB,EAAe,SAAClP,EAAG+N,EAAKoB,GAC1B,OAAIpB,EAAIqB,SAASpP,GAAWA,EACrBmP,GAGLE,EAAY,SAACvO,GACf,IAAMuN,EAAI,IAAIR,EAAY/M,GAAMwO,WAAW,mBAAoB,GAC/D,MAAO,CACH/O,MAAO8N,EAAEiB,WAAW,kBAAoBjB,EAAEiB,WAAW,eACrD1O,GAAI,IAAIiN,EAAY/M,GAAMwO,WAAW,QACrChP,SAAU,CACNN,EAAGuK,WAAW8D,EAAEiB,WAAW,mBAC3BrP,EAAGsK,WAAW8D,EAAEiB,WAAW,oBAE/B9O,MAAO,CACH+D,MAAOgG,WAAW8D,EAAEiB,WAAW,uBAC/BhL,OAAQiG,WAAW8D,EAAEiB,WAAW,wBAChCC,QAASC,SAASnB,EAAEiB,WAAW,oBAAqB,KAAO,EAC3DG,MAAOP,EAAab,EAAEiB,WAAW,kBAAmB,CAAC,YAAa,WAAY,aAC9EI,gBAAiBrB,EAAEiB,WAAW,kBAC9BK,YAAatB,EAAEiB,WAAW,yBAC1BM,YAAaJ,SAASnB,EAAEiB,WAAW,yBAA0B,OAKnEO,EAAY,SAAC/N,GAAD,MAAW,CACzBvB,MAAO,IAAIsN,EAAY/L,GAAMwN,WAAW,yBAC5B,IAAIzB,EAAY/L,GAAMwN,WAAW,sBAC7C1M,OAAQ,IAAIiL,EAAY/L,GAAMwN,WAAW,YACzCvN,OAAQ,IAAI8L,EAAY/L,GAAMwN,WAAW,YACzC9O,MAAO,CACHkP,gBAAiB,IAAI7B,EAAY/L,GAAMwN,WAAW,8BAClDQ,UAAWvF,WAAW,IAAIsD,EAAY/L,GAAMwN,WAAW,+BACvDG,MAAOP,EAAa,IAAIrB,EAAY/L,GAAMwN,WAAW,6BACjD,CAAC,SAAU,UAAW,UAE9B5M,SAAU,CACNN,UAAW,IAAIyL,EAAY/L,GAAMwN,WAAW,8BAI9CS,EAAiB,SAAC,GAAD,IAAG7O,EAAH,EAAGA,WAAYE,EAAf,EAAeA,WAAf,MAAiC,CAAEF,WAAYA,EAAW,GAAIE,WAAYA,EAAW,KCxB7F4O,EAdA,SAACC,GAAD,OAAgB,IAAIC,SAAQ,SAACC,IACxC,IAAIC,IAAOC,QAASC,YAAYL,GAAY,SAACvK,EAAK6K,GAC9C,IAAMC,EAAS,IAAI3C,EAAY0C,GACzB/K,EAAQgL,EAAOlB,WAAW,qBAAsB,GAAGrK,IAAIoK,GACvD5N,EAAQ+O,EAAOlB,WAAW,qBAAsB,GAAGrK,IAAI4K,GAC7D,ED6Ca,SAACW,GAAD,OAAYA,EAAOlB,WAAW,mBC3CvCmB,CAAaD,GADb5P,EADJ,EACIA,GAAIqG,EADR,EACQA,YAAakC,EADrB,EACqBA,SAAUjC,EAD/B,EAC+BA,WAEzBwJ,EDgCa,SAACF,GAAD,OAAYA,EAAOlB,WAAW,8BAA+B,GACnFrK,KAAI,gBACD0L,EADC,EACDA,WAAYC,EADX,EACWA,QAAS/P,EADpB,EACoBA,IADpB,MAEE,CAEH8P,WAAYZ,EAAcY,EAAW,IACrCC,QAASb,EAAca,EAAQ,IAC/B/P,IAAKA,EAAI,OCvCagQ,CAAmBL,GACzCL,EAAQ,CACJvP,KAAIqG,cAAaxF,QAAO+D,QAAOkL,gBAAevH,WAAUjC,sBCZ9D4J,EAAc,SAAC9J,GAAD,OAAgBA,EAAW8F,kBAEzCiE,EAAa,SAACC,EAAOC,GACvBA,EAAS,CACLxQ,KAAMsC,IAAEmO,uBACRjO,GAAI,SAAC1C,EAAOC,GACR,IAAM4C,EAAU0N,EAAYE,GAAOG,cAAc5Q,EAAOC,EAAO,KAAM,OAErE,OADI4C,EAAQE,IAAIwN,EAAYE,GAAOI,QAAQ7Q,EAAOC,GAC3C4C,MAKbiO,EAAc,SAACL,EAAOC,GACxB,IAAM1N,EAA4D,IAAxCyN,EAAMM,mBAAmB9H,IAAIpJ,OACjDS,GAAM,IAAIpB,MAAOC,UACe,SAAlCsR,EAAMM,mBAAmB7Q,MACzBwQ,EAAS,CACLxQ,KAAMsC,IAAEwO,uBACRtO,GAAI,SAAC1C,EAAOC,GACR,IAAMgR,EAAa,CAAElO,IAAI,EAAMoC,IAAK,MAapC,OAZAsL,EAAMM,mBAAmB9H,IAAI3H,SAAQ,SAACjB,GAClC,IAAMwC,EAAU0N,EAAYE,GAAOG,cAC/B5N,EAAoBhD,EAAQ,KAAMC,EAAOI,EAAI,UAEjD4Q,EAAWlO,GAAKkO,EAAWlO,IAAMF,EAAQE,GACzCkO,EAAW9L,IAAM8L,EAAW9L,KAAOtC,EAAQsC,OAE3C8L,EAAWlO,IACX0N,EAAMM,mBAAmB9H,IAAI3H,SACzB,SAACjB,GAAD,OAAQkQ,EAAYE,GAAOS,WAAW7Q,EAAIJ,EAAOD,EAAOgD,EAAmB1C,MAG5E2Q,GAEXE,aAAcnO,EACdhD,MAAOuQ,EAAYE,GAAOW,SAASX,EAAMM,mBAAmB9H,IAAI,IAChEhJ,MAAOsQ,EAAYE,GAAOxN,SAASwN,EAAMM,mBAAmB9H,IAAI,MAGlC,SAAlCwH,EAAMM,mBAAmB7Q,MACzBwQ,EAAS,CACLxQ,KAAMsC,IAAE6O,uBACR3O,GAAI,SAAC1C,EAAOC,GACR,IAAMgR,EAAa,CAAElO,IAAI,EAAMoC,IAAK,MAapC,OAZAsL,EAAMM,mBAAmB9H,IAAI3H,SAAQ,SAACjB,GAClC,IAAMwC,EAAU0N,EAAYE,GAAO3N,cAC/BE,EAAoBhD,EAAQ,KAAMC,EAAO,KAAM,KAAMI,EAAI,UAE7D4Q,EAAWlO,GAAKkO,EAAWlO,IAAMF,EAAQE,GACzCkO,EAAW9L,IAAM8L,EAAW9L,KAAOtC,EAAQsC,OAE3C8L,EAAWlO,IACX0N,EAAMM,mBAAmB9H,IAAI3H,SACzB,SAACjB,GAAD,OAAQkQ,EAAYE,GAAOa,WAAWjR,EAAIJ,EAAOD,EAAOgD,EAAmB1C,MAG5E2Q,GAEXE,aAAcnO,EACdhD,MAAOuQ,EAAYE,GAAOW,SAASX,EAAMM,mBAAmB9H,IAAI,IAChEhJ,MAAOsQ,EAAYE,GAAOxN,SAASwN,EAAMM,mBAAmB9H,IAAI,OAWtEsI,EAAc,SAACd,EAAOC,EAAUc,GAClCjB,EAAYE,GAAOc,YAAYC,I,SAOpBC,E,8EAAf,WAA+BhB,GAA/B,iBAAApM,EAAA,0DACQoM,EAAMlE,iBADd,sBAEcmF,EAAQjB,EAAMkB,OAAOlB,EAAMmB,gBACvBC,WAHlB,iCAIiCH,EAAMG,WAAWC,iBAJlD,cAIkBC,EAJlB,gBAKkBA,EAAOC,MAAMzB,EAAYE,GAAOwB,gBALlD,wBAMkBF,EAAOG,QANzB,QAOYC,IAAMC,QAAQ,2BAP1B,wBAQoBV,EAAMG,WAGdM,IAAME,KAAK,0BAFX9B,EAAYE,GAAO6B,wBAT/B,gCAcQH,IAAME,KAAK,0BAdnB,6C,sBAkBA,IAAME,EAAQ,uCAAG,WAAO9B,EAAOC,EAAU8B,EAAMX,GAA9B,iBAAAxN,EAAA,0DACTmO,EADS,oBAEHC,EAAK,IAAIC,WACThM,EAAc8L,EAAKG,KACU,YAA/BH,EAAKG,KAAKtE,MAAM,KAAKuE,MAJhB,oBAKLH,EAAGI,OAAS,SAACpT,GACTgQ,EAAOhQ,EAAE+B,OAAOsR,QAAQC,MAAK,YAAqB,IAAlBpM,EAAiB,EAAjBA,WAC5B+J,EAAS,CACLxQ,KAAMsC,IAAEwQ,UACRzM,QAAS,CACLG,cAAauM,QAASxT,EAAE+B,OAAOsR,OAAQjB,aAAYqB,SAAUV,EAAKG,KAAMhM,qBAKpFkL,EAfC,6BAeWY,EAfX,SAe+BZ,EAAWsB,UAf1C,wBAecC,WAfd,wCAgBAX,EAAGW,WAAWZ,GAhBd,4CAAH,4DA8BRa,EAAa,SAAC5C,EAAOC,GACvBA,EAAS,CACLxQ,KAAMsC,IAAE8Q,cACR/M,QAAS,CAAEgN,MAAM,MAInBC,EAAa,SAAC/C,EAAOC,GACvBA,EAAS,CAAExQ,KAAMsC,IAAEiR,aAGjBC,EAAW,SAACjD,GACdF,EAAYE,GAAOiD,YAUjBC,EAAO,SAAClD,GACNF,EAAYE,IAAQF,EAAYE,GAAOkD,QAEzCC,EAAO,SAACnD,GACVF,EAAYE,GAAOmD,QAWjBC,EAAa,SAACpD,EAAOC,GACvBA,EAAS,CAAExQ,KAAMsC,IAAEsR,qBAAsBvN,SAAS,KAGhDwN,EAAc,SAACtD,EAAOC,GACxBA,EAAS,CAAExQ,KAAMsC,IAAEwR,kBAAmBzN,SAAS,K,kBC/EpC0N,EApFA,SAAC,GAAgC,IAA9BxN,EAA6B,EAA7BA,WAAYlE,EAAiB,EAAjBA,WACpB2R,EAAW,SAACtU,EAAGwF,GACjBA,EAAE+O,kBAEGlO,OAAOC,QAAQ,mEACpBiE,IAAoB5G,OAAOkD,EAAWkL,OAAO/R,GAAK6G,EAAWkL,OAAO/R,GAAG8I,QAAU,MACjFnG,EAAW,CAAErC,KAAMsC,IAAE4R,aAAc7N,QAAS3G,IACvC6G,EAAWmL,eACZrP,EAAW,CAAErC,KAAMsC,IAAE6R,iBAAkB9N,QAAS,SAGlD+N,EAAU,SAAClP,GACbA,EAAE+O,kBACsB5R,ED4HnB,CACLrC,KAAMsC,IAAE+R,uBACRhO,SAAS,KC3Gb,OAjBAiO,IAAMC,WAAU,WACZC,YAAQ,gCAAgC,SAACC,GACrCA,EAAMC,iBACNC,SAASvM,eAAe,aAAawM,WAEzCJ,YAAQ,gCAAgC,SAACC,GACrCA,EAAMC,iBACN,IAAMzO,EAAK0O,SAASE,cAAc,2CAC9B5O,GAAIA,EAAG2O,WAEfJ,YAAQ,gCAAgC,SAACC,GACrCA,EAAMC,iBACN,IAAMzO,EAAK0O,SAASE,cAAc,4CAC9B5O,GAAIA,EAAG2O,aAEhB,IAGC,sBAAKpI,UAAU,UAAf,UACI,wBACIA,UAAU,MACVG,QAAS2G,EAAWwB,KAAK,EAAMvO,EAAYlE,GAC3CrC,KAAK,SACLG,GAAG,YACH4U,WAAS,sCALb,SAOI,cAAC,IAAD,CAAOC,KAAM,OAEhBzO,EAAWkL,OAAOjN,KAAI,SAACyB,EAAIvG,GAAL,OACnB,sBAEI8M,UAAS,wBAAmBjG,EAAWmL,gBAAkBhS,EAAI,WAAa,QAC1EiN,QAAS,kBAAMtK,EAAW,CAAErC,KAAMsC,IAAE2S,WAAY5O,QAAS3G,KACzDmN,UAAW,SAACxD,GAAD,MAAmB,MAAXA,EAAGrG,KAAeX,EAAW,CAAErC,KAAMsC,IAAE2S,WAAY5O,QAAS3G,KAC/E+M,KAAK,SACLC,SAAU,EACVvM,GAAE,cAAST,GAPf,UASI,sBAAM8M,UAAU,WAAhB,SACKvG,EAAG+M,UAAY/M,EAAGO,cAGtBD,EAAWmL,gBAAkBhS,EAC1B,wBACI8M,UAAU,eACVG,QAASyH,EACTpU,KAAK,SACL+U,WAAS,2CACTG,WAAS,aALb,SAOI,cAAC,IAAD,CAAQF,KAAM,OAElB,6BACJ,wBACIxI,UAAU,gBACVG,QAASqH,EAASc,KAAK,EAAMpV,GAC7BM,KAAK,SACL+U,WAAS,4CACTG,WAAS,aALb,SAOI,cAAC,IAAD,CAASF,KAAM,OAEnB,cAAC,IAAD,CAAcG,MAAM,SAASnV,KAAK,OAAOoV,OAAO,QAAQjV,GAAG,iBAhCtD8F,EAAGuC,gB,4DCHb6M,GArDA,SAAC,GAAD,IACbvV,EADa,EACbA,MAAOK,EADM,EACNA,GAAImV,EADE,EACFA,KAAMC,EADJ,EACIA,KAAMzR,EADV,EACUA,MAAOD,EADjB,EACiBA,OAAQiL,EADzB,EACyBA,QAASE,EADlC,EACkCA,MADlC,MAER,CACL3P,EAAG,CACDc,MAEFD,KAAM,CACJ,CACEb,EAAG,CACD2D,IAAK,MAEP,cAAe,CACb,CACE,aAAc,CACZ,CACE3D,EAAG,CACDwE,SACAC,QACAvE,EAAG+V,EACH9V,EAAG+V,KAIT,SAAU,CACR,CACElW,EAAG,CACDmW,MA1BD,EACyCvG,gBA0BxCH,aAIN,gBAAiB,CACf,CACEzP,EAAG,CACDmW,MAlCD,EAC0DtG,YAkCzDpL,MAnCD,EACuEqL,eAsC5E,cAAe,CAACrP,GAChB,UAAW,CACT,CACET,EAAG,CACDW,KAAMgP,WCEP+D,GA7CC,SAAC,GAAD,IACdhO,EADc,EACdA,MAAO/D,EADO,EACPA,MAAOb,EADA,EACAA,GAAIqG,EADJ,EACIA,YAAaC,EADjB,EACiBA,WAAYwJ,EAD7B,EAC6BA,cAD7B,MAET,CACLwF,QAAS,CACPpW,EAAG,CACDqW,MAAO,wCACP,YAAa,4CACb,qBAAsB,kGACtB,UAAW,qCAEb1S,IAAK,CACH,CACE3D,EAAG,CACDsW,IAAK,OACLxV,GAAI,KACJ,cAAe,iBAGnB,CACEd,EAAG,CACDsW,IAAK,OACLxV,GAAI,MACJ,cAAe,kBAIrBqR,MAAO,CACL,CACEnS,EAAG,CACDuW,YAAa,WACbzV,KACAqG,cACAkC,SAhCM,EAC4CA,SAgClDiJ,WAjCM,EACsDA,WAiC5DqB,SAlCM,EACkEA,SAkCxEvM,cAEFpG,KAAM0E,EACN1D,KAAML,EACNiP,qBCgBO4F,GAvDA,SAAC,GAAD,IACb1V,EADa,EACbA,GAAIL,EADS,EACTA,MAAOqC,EADE,EACFA,OAAQb,EADN,EACMA,OAAQwU,EADd,EACcA,UAAWC,EADzB,EACyBA,UAAWpU,EADpC,EACoCA,UADpC,MAER,CACLtC,EAAG,CACDc,KACAgC,SACAb,UAEFpB,KAAM,CACJ,CACEb,EAAG,CACD2D,IAAK,OAEP,gBAAiB,CACf,CACE3D,EAAG,CACD2W,cAAe,8BAEjB,cAAe,CACb,CACE3W,EAAG,CACDmW,MAAOM,EACPhS,MAAOiS,EACP/V,KAvBD,EAC+CA,QA0BpD,WAAY,CACV,CACEX,EAAG,CACD8C,OAAQ,OACRb,OAAQ,WAId,cAAe,CAACxB,GAChB,SAAU,CACR,CACET,EAAG,CACD4W,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,OAEN,UAAW,CACT,CAAE/W,EAAGsC,YCRN0U,GAhCC,SAACC,GACb,IAAMvR,EAAQuR,EAAEvR,MAAMP,KAAI,SAACnE,GAAD,OAAWgV,GAAO,aACxCvV,MAAOO,EAAKP,MACZK,GAAIE,EAAKF,GACTmV,KAAMjV,EAAKR,SAASN,EACpBgW,KAAMlV,EAAKR,SAASL,GACjBa,EAAKN,WAENiB,EAAQsV,EAAEtV,MAAMwD,KAAI,SAAC+R,EAAK7W,GAAN,OAAYmW,GAAO,CACzC1V,GAAIT,EACJI,MAAOyW,EAAIzW,MACXqC,OAAQoU,EAAIpU,OACZb,OAAQiV,EAAIjV,OACZwU,UAAWS,EAAIxW,MAAMkP,gBACrB8G,UAAWQ,EAAIxW,MAAMsP,UACrB1N,UAAW4U,EAAItU,SAASN,UACxB3B,KAAMuW,EAAIxW,MAAMiP,WAEdwH,EAAIzD,GAAQ,CACdhO,QACA/D,QACAwF,YAAa8P,EAAE9P,YACfrG,GAAImW,EAAEnW,GACN8P,cAAeqG,EAAErG,cACjBvH,SAAU4N,EAAE5N,SACZiJ,WAAY2E,EAAE3E,WACdqB,SAAUsD,EAAEtD,SACZvM,WAAY6P,EAAE7P,aAGlB,OADY,IAAIkJ,IAAO8G,SAAUC,YAAYF,I,mEChClCG,G,2JCMX,SAAIC,GACA,IAAQlO,EAAakO,EAAblO,SACR,2DAAUkO,GACNlO,IACAvJ,KAAK0X,YAAYnO,GACjBvJ,KAAKkD,WAAW,CAAErC,KAAMsC,IAAEwU,sBAAuBzQ,QAAS0Q,QAAQ5X,KAAKuJ,e,mBAsD/E,WAEIsO,KAAMC,KAAN,sCAA0C9X,KAAKoH,WAAW2Q,gBAA1D,kBAAmF/X,KAAKoH,WAAWkL,OAAOtS,KAAKoH,WAAWmL,eAAesB,SAAS7E,MAAM,KAAK,KACxJ0E,MAAK,SAACsE,GACHC,MAAMD,EAAIjX,KAAJ,YACPmX,OAAM,SAACpS,GACNmS,MAAMnS,MAEV9F,KAAKuJ,W,mBAGb,WAEIsO,KAAMC,KAAN,sCAA0C9X,KAAKoH,WAAWkL,OAAOtS,KAAKoH,WAAWmL,eAAesB,SAAS7E,MAAM,KAAK,KAC/G0E,MAAK,SAACsE,GACHC,MAAMD,EAAIjX,KAAJ,YACPmX,OAAM,SAACpS,GACNmS,MAAMnS,MAEV9F,KAAKuJ,W,iBAGb,WAEIsO,KAAMC,KAAN,oCAAwC9X,KAAKoH,WAAWkL,OAAOtS,KAAKoH,WAAWmL,eAAesB,SAAS7E,MAAM,KAAK,KAC7G0E,MAAK,SAACsE,GACHC,MAAMD,EAAIjX,KAAJ,YACPmX,OAAM,SAACpS,GACNmS,MAAMnS,MAEV9F,KAAKuJ,W,mBAGb,WAEIsO,KAAMC,KAAN,sCAA0C9X,KAAKoH,WAAWkL,OAAOtS,KAAKoH,WAAWmL,eAAesB,SAAS7E,MAAM,KAAK,KAC/G0E,MAAK,SAACsE,GACHC,MAAMD,EAAIjX,KAAJ,YACPmX,OAAM,SAACpS,GACNmS,MAAMnS,MAEV9F,KAAKuJ,W,kBAGb,WAEIsO,KAAMC,KAAN,qCAAyC9X,KAAKoH,WAAWkL,OAAOtS,KAAKoH,WAAWmL,eAAesB,SAAS7E,MAAM,KAAK,KAC9G0E,MAAK,SAACsE,GACHC,MAAMD,EAAIjX,KAAJ,YACPmX,OAAM,SAACpS,GACNmS,MAAMnS,MAEV9F,KAAKuJ,W,qBAGb,WAEIsO,KAAM3L,OAAN,wCAA8ClM,KAAKoH,WAAWkL,OAAOtS,KAAKoH,WAAWmL,eAAesB,SAAS7E,MAAM,KAAK,KACnH0E,MAAK,SAACsE,GACHC,MAAMD,EAAIjX,KAAJ,YACPmX,OAAM,SAACpS,GACNmS,MAAMnS,MAEV9F,KAAKuJ,W,0BAGb,WACI,qEACAvJ,KAAKkD,WAAW,CAAErC,KAAMsC,IAAEwU,sBAAuBzQ,QAAS0Q,QAAQ5X,KAAKuJ,gB,uDC3H3E,aAAsB,IAAD,iDAAN/J,EAAM,yBAANA,EAAM,uBACjB,+BAASA,KACJ2Y,mBAAqB,KAFT,E,kDAKrB,WAAkB,IAAD,OACb,uEACAnY,KAAKC,GAAGoG,GAAG,6BAA8B,sBAAsB,kBAAM,EAAK+R,sBAC1EpY,KAAKC,GAAGoG,GAAG,kBAAmB,sBAAsB,kBAAM,EAAK+R,sBAC/DpY,KAAKC,GAAGoG,GAAG,wCAAwC,kBAAM,EAAK+R,wB,yBAGlE,SAAYjG,GACRnS,KAAKC,GAAGuE,KAAK,aACbxE,KAAKC,GAAGC,EAAE,cAAcgE,SACT,QAAXiO,GAAkBkG,kBAAOrY,KAAKC,GAAGqY,IAAI,CAAEC,MAAM,IAArB,UAAiCvY,KAAKwY,UAAtC,qBACb,QAAXrG,GAAkBkG,kBAAOrY,KAAKC,GAAGwY,IAAI,CAAEF,MAAM,IAArB,UAAiCvY,KAAKwY,UAAtC,uB,+BAGhC,SAAkBE,GACd,MAA6C,UAAtC1Y,KAAK2B,QAAQ+W,GAAQ3X,KAAK,U,+BAGrC,SAAkB4X,GACd,MAA6C,UAAtC3Y,KAAK2B,QAAQgX,GAAQ5X,KAAK,U,6BAIrC,SAAgB2X,GACZ,OAAOA,I,0BAWX,WAAgB,IAAD,OACLrG,EAAQ,CACVzM,MAAO,GACP/D,MAAO,GACPiP,cAAe,GACfzJ,YAAarH,KAAKqH,YAClBrG,GAAIhB,KAAKgB,GACTuI,SAAUvJ,KAAKuJ,SACfsK,SAAU,KACVrB,WAAY,KACZlL,WAAYtH,KAAKsH,YAmCrB,OAjCAtH,KAAKC,GAAG2F,QAAQ3D,SAAQ,SAACf,GACrB,GAAI,EAAK0X,kBAAkB1X,EAAKF,MAAO,CACnC,IAAM6X,EAAM3X,EAAK+C,OACX6U,EAAW,CACbnY,MAAOkY,EAAI9X,KAAKJ,MAChBK,GAAI6X,EAAI9X,KAAKC,GACbN,SAAUmY,EAAInY,SACdE,MAAO,IAEXkY,EAASlY,MAAQ,EAAKgD,SAAS1C,EAAKF,MACpCqR,EAAMzM,MAAM4I,KAAKsK,OAGzB9Y,KAAKC,GAAG4B,QAAQI,SAAQ,SAACC,GACrB,GAAI,EAAK6W,kBAAkB7W,EAAKlB,MAAO,CACnC,IAAMgY,EAAW9W,EAAK+B,OAAOlD,KAC7BiY,EAAShW,OAAS,EAAKuC,gBAAgBrD,EAAKc,SAAShC,MACrDgY,EAASpY,MAAQ,EAAKgD,SAAS1B,EAAKlB,MACpCgY,EAASlW,SAASN,UAAYC,KAAsBmI,cAChDoO,EAASlW,SAASP,WAAYyW,EAASlW,SAASV,aAChDF,EAAKc,SAAStC,WAAYwB,EAAKC,SAASzB,YAE5C2R,EAAMxQ,MAAM2M,KAAKwK,OAGzB3G,EAAMvB,cAAgB9Q,KAAKgH,UAAU3B,KAAI,gBACrCpE,EADqC,EACrCA,IAAK+P,EADgC,EAChCA,QAASD,EADuB,EACvBA,WAAYkI,EADW,EACXA,KADW,MAElC,CACHhY,MACA+P,QAASkI,EAAcC,gBAAgBnI,GACvCD,WAAYmI,EAAcC,gBAAgBpI,GAC1CkI,WAEG5G,I,qBAGX,WACI,MAAM,GAAN,OAAUrS,KAAKqH,e,+DAGnB,wCAAArC,EAAA,yDACUoU,EAAMC,GAAerZ,KAAKsZ,gBAC1BC,GAAQ,IAAIC,aAAcC,OAAOL,GACjCM,EAAO,IAAIC,KAAK,CAACJ,GAAQ,CAAE1Y,KAAM,oCACK,IAAxC+Y,UAAUC,UAAU/U,QAAQ,SAA4D,IAA3C8U,UAAUC,UAAU/U,QAAQ,UAJjF,wBAKcgV,EAAU,CACZC,MAAO,CACH,CACIC,YAAa,gBACbC,OAAQ,CACJ,eAAgB,CAAC,gBAVzC,SAe6BrT,OAAOsT,mBAAmBJ,GAfvD,cAecK,EAfd,iBAgB6BA,EAAO1H,iBAhBpC,eAgBcC,EAhBd,iBAiBcA,EAAOC,MAAM+G,GAjB3B,yBAkBchH,EAAOG,QAlBrB,gCAqBcgB,EAAWuG,OAAO,aACxB/B,kBAAOqB,EAAD,UAAU7F,GAAQ,UAAO7T,KAAKwY,UAAZ,YAAlB,aAtBd,QAwBI1F,IAAMC,QAAQ,2BAxBlB,iD,gIA2BA,wCAAA/N,EAAA,2DAC0B4U,WAD1B,EACYC,UACMQ,MAAM,kBAFxB,uBAGQvH,IAAME,KAAK,0BAHnB,iCAMUoG,EAAMC,GAAerZ,KAAKsZ,gBAC1BC,GAAQ,IAAIC,aAAcC,OAAOL,GACjCM,EAAO,IAAIC,KAAK,CAACJ,GAAQ,CAAE1Y,KAAM,mCACjCiZ,EAAU,CACZC,MAAO,CACH,CACIC,YAAa,gBACbC,OAAQ,CACJ,eAAgB,CAAC,gBAdrC,UAmByBrT,OAAOsT,mBAAmBJ,GAnBnD,eAmBUK,EAnBV,OAoBIna,KAAKkD,WAAW,CACZrC,KAAMsC,IAAEmX,gBACRpT,QAAS,CAAEqL,cAAevS,KAAKoH,WAAWmL,cAAeC,WAAY2H,KAtB7E,UAwByBA,EAAO1H,iBAxBhC,eAwBUC,EAxBV,iBAyBUA,EAAOC,MAAM+G,GAzBvB,yBA0BUhH,EAAOG,QA1BjB,QA2BIC,IAAMC,QAAQ,2BA3BlB,iD,gFA8BA,WAEI,OADYsG,GAAerZ,KAAKsZ,kB,wBAIpC,WACI,OAAOD,GAAerZ,KAAKsZ,kB,sBAG/B,SAASiB,GAAU,IAAD,OACdA,EAAQ3U,MAAM3D,SAAQ,SAACf,GACnB,EAAKsQ,QAAQtQ,EAAKP,MAAOO,EAAKN,MAAO,QAASM,EAAKR,SAAU,GAAIQ,EAAKF,GAAI,MAE9EuZ,EAAQ1Y,MAAMI,SAAQ,SAACC,GACnB,EAAK8G,QAAL,2BAAkB9G,GAAlB,IAAwBT,SAAUS,EAAKc,OAAQtB,SAAUQ,EAAKC,SAAU,MAE5EoY,EAAQzJ,cAAc7O,SAAQ,YAEvB,IADH+O,EACE,EADFA,QAASD,EACP,EADOA,WAAY9P,EACnB,EADmBA,IAErB,EAAKI,UAAU6X,EAAcsB,YAAYxJ,GAAUkI,EAAcsB,YAAYzJ,GAAa9P,MAE9FjB,KAAKya,eAAeF,EAAQlT,aAC5BrH,KAAK0X,YAAY1X,KAAKuJ,UAAYgR,EAAQhR,UAC1CvJ,KAAK0a,iBAAiBH,EAAQjT,c,8BAGlC,WAAoB,IAAD,OACiB,OAA5BtH,KAAKmY,oBAA6BwC,aAAa3a,KAAKmY,oBACxDnY,KAAKmY,mBAAqByC,YAAW,kBAAM9P,IAAoBgB,KAAK,EAAK9K,GAAI,EAAKsY,kBAAiB,O,wBAGvG,SAAW1F,GAAU,IAAD,OAChBiH,EAAcjH,GAASF,MAAK,SAACoH,GACzBhQ,IAAoBgB,KAAK,EAAK9K,GAAI8Z,GAClC,EAAKC,iC,+BAIb,WACIjQ,IAAoB4B,WAAW1M,KAAKgB,M,uCAGxC,WACIhB,KAAKkG,QACL,IAAM6F,EAAejB,IAAoBe,IAAI7L,KAAKgB,IAClD,QAAK+K,IACL/L,KAAKgb,SAASjP,IACP,K,4BAGX,WACI,OAAOnF,OAAOmE,KAAKM,KAAKC,UAAUtL,KAAKsZ,oB,8BAxK3C,YAAoD,IAA3BhY,EAA0B,EAA1BA,WAAYE,EAAc,EAAdA,WACjC,MAAO,CAAEF,aAAYE,WAAYoF,OAAOmE,KAAKM,KAAKC,UAAU9J,O,yBAGhE,YAAgD,IAA3BF,EAA0B,EAA1BA,WAAYE,EAAc,EAAdA,WAC7B,MAAO,CAAEF,aAAYE,WAAY6J,KAAKE,MAAM3E,OAAO4E,KAAKhK,S,uDCrC5D,aAAuB,IAAD,mDAAPyZ,EAAO,yBAAPA,EAAO,uBAClB,+BAASA,KAEJC,eAAL,oBACK3Z,KAAG1C,UAAW,wCAAIW,EAAJ,yBAAIA,EAAJ,uBAAa,KAAKgS,QAAL,QAAgBhS,EAAhB,QAAsB,QADtD,eAEK+B,KAAGzC,UAAW,wCAAIU,EAAJ,yBAAIA,EAAJ,uBAAa,KAAKwJ,QAAL,QAAgBxJ,EAAhB,QAAsB,QAFtD,eAGK+B,KAAGxC,aAAc,wCAAIS,EAAJ,yBAAIA,EAAJ,uBAAa,KAAKqS,WAAL,QAAmBrS,EAAnB,QAAyB,QAH5D,eAIK+B,KAAGvC,aAAc,wCAAIQ,EAAJ,yBAAIA,EAAJ,uBAAa,KAAKyS,WAAL,QAAmBzS,EAAnB,QAAyB,QAJ5D,eAKK+B,KAAGtC,aAAc,wCAAIO,EAAJ,yBAAIA,EAAJ,uBAAa,KAAK2b,WAAL,QAAmB3b,EAAnB,QAAyB,QAL5D,eAMK+B,KAAGrC,UAAW,wCAAIM,EAAJ,yBAAIA,EAAJ,uBAAa,KAAK8E,WAAL,QAAmB9E,EAAnB,QAAyB,QANzD,eAOK+B,KAAGpC,UAAW,wCAAIK,EAAJ,yBAAIA,EAAJ,uBAAa,KAAKuH,WAAL,QAAmBvH,EAAnB,QAAyB,QAPzD,eAQK+B,KAAGnC,SAAU,wCAAII,EAAJ,yBAAIA,EAAJ,uBAAa,KAAKoF,OAAL,QAAepF,EAAf,QAAqB,QARpD,eASK+B,KAAGlC,SAAU,wCAAIG,EAAJ,yBAAIA,EAAJ,uBAAa,KAAK4b,OAAL,QAAe5b,EAAf,QAAqB,QATpD,eAUK+B,KAAGjC,WAAY,wBAAa,KAAK+b,iBAAL,sBAVjC,GAaA,EAAKrU,UAAY,GACjB,EAAKsU,eAAiB,EAjBJ,E,kDAoBtB,WACItb,KAAKgH,UAAY,GACjBhH,KAAKsb,eAAiB,I,sBAG1B,WACItb,KAAKkD,WAAW,CAAErC,KAAMsC,IAAEoY,SAAUrU,QAAiC,IAAxBlH,KAAKsb,iBAClDtb,KAAKkD,WAAW,CAAErC,KAAMsC,IAAEqY,SAAUtU,QAASlH,KAAKsb,iBAAmBtb,KAAKgH,UAAUxG,W,2BAGxF,YAA2C,IAA3Bc,EAA0B,EAA1BA,WAAYE,EAAc,EAAdA,WACTxB,KAAKkb,cAAc5Z,GAC5B,WAAN,eAAUE,M,+BAGd,SAAkBR,EAAIya,EAASC,GAC3B,IAAMza,GAAM,IAAIpB,MAAOC,UACvBE,KAAKqB,UACD,CAAEC,WAAYC,KAAGnC,QAASoC,WAAY,CAACR,EAAIya,EAASC,IACpD,CAAEpa,WAAYC,KAAGnC,QAASoC,WAAY,CAACR,EAAI0a,EAAQD,IAAYxa,K,gCAIvE,SAAmBD,EAAI2a,EAASF,EAASG,EAAQF,GAC7C,IAAMza,GAAM,IAAIpB,MAAOC,UACvBE,KAAKqB,UACD,CAAEC,WAAYC,KAAGlC,QAASmC,WAAY,CAACR,EAAI2a,EAASF,IACpD,CAAEna,WAAYC,KAAGlC,QAASmC,WAAY,CAACR,EAAI4a,EAAQF,IAAWza,K,2BAItE,SAAcD,EAAI6a,EAAQC,GACtB,IAAM7a,GAAM,IAAIpB,MAAOC,UACvBE,KAAKqB,UACD,CAAEC,WAAYC,KAAGjC,UAAWkC,WAAY,CAACR,EAAI6a,IAC7C,CAAEva,WAAYC,KAAGjC,UAAWkC,WAAY,CAACR,EAAI8a,IAAU7a,K,uBAkB/D,SAAU+P,EAASD,EAAY9P,GAC3B,GAAY,IAARA,EAAJ,CACAjB,KAAKgH,UAAU+U,OAAO/b,KAAKsb,gBAE3B,IAAMU,EAAiBC,EAAcC,WAAWnL,GAAYlM,WACtDoX,EAAcC,WAAWnL,GAAYlM,WACrC5D,EACNjB,KAAKgH,UAAUwH,KAAK,CAChBvN,MACA+P,UACAD,aACAkI,KAAMkD,KAAI,GAAD,OACFH,EADE,YACgBhc,KAAKgH,UAAUxG,OAASR,KAAKgH,UAAUoV,IAAI,GAAGnD,KAAO,OAGlFjZ,KAAKsb,gBAAkB,EACvBtb,KAAKqc,c,8BAGT,WACgC,IAAxBrc,KAAKsb,iBACLtb,KAAKsb,gBAAkB,EACvBtb,KAAKsc,cAActc,KAAKgH,UAAUhH,KAAKsb,gBAAgBtK,SACvDhR,KAAKqc,c,8BAIb,WACQrc,KAAKsb,iBAAmBtb,KAAKgH,UAAUxG,SACvCR,KAAKsc,cAActc,KAAKgH,UAAUhH,KAAKsb,gBAAgBvK,YACvD/Q,KAAKsb,gBAAkB,EACvBtb,KAAKqc,c,kBAIb,WACI,IAAIE,EAAS,KAEb,IAD4B,IAAxBvc,KAAKsb,iBAAsBiB,EAASvc,KAAKgH,UAAUhH,KAAKsb,eAAiB,GAAGra,KACjD,IAAxBjB,KAAKsb,gBAAwBtb,KAAKgH,UAAUhH,KAAKsb,eAAiB,GAAGra,MAAQsb,GAChFvc,KAAKsb,gBAAkB,EACvBtb,KAAKsc,cAActc,KAAKgH,UAAUhH,KAAKsb,gBAAgBtK,SAE3DhR,KAAKqc,a,kBAGT,WACI,IAAIE,EAAS,KAEb,IADIvc,KAAKsb,iBAAmBtb,KAAKgH,UAAUxG,SAAQ+b,EAASvc,KAAKgH,UAAUhH,KAAKsb,gBAAgBra,KACzFjB,KAAKsb,iBAAmBtb,KAAKgH,UAAUxG,QAAUR,KAAKgH,UAAUhH,KAAKsb,gBAAgBra,MAAQsb,GAChGvc,KAAKsc,cAActc,KAAKgH,UAAUhH,KAAKsb,gBAAgBvK,YACvD/Q,KAAKsb,gBAAkB,EAE3Btb,KAAKqc,a,0BAGT,WACI,qEACArc,KAAKqc,a,4BAGT,WAAkB,IAAD,OACb,uEACArc,KAAKC,GAAGoG,GAAG,WAAY,wBAAwB,SAACN,GAC5CA,EAAE5D,OAAOF,SAAQ,SAACf,GACd,EAAKsb,kBAAkBtb,EAAKF,KAAME,EAAK6I,QAAQ,YAA/C,eAAiE7I,EAAKR,mBAG9EV,KAAKC,GAAGoG,GAAG,yBAAyB,SAACN,EAAGlF,EAAMK,GAC1C,EAAKub,mBACDvb,EAAKF,KACL,CAAE0D,OAAQxD,EAAK6I,QAAQ,UAAWpF,MAAOzD,EAAK6I,QAAQ,UACtD7I,EAAK6I,QAAQ,YACb,CAAErF,OAAQxD,EAAKH,KAAK,SAAS2D,OAAQC,MAAOzD,EAAKH,KAAK,SAAS4D,OAJnE,eAKSzD,EAAKR,mB,yBAvFtB,SAAkBwN,GACd,KAAMA,aAAeS,QAAS,OAAOT,EACrC,IAAIwO,EAAI,GASR,OARIxO,aAAexC,MACfgR,EAAIxO,EAAI7I,IAAI4W,EAAcC,YAE1BvN,OAAOC,KAAKV,GAAKyO,OAAO1a,SAAQ,SAAC2a,GAC7BF,EAAElO,KAAF,WAAWoO,EAAX,MACAF,EAAElO,KAAKyN,EAAcC,WAAWhO,EAAI0O,QAGrCF,M,GA7Eand,QCLtBsd,GAAgB,CAClBC,MADkB,SACZC,EAAIC,GACN,IAAMC,GAAKF,EAAG1c,EAAI2c,EAAG3c,IAAM0c,EAAG3c,EAAI4c,EAAG5c,GAErC,MAAO,CAAC6c,EADEF,EAAG1c,EAAI4c,EAAIF,EAAG3c,IAG5B8c,QANkB,SAMVC,EAAIC,EAAGza,EAAG0a,GACd,GAAIF,EAAG/c,IAAMgd,EAAEhd,EAAG,MAAO,CAACgd,EAAEhd,EAAGgd,EAAEhd,GACjC,IAAM4c,EAAK,CAAE5c,EAAGgd,EAAEhd,EAAI+c,EAAG/c,EAAGC,EAAG+c,EAAE/c,EAAI8c,EAAG9c,GACxC,EAAeL,KAAK8c,MAAM,CAAE1c,EAAG,EAAGC,EAAG,GAAK2c,GAA1C,mBAAOC,EAAP,KAAUlU,EAAV,KAEMqG,EAAK,SAAAzM,EAAK,GAAL,SAASsa,EAAK,GAAd,SAAkBI,EAAK,GAC5BC,EAAI,WAAI3a,EAAK,GAAIsa,EAAIlU,EACrBwU,EAAI,SAAA5a,EAAK,IAAK,SAAAoG,EAAK,GAAL,SAASsU,EAAK,IAC5BG,EAAI,SAAAF,EAAK,GAAI,EAAIlO,EAAImO,EAG3B,MAAO,GAFMD,EAAD,SAAKE,EAAK,MAAQ,EAAIpO,GAAK+N,EAAG/c,IAC7Bkd,EAAA,KAAD,IAAKE,EAAK,MAAQ,EAAIpO,GAAK+N,EAAG/c,IAG9Cqd,QAnBkB,SAmBVF,EAAGH,EAAGza,EAAG0a,EAAGK,EAAIC,GACpB,GAAID,IAAOC,EAAI,MAAO,CAACJ,EAAEld,EAAIgd,EAAGE,EAAEld,EAAIgd,GACtC,MAAerd,KAAK8c,MAAMS,EAAGH,GAA7B,mBAAOH,EAAP,KAAUlU,EAAV,KACA,MAAO,CAACkU,EAAIS,EAAK3U,EAAGkU,EAAIU,EAAK5U,IAEjC6U,KAxBkB,SAwBbxO,EAAGkO,GACJ,OAAO,KAAP,IAAQ,SAAClO,EAAEhP,EAAIkd,EAAEld,EAAM,GAAf,SAAoBgP,EAAE/O,EAAIid,EAAEjd,EAAM,GAAM,KAEpDwd,kBA3BkB,SA2BAN,EAAGH,EAAGza,EAAG0a,GACvB,MAAiBrd,KAAKkd,QAAQK,EAAGH,EAAGza,EAAG0a,GAAvC,mBAAOK,EAAP,KAAWC,EAAX,KACA,EAAiB3d,KAAKyd,QAAQF,EAAGH,EAAGza,EAAG0a,EAAGK,EAAIC,GAA9C,mBAAOG,EAAP,KAAWC,EAAX,KACA,EAAiB,CAAC/d,KAAK4d,KAAKR,EAAG,CAAEhd,EAAGsd,EAAIrd,EAAGyd,IAAO9d,KAAK4d,KAAKR,EAAG,CAAEhd,EAAGud,EAAItd,EAAG0d,KAC3E,OADA,UACoB,CAAE3d,EAAGsd,EAAIrd,EAAGyd,GACzB,CAAE1d,EAAGud,EAAItd,EAAG0d,IAEvBC,MAlCkB,SAkCZN,EAAII,EAAIH,EAAII,GACd,OAAQL,EAAKC,IAAOG,EAAKC,IAG7BE,QAtCkB,SAsCVV,EAAGH,EAAGza,EAAG0a,GACb,MAAiB,CAAC,CAACE,EAAEnd,EAAIuC,EAAG4a,EAAEld,EAAIgd,GAAI,CAACE,EAAEnd,EAAIuC,EAAG4a,EAAEld,EAAIgd,IACjDhY,KAAI,mCAAEjF,EAAF,KAAKC,EAAL,YAAckd,EAAEnd,EAAIA,IAAMgd,EAAE/c,EAAIA,IAAMkd,EAAEld,EAAIA,IAAM+c,EAAEhd,EAAIA,GAAM,KADvE,mBAAO8d,EAAP,KAAWC,EAAX,KAEA,OAAID,IAAOC,EAAW,EACjBD,GAAOC,GACPD,GAAMC,EAAW,EAClBD,GAAMC,EAAW,GACb,EAHe,GAM3BC,eAhDkB,SAgDHb,EAAGH,EAAGza,EAAG0a,GACpB,MAAerd,KAAK8c,MAAMM,EAAGG,GAA7B,mBAAON,EAAP,KAAUlU,EAAV,KACIyU,EAAI,CACJ,CAACD,EAAEnd,EAAIuC,EAAG4a,EAAEld,GACZ,CAACkd,EAAEnd,EAAGmd,EAAEld,EAAIgd,GACZ,CAACE,EAAEnd,EAAIuC,EAAG4a,EAAEld,GACZ,CAACkd,EAAEnd,EAAGmd,EAAEld,EAAIgd,IAEZ/W,KAAK+X,IAAIpB,KAAOqB,MAChBd,EAAI,CACA,CAACD,EAAEnd,EAAIuC,EAAGsa,GAAKM,EAAEnd,EAAIuC,GAAKoG,GAC1B,EAAEwU,EAAEld,EAAIgd,EAAItU,GAAKkU,EAAGM,EAAEld,EAAIgd,GAC1B,CAACE,EAAEnd,EAAIuC,EAAGsa,GAAKM,EAAEnd,EAAIuC,GAAKoG,GAC1B,EAAEwU,EAAEld,EAAIgd,EAAItU,GAAKkU,EAAGM,EAAEld,EAAIgd,KAGlC,kBAAeG,EAAExd,KAAKie,QAAQV,EAAGH,EAAGza,EAAG0a,IAAvC,GACA,MAAO,CAAEjd,EADT,KACYC,EADZ,OAGJwL,IAnEkB,SAmEd0R,EAAGH,EAAGza,EAAG0a,EAAGxc,GACZ,MAAa,cAATA,EAA6Bgc,GAAcuB,eAAeb,EAAGH,EAAGza,EAAG0a,GAChER,GAAcgB,kBAAkBN,EAAGH,EAAGza,EAAG0a,KAKzCR,MAAf,ICxEe0B,G,sKCIX,WACI,uEACAve,KAAKC,GAAGoG,GAAG,kBAAmB,sBAAsB,SAAC4D,GACjDA,EAAI9H,OAAO4B,iBAAiBya,eAAe,wBAAwBvc,SAAQ,SAACwc,GACxEA,EAAS/d,SAASge,EAAcC,eAAeF,UAGvDze,KAAKC,GAAGoG,GAAG,WAAW,SAAC4D,GACnB,IAAMwU,EAAWxU,EAAI9H,OAAOa,SAC5Byb,EAAS/d,SAASge,EAAcC,eAAeF,S,yBA0BvD,SAAYG,GACR,OAAO5e,KAAK2B,QAAQid,GAAYC,WAAWnQ,OAAO,QAAQ,K,yBAG9D,SAAY+P,GAER,OADAA,EAASK,cACF9e,O,iCAGX,SAAoB6C,EAAU5B,GAC1B,IAAMwd,EAAWze,KAAK2B,QAAQkB,EAASpB,UACjCsd,EAAE,0FACDlc,GADC,IAEJlC,MAAO8d,EAAS1d,KAAK,aACrBH,MAAO6d,EAAS1d,KAAK,eACtBE,GAEH,OADAwd,EAAS/d,SAASge,EAAcC,eAAeF,IACxCM,I,oCAGX,SAAuBlc,EAAU5B,GAC7B,IAAQQ,EAA8BoB,EAA9BpB,SAAUC,EAAoBmB,EAApBnB,SAAUd,EAAUiC,EAAVjC,MAC5B,EAAiC,CAACa,EAAUC,GAAU2D,IAAIrF,KAAK2B,QAAQgU,KAAK3V,OAA5E,mBAAOgf,EAAP,KAAmBC,EAAnB,KACMC,EAAkBF,EAAWje,KAAK,SAClCoe,EAAcC,GAChBJ,EAAWte,WACXue,EAAWve,WACXwe,EAAgBva,MAAQ,EACxBua,EAAgBxa,OAAS,EACzBwa,EAAgBrP,OAEd4O,EAAQ,+DAAiB,GAAI,CAAE3O,gBAAiBlP,EAAMkP,iBACxD,UAAWqP,EAAa,CAAE7b,UAAWT,EAASlC,MAAO4C,UAAW3C,QAASiF,EAAW5E,GAYxF,OAXAwd,EAASY,YACT,+DAAc,CACV5d,WACAC,SAAU+c,EAASzd,KACnBJ,MAAM,2BACCA,GADF,IAED,qBAAsB,SAE1BC,KAAM,WACPI,GACHjB,KAAKsf,YAAYb,EAAUO,GACpBhf,KAAKuf,oBAAL,2BAA8B1c,GAA9B,IAAwCpB,SAAUgd,EAASzd,OAAQC,K,2BAG9E,SAAcD,EAAI6B,EAAU5B,GACxBjB,KAAKqB,UACD,CAAEC,WAAYC,KAAGpC,SAAUqC,WAAY,CAACR,IACxC,CACIM,WAAYC,KAAGzC,SACf0C,WAAY,CAAC,2BAAKqB,GAAN,IAAgBpB,SAAUzB,KAAKuF,gBAAgB1C,EAASpB,UAAWT,SAEnFC,K,qBAIR,SAAQ4B,GAAiC,IAMjCX,EANgC,OAAtBsd,EAAsB,uDAAfxf,KAAKJ,SACpBqB,EAAM,EACJQ,EAA8BoB,EAA9BpB,SAAUC,EAAoBmB,EAApBnB,SAAUf,EAAUkC,EAAVlC,MAC5B,EAAiC,CAACc,EAAUC,GAAU2D,IAAIrF,KAAK2B,QAAQgU,KAAK3V,OAA5E,mBAAOgf,EAAP,KAAmBC,EAAnB,KACMQ,EAAYT,EAAWU,SAAS,QAAQhR,QAAO,SAACxN,GAAD,OAAUP,GAASO,EAAKH,KAAK,eAAiBJ,KAGnG,MAAgC,UAA5Bse,EAAWle,KAAK,UACY,YAA5Bie,EAAWje,KAAK,QAAuBmB,EAAOlC,KAAKuf,oBAAoB1c,EAAU5B,GAC5Ewe,EAAUjf,OAAQ0B,EAAOlC,KAAKuf,oBAAL,2BAA8B1c,GAA9B,IAAwCpB,SAAUge,EAAU,GAAGze,OAAQC,GAChGN,GAASA,EAAMH,OAAQ0B,EAAOlC,KAAK2f,uBAAuB9c,EAAU5B,GAEzEjB,KAAKkD,WAAW,CACZrC,KAAMsC,IAAEC,uBACRC,GAAI,SAACC,EAAWC,GACZ,IAAMC,EAAU,EAAKC,cAAcH,EAAWC,EAAW9B,EAAUC,EAAU,KAAM,OAGnF,OAFI8B,EAAQE,KAAIxB,EAAO,EAAK8G,QAAL,2BAAkBnG,GAAlB,IAA4BlC,MAAO2C,EAAW1C,MAAO2C,IAAatC,IACrFiB,GAAM,EAAK0d,cAAc1d,EAAKlB,KAAxB,2BAAmC6B,GAAnC,IAA6ClC,MAAO2C,EAAW1C,MAAO2C,IAAaic,GACtFhc,KAIftB,GAAMlC,KAAK4f,cAAc1d,EAAKlB,KAAM6B,EAAU2c,IAfFtd,I,wBAmBpD,SAAWlB,EAAIJ,EAAOD,EAAOgD,GAAyC,IAAD,OAArB1C,EAAqB,uDAAfjB,KAAKJ,SACvDI,KAAKqB,UACD,CACIC,WAAYC,KAAGvC,YACfwC,WAAY,CAACR,EAAIhB,KAAK4D,SAAS5C,GAAKhB,KAAK2B,QAAQX,GAAID,KAAK,SAAU4C,IAExE,CAAErC,WAAYC,KAAGvC,YAAawC,WAAY,CAACR,EAAIJ,EAAOD,EAAOgD,IAC7D1C,GAEJ,IAAM4e,EAAe7f,KAAK2B,QAAQX,GAAIgC,SAClCW,GAAmB3D,KAAKmb,WAAW0E,EAAa9e,KAAK,MAAO,YAAaJ,EAAO,GACpFX,KAAKmb,WAAW0E,EAAa9e,KAAK,MAAO,YAAaH,EAAO,GAC7DZ,KAAK6R,WAAWgO,EAAa9e,KAAK,MAAO,CAAE+O,gBAAiBlP,EAAMkP,iBAAmB,IAAI,EAAO,GAEhG+P,EACKH,SAAS,QACTzd,SAAQ,SAACC,GAAD,mBAAC,gDAA0BA,EAAKnB,KAAK,MAAOH,EAAOD,EAAOgD,EAAmB,Q,wBAG9F,SAAW3C,GAA0B,IAAD,OAArBC,EAAqB,uDAAfjB,KAAKJ,SAChBkH,EAAK9G,KAAK2B,QAAQX,GACxB,GAAI8F,EAAGzC,SAAU,CACb,GAAIyC,EAAG3C,UAAW,OAClB2C,EAAG4Y,SAAS,wBACP3b,eAAe,sBACf9B,SAAQ,SAACC,GAAD,OAAU,EAAK6E,WAAW7E,EAAKlB,KAAMC,MAClD6F,EAAG/C,eAAe,sBACb9B,SAAQ,SAACC,GAAD,OAAU,EAAK6E,WAAW7E,EAAKlB,KAAMC,MAElD,IAAMC,EAAOlB,KAAK2B,QAAQX,GAC1BhB,KAAKqB,UACD,CACIC,WAAYC,KAAG1C,SACf2C,WAAY,CACRN,EAAKH,KAAK,SAAUf,KAAK4D,SAAS1C,EAAKF,MAAOE,EAAKH,KAAK,QACxDG,EAAKR,WAAYQ,EAAK+C,OAAOlD,KAAMC,IAG3C,CAAEM,WAAYC,KAAGrC,SAAUsC,WAAY,CAACR,IAAOC,GAEnD,kEAAiBD,EAAI,OAClB,CACH,IAAKhB,KAAK2B,QAAQX,GAAIR,QAAUsG,EAAG3C,UAAW,OAC9C,IAAMC,EAASpE,KAAK2B,QAAQX,GAAIiD,OAAOlD,KACvCf,KAAKqB,UACD,CACIC,WAAYC,KAAGzC,SACf0C,WAAY,CAAC,2BACN4C,GADK,IACG3C,SAAUzB,KAAKuF,gBAAgBnB,EAAOpB,QAAStB,SAAU0C,EAAOjC,WAGnF,CAAEb,WAAYC,KAAGpC,SAAUqC,WAAY,CAACR,IAAOC,GAEnD,IAAM4e,EAAe/Y,EAAG9D,SACxB,kEAAiBhC,EAAI,GACjB6e,GAAqD,IAAnCA,EAAaH,WAAWlf,QAAcR,KAAKsE,WAAWub,EAAa7e,KAAM,M,6BAIvG,SAAgB0X,GACZ,MAA0C,UAAtC1Y,KAAK2B,QAAQ+W,GAAQ3X,KAAK,SACuB,IAAjDf,KAAK2B,QAAQ+W,GAAQmG,SAAS,QAAQre,OADgBkY,EAEnD1Y,KAAK2B,QAAQ+W,GAAQmG,SAAS,QAAQ,GAAG7d,O,kCAGpD,SAAqB8e,EAAIC,GAAK,IAAD,OACzB,EAAiB,CAACD,EAAIC,GACjB1a,KAAI,SAAC2a,GAAD,OAAO,EAAKre,QAAQ,EAAK4D,gBAAgBya,OAC7C3a,KAAI,SAACqX,GAAD,OAAOA,EAAEgD,SAAS,wBAAwBO,MAAMvD,MAFzD,mBAAOwD,EAAP,KAAWC,EAAX,KAGA,OAAOD,EAAGte,UAAUue,K,2BAGxB,WAAiB,IAAD,OACNva,EAAQ5F,KAAKC,GAAGC,EAAE,sBAAsBmF,KAAI,SAACnE,GAAD,MAAW,CACzDP,MAAOO,EAAKH,KAAK,SACjBH,MAAOM,EAAKH,KAAK,SACjBC,GAAIE,EAAKH,KAAK,UAEZc,EAAQ,GAad,OAZA7B,KAAKC,GAAGC,EAAE,sBAAsB+B,SAAQ,SAACC,GACrC,IAAMvB,EAAQuB,EAAKnB,KAAK,SAClBuE,EAAc,EAAK3D,QAAQ,EAAK4D,gBAAgBrD,EAAKc,SAAShC,OAAOD,KAAK,SAC1EyE,EAActD,EAAKC,SAASpB,KAAK,SACjCH,EAAQsB,EAAKnB,KAAK,SAClBC,EAAKkB,EAAKnB,KAAK,MAChBc,EAAMlB,GAIJkB,EAAMlB,GAAO6E,YAAYgJ,KAAKhJ,GAHjC3D,EAAMlB,GAAS,CACX6E,YAAa,CAACA,GAAcF,cAAatE,KAAIL,QAAOC,YAIzD,CAACgF,EAAO+I,OAAOyR,OAAOve,O,6BArMjC,SAAsB4c,GAClB,IAAM4B,EAAU5B,EAASI,SAAS,QAAQ,GACpCyB,EAAkB,CAAElgB,EAAG,EAAGC,EAAG,GAC7BkgB,EAAW,IAAIve,IAQrB,OAPAyc,EAASiB,SAAS,sBACbzd,SAAQ,SAACC,GAAD,OAAUqe,EAASpf,IAAIkK,KAAKC,UAAUoT,EAAcrU,iBAAiBnI,QAClFqe,EAASte,SAAQ,SAACue,GACd,IAAMjc,EAAM8G,KAAKE,MAAMiV,GACvBF,EAAgBlgB,GAAKmE,EAAInE,EACzBkgB,EAAgBjgB,GAAKkE,EAAIlE,KAEP,IAAlBkgB,EAAS1K,KAAmB4I,EAAS/d,YACzC4f,EAAgBlgB,GAAKmgB,EAAS1K,KAC9ByK,EAAgBjgB,GAAKkgB,EAAS1K,KACvBuJ,GACHiB,EAAQ3f,WAAY4f,EACpBD,EAAQtf,KAAK,SAAS4D,MAAQ,EAC9B0b,EAAQtf,KAAK,SAAS2D,OAAS,EAC/B2b,EAAQtf,KAAK,SAAS8O,Y,GAhCNzF,IC2DbqW,OA3Df,YAEI,IADA3Z,EACD,EADCA,GAAIM,EACL,EADKA,WAAYlE,EACjB,EADiBA,WAAYmG,EAC7B,EAD6BA,QAASE,EACtC,EADsCA,SAAUqK,EAChD,EADgDA,QAASvM,EACzD,EADyDA,YAAaqZ,EACtE,EADsEA,kBAAmBC,EACzF,EADyFA,OAAQrZ,EACjG,EADiGA,WAEhG,EAAgCsZ,mBAAS,MAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAMC,mBACNC,EAAkB,SAAC9Z,GACrB,GAAIA,EAAS,CACT,IAAM+Z,EAAU/Z,EAChB+Z,EAAQtgB,MAAM+D,MAAd,UAAyB+b,EAAkBS,QAAQC,YAAc,EAAjE,MACAF,EAAQtgB,MAAM8D,OAAd,UAA0Bgc,EAAkBS,QAAQE,aAAe,EAAnE,QAyBRjM,qBAAU,kBAAMyL,GAAYA,EAASS,IAAI,CAAEla,iBAAe,CAACyZ,EAAUzZ,IACrEgO,qBAAU,kBAAMuL,GAAUE,GAAYA,EAASU,iBAAgB,CAACZ,GAAUE,IAC1EzL,qBAAU,WACFuL,GAAUE,GAAU3d,EAAW,CAAErC,KAAMsC,IAAE6R,iBAAkB9N,QAAS2Z,MACzE,CAACF,GAAUE,IAEdzL,qBAAU,WACF2L,EAAII,UACJF,EAAgBF,EAAII,SACpBva,OAAO4a,iBAAiB,UAAU,kBAAMP,EAAgBF,EAAII,YAC5DL,EA/BmB,WACvB,IAAM7T,EAAU,IAAIwU,GAChBpY,EAAS0X,EAAII,QAASje,EAAYkE,EAAYC,ECpBvC,0kBAoBA,gTDAkFC,GAS7F,OAPI+B,GAAS4D,EAAQ8N,4BACjBxR,IACA0D,EAAQqU,IAAI,CAAE/X,aACd0D,EAAQyU,uBAER9N,GAAS3G,EAAQ0U,WAAW/N,GAChC3G,EAAQsU,eACDtU,EAoBS2U,OAEjB,CAACb,IAEJ,IAAQ/f,EAAO8F,EAAP9F,GAER,OACI,qBACIJ,MAAO,CAAEihB,OAAQ,EAAGC,QAASnB,EAAS,QAAU,QAEhDtT,UAAU,gBACV0T,IAAKA,GAFA/f,IE2BF+gB,GA5EG,SAAC9G,GACf,IAAMyF,EAAoBvL,IAAM6L,SACxB9d,EAA2B+X,EAA3B/X,WAAYkE,EAAe6T,EAAf7T,WAuCpB,OApCAgO,qBAAU,WACN,IAAM4M,EAAalX,IAAoBsB,eAAe/G,KAAI,SAACgE,GAAD,MAAc,CACpEA,cAEJnG,EAAW,CACPrC,KAAMsC,IAAE8e,eACR/a,QAAS8a,MAGd,IA4BC,sBACIphB,MAAO,CACHshB,KAAM,EACNC,cAAe,SACfL,QAAS,OACTnd,MAAO,QALf,UAQI,cAAC,EAAD,CAAQyC,WAAYA,EAAYlE,WAAYA,IAC5C,sBAAKtC,MAAO,CAAEshB,KAAM,EAAGE,WAAY,SAAW/U,UAAU,kBAAkB0T,IAAKL,EAA/E,UACKtZ,EAAWkL,OAAOjN,KAAI,SAACyB,EAAIvG,GAAL,OACnB,cAAC,GAAD,CACIuG,GAAIA,EACJvG,EAAGA,EACH6G,WAAYA,EACZsZ,kBAAmBA,EACnBxd,WAAYA,EAEZyd,OAAQpgB,IAAM6G,EAAWmL,cACzBlJ,QAASvC,EAAGuC,QACZE,SAAUzC,EAAGyC,SACbqK,QAAS9M,EAAG8M,QACZvM,YAAaP,EAAGO,YAChBmL,WAAY1L,EAAG0L,WACfqB,SAAU/M,EAAG+M,SACbvM,WAAYR,EAAGQ,YARVR,EAAGuC,YAWhB,cAAC,EAAD,CAAUnG,WAAYA,EAAYkE,WAAYA,W,qCC3E9Dib,KAAWC,cAAc,SAEzB,IAgDeC,GAhDD,SAAC,GAER,IADHC,EACE,EADFA,WAAYC,EACV,EADUA,UAAWC,EACrB,EADqBA,MAAOC,EAC5B,EAD4BA,SAE9B,EAAgC/B,mBAAS,IAAzC,mBAAOgC,EAAP,KAAiBC,EAAjB,KACA,EAA4BjC,mBAAS6B,GAArC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAAwBnC,mBAAS,MAAjC,mBAAOoC,EAAP,KAAaC,EAAb,KAmBA,OAlBA7N,qBAAU,YACY,IAAdqN,GACAM,GAAU,GACVF,EAAY,WACZlI,aAAaqI,GACbC,EAAQrI,YAAW,WACfmI,GAAU,GACVF,EAAY,MACb,OAEHA,EAAY,WACZlI,aAAaqI,GACbC,EAAQrI,YAAW,WACfmI,GAAU,KACX,SAER,CAACN,IAECK,EAED,cAAC,KAAD,CACIA,OAAQA,EACRI,aAAa,yBAEb7V,UAAU,QACV8V,iBAAgB,kBAAaP,GALjC,SAOI,sBAAKvV,UAAS,wBAAmBuV,GAAjC,UACI,sBAAKvV,UAAU,eAAf,UACI,qBAAKA,UAAU,iBAAf,SAAiCqV,IACjC,yBAAQ7hB,KAAK,SAASwM,UAAU,QAAQG,QAASgV,EAAjD,UACKA,EAAa,sBAAMY,cAAY,OAAlB,kBAAoC,GAClD,sBAAM/V,UAAU,UAAhB,yBAGR,qBAAKA,UAAU,aAAf,SACKsV,SAlBG,ICeTU,GAzCG,SAAC,GAAgC,IAA9Bb,EAA6B,EAA7BA,WAAYpb,EAAiB,EAAjBA,WAC7B,EAAwBwZ,mBAAS,IAAjC,mBAAO7f,EAAP,KAAauiB,EAAb,KACA,EAAwC1C,mBAAS,IAAjD,mBAAO2C,EAAP,KAAqBC,EAArB,KACQC,EAA4Brc,EAA5Bqc,aAAchB,EAAcrb,EAAdqb,UAElBpf,EACAogB,EADApgB,GAAIqf,EACJe,EADIf,MAAOgB,EACXD,EADWC,WAAYC,EACvBF,EADuBE,SAAUC,EACjCH,EADiCG,aAAcC,EAC/CJ,EAD+CI,aAAc/R,EAC7D2R,EAD6D3R,aAGjEsD,qBAAU,WACNoO,EAAgB,MACjB,CAACf,IAEJrN,qBAAU,WACNkO,EAAQ,CAAE3iB,MAAOkjB,GAAgB,GAAIjjB,MAAOgjB,IAC5CJ,EAAgB,MACjB,CAACK,EAAcD,IAYlB,OACI,cAACE,GAAD,CAAatB,WAAYA,EAAYC,UAAWA,EAAWC,MAAOA,EAAlE,SACI,uBAAMqB,SAZC,SAAChe,GACZA,EAAEwP,iBACF,IAAM/R,EAAUH,EAAGtC,EAAKJ,MAAOI,EAAKH,OAChC4C,EAAQE,IACR8f,EAAgB,IAChBF,EAAQ,CAAE3iB,MAAOkjB,GAAgB,GAAIjjB,MAAOgjB,IAC5CpB,KACGgB,EAAgBhgB,EAAQsC,MAK3B,UACI,sBAAKuH,UAAU,qBAAf,UACI,cAACsW,EAAD,CAAU5iB,KAAMA,EAAMuiB,QAASA,EAASxR,aAAcA,IACrDyR,EAAe,qBAAKlW,UAAU,MAAf,SAAsBkW,IAAsB,gCAEhE,qBAAKlW,UAAU,eAAf,SACI,wBAAQxM,KAAK,SAASwM,UAAU,kBAAhC,SAAmDqW,Y,kBC+MxDM,GApOK,SAAC5S,EAAOlO,GAAR,MAAuB,CACvC,CACIrC,KAAM,SACNojB,KAAM,OACNC,KAAMC,KACNC,OAAQjT,EACRwP,OAAQvP,EAAMlE,iBACdmX,YAAY,EACZC,OAAQ,UAEZ,CAAEzjB,KAAM,QACR,CACIA,KAAM,SACNojB,KAAM,SACNC,KAAMK,KACNH,OAAQpQ,EACR2M,QAAQ,EACR0D,YAAY,GAEhB,CACIxjB,KAAM,cACNojB,KAAM,OACNC,KAAMK,KACNH,OAAQlR,EACRyN,QAAQ,EACR0D,YAAY,EACZC,OAAQ,UAEZ,CACIzjB,KAAM,SACNojB,KAAM,OACNC,KAAMM,KACNJ,OAAQhS,EACRuO,OAAQvP,EAAMlE,iBACdmX,YAAY,GAEhB,CACIxjB,KAAM,SACNojB,KAAM,UACNC,KAAMM,KACNJ,OAAQ,SAACvV,EAAGxM,GAAJ,OlBsBG,SAAC+O,GAChBF,EAAYE,GAAOqT,akBvBGC,CAAW7V,IAC7B8R,OAAQvP,EAAMlE,iBACdmX,YAAY,GAEhB,CACIxjB,KAAM,SACNojB,KAAM,QACNC,KAAMS,KACNP,OAAQ/P,EACRsM,OAAQvP,EAAMlE,iBACdmX,YAAY,EACZC,OAAQ,kBAEZ,CAAEzjB,KAAM,QACR,CACIA,KAAM,SACNojB,KAAM,OACNC,KAAMU,KACNR,OAAQ9P,EACRqM,OAAQvP,EAAMyT,aAAezT,EAAMlE,iBACnCmX,YAAY,EACZC,OAAQ,UAEZ,CACIzjB,KAAM,SACNojB,KAAM,OACNC,KAAMY,KACNV,OAAQ7P,EACRoM,OAAQvP,EAAM2T,aAAe3T,EAAMlE,iBACnCmX,YAAY,EACZC,OAAQ,uBAEZ,CAAEzjB,KAAM,QACR,CACIA,KAAM,SACNojB,KAAM,OACNC,KAAMc,KACNZ,OAAQ3S,EACRkP,OAAQvP,EAAMlE,kBAAoBkE,EAAM6T,YACxCZ,YAAY,EACZC,OAAQ,UAEZ,CACIzjB,KAAM,SACNojB,KAAM,SACNC,KAAMgB,KACNd,OAAQ,kBlBlCG,SAAChT,EAAOlO,GACvB,IAAMjC,GAAM,IAAIpB,MAAOC,UACvBsR,EAAMM,mBAAmB9H,IAAI3H,SAAQ,SAACjB,GAAD,OAAQkQ,EAAYE,GAAOrK,WAAW/F,EAAIC,MAC/EiC,EAAW,CAAErC,KAAMsC,IAAEsG,eAAgBvC,QAAS,OkB+B5BH,CAAWqK,EAAOlO,IAChCyd,OAAQvP,EAAM6T,YACdZ,YAAY,EACZC,OAAQ,8BAEZ,CAAEzjB,KAAM,QACR,CACIA,KAAM,SACNojB,KAAM,UACNC,KAAMiB,KACNf,OAAQ1P,EACRiM,OAAQvP,EAAMlE,iBACdmX,YAAY,GAEhB,CAAExjB,KAAM,QAER,CACIA,KAAM,SACNojB,KAAM,SACNC,KAAM9S,EAAMgU,mBAAqBC,KAAaC,KAC9ClB,OAAQ,kBlBqDK,SAAChT,EAAOlO,GACrBkO,EAAMgU,mBACNliB,EAAW,CAAErC,KAAMsC,IAAEwU,sBAAuBzQ,SAAS,IAErDhE,EAAW,CAAErC,KAAMsC,IAAEwU,sBAAuBzQ,SAAS,IkBzDvCqe,CAAanU,EAAOlO,IAClCyd,QAAQ,EACR0D,YAAY,GAEhB,CACIxjB,KAAM,SACNojB,KAAM,QACNC,KAAMsB,KACNpB,OAAQ,kBAAMhT,EAAMlE,kBAAoBkE,EAAMlE,iBAAiBuY,SAC/D9E,OAAQvP,EAAMgU,mBACdf,WAAYjT,EAAMgU,oBAEtB,CACIvkB,KAAM,SACNojB,KAAM,QACNC,KAAMwB,KACNtB,OAAQ,kBAAMhT,EAAMlE,kBAAoBkE,EAAMlE,iBAAiByY,SAC/DhF,OAAQvP,EAAMgU,mBACdf,WAAYjT,EAAMgU,oBAEtB,CACIvkB,KAAM,SACNojB,KAAM,MACNC,KAAM0B,KACNxB,OAAQ,kBAAMhT,EAAMlE,kBAAoBkE,EAAMlE,iBAAiB2Y,OAC/DlF,OAAQvP,EAAMgU,mBACdf,WAAYjT,EAAMgU,oBAEtB,CACIvkB,KAAM,SACNojB,KAAM,QACNC,KAAM4B,KACN1B,OAAQ,kBAAMhT,EAAMlE,kBAAoBkE,EAAMlE,iBAAiB6Y,SAC/DpF,OAAQvP,EAAMgU,mBACdf,WAAYjT,EAAMgU,oBAEtB,CACIvkB,KAAM,SACNojB,KAAM,OACNC,KAAM8B,KACN5B,OAAQ,kBAAMhT,EAAMlE,kBAAoBkE,EAAMlE,iBAAiB+Y,QAC/DtF,OAAQvP,EAAMgU,mBACdf,WAAYjT,EAAMgU,oBAEtB,CACIvkB,KAAM,SACNojB,KAAM,UACNC,KAAMgC,KACN9B,OAAQ,kBAAMhT,EAAMlE,kBAAoBkE,EAAMlE,iBAAiBiZ,WAC/DxF,OAAQvP,EAAMgU,mBACdf,WAAYjT,EAAMgU,oBAiCtB,CAAEvkB,KAAM,SASR,CACIA,KAAM,SACNojB,KAAM,aACNC,KAAMkC,KACNhC,OAAQ5P,EACRmM,OAAQvP,EAAMlE,kBAAoBkE,EAAM2G,gBACxCsM,YAAY,GAUhB,CACIxjB,KAAMuQ,EAAMlE,iBAAmB,OAAS,SACxC+W,KAAM,SACNC,KAAMmC,KACNjC,OAAQ,SAACvV,EAAGxM,GAAJ,MAAU,CACd,CAAEikB,GAAI,kBAAMpU,EAAYrD,EAAGxM,EAAG,QAAQiR,KAAM,OAC5C,CAAEgT,GAAI,kBAAMpU,EAAYrD,EAAGxM,EAAG,QAAQiR,KAAM,SAEhD+Q,YAAY,EACZ1D,OAAQvP,EAAMlE,kBAElB,CAAErM,KAAM,U,mCC/OZ,SAAS0lB,GAAT,GAEI,IADAC,EACD,EADCA,KAAMvC,EACP,EADOA,KAAMG,EACb,EADaA,OAAQzD,EACrB,EADqBA,OAAQ0D,EAC7B,EAD6BA,WAAY9W,EACzC,EADyCA,SAAU+W,EACnD,EADmDA,OAElD,OACI,cAAC,KAAD,CAAMmC,WACF,cAAC,KAAD,UACI,cAAC,GAAD,CACID,OAAMvC,OAAMG,SAAQzD,SAAQ0D,aAAY9W,WAAU+W,aAH9D,SASKF,IAAS/e,KAAI,gBAAGihB,EAAH,EAAGA,GAAIhT,EAAP,EAAOA,KAAP,OAAkB,cAAC,KAAD,CAAU9F,QAAS8Y,EAAnB,SAAmChT,GAAPA,QAKxE,IAAMoT,GAAe,SAAC,GAAD,IACjBF,EADiB,EACjBA,KAAMvC,EADW,EACXA,KAAMtD,EADK,EACLA,OAAQ0D,EADH,EACGA,WAAY9W,EADf,EACeA,SAAU+W,EADzB,EACyBA,OAAQld,EADjC,EACiCA,WADjC,OAGjB,cAAC,GAAD,CACIof,OAAMvC,OAAMtD,SAAQ0D,aAAY9W,WAAU6W,OAAQ,kBAAMhd,EAAWuf,QAAQxF,QAAQ1L,SAAS6O,YAK9FsC,GAAW,SAAC,GAAD,IACb3C,EADa,EACbA,KAAMG,EADO,EACPA,OAAQzD,EADD,EACCA,OAAQpT,EADT,EACSA,SADT,OAGb,sBACID,KAAK,SACLC,SAAUA,EACVF,UAAS,eAAUsT,EAAS,SAAW,IACvCnT,QAAS4W,EACT1W,UAAW,SAACxD,GAAD,MAAmB,MAAXA,EAAGrG,KAAeugB,KALzC,UAOI,cAAC,KAAD,CACItW,SAAUsW,EACVyC,QAASlG,EACTtT,UAAU,iBAEd,8BACK4W,QAKP6C,GAAe,SAAC,GAAD,IACjBN,EADiB,EACjBA,KAAMvC,EADW,EACXA,KAAMG,EADK,EACLA,OAAQzD,EADH,EACGA,OAAQ0D,EADX,EACWA,WAAY9W,EADvB,EACuBA,SAAU+W,EADjC,EACiCA,OADjC,OAGjB,sBACIhX,KAAK,SACLtM,GAAE,iBAAYuM,GACdA,SAAUA,EACVF,UAAS,eAAUsT,EAAS,SAAW,IACvCnT,QAAS,kBAAOmT,GAAUyD,KAC1B1W,UAAW,SAACxD,GAAD,OAAQyW,GAAqB,MAAXzW,EAAGrG,KAAeugB,KAC/CxO,WAAU0O,EAASA,EAAOtV,MAAM,KAAK,GAAK,GAC1CpO,MAAO,CAAEkhB,QAAQ,GAAD,OAAKuC,EAAa,GAAK,SAR3C,UAUI,qBAAKhX,UAAU,OAAf,SAAsB,cAACmZ,EAAD,CAAM3Q,KAAK,SACjC,qBAAKjV,MAAO,CAAEmmB,SAAU,IAAxB,SAA+B9C,QAYjC+C,GAAO,kBAAM,qBAAK3Z,UAAU,cAC5B4Z,GAAO,kBAAM,qBAAK5Z,UAAU,cAC5B6Z,GAAQ,kBAAM,qBAAK7Z,UAAU,WChD7B8Z,I,OAAS,SAAC,GAAgC,IAA9B/f,EAA6B,EAA7BA,WAAYlE,EAAiB,EAAjBA,WACpBkkB,EAAUpD,GAAY5c,EAAYlE,GAKxC,OAJAiS,IAAMC,WAAU,YAtBD,SAACgS,GAChB,IAAIxY,EAAO,GACLvJ,EAAM,GACZ+hB,EAAQnlB,SAAQ,SAACmiB,EAAQ7jB,GACjB6jB,EAAOE,QACPF,EAAOE,OAAOtV,MAAM,KAAK/M,SAAQ,SAAC4B,GAC9B,CAACA,EAAKA,EAAIwjB,QAAQ,OAAQ,YAAYplB,SAAQ,SAAC2a,GAC3ChO,GAAI,UAAOgO,EAAP,KACJvX,EAAIuX,GAAKpH,SAASvM,eAAT,iBAAkC1I,EAAI,aAK/DqO,EAAOA,EAAK0Y,UAAU,EAAG1Y,EAAKpO,OAAS,GACvC6U,YAAQzG,GAAM,SAAC0G,EAAOiS,GAClBjS,EAAMC,iBACNlQ,EAAIkiB,EAAQC,UAAU/R,WAOtBgS,CAAWL,KACZ,IAGC,yBAAQ/Z,UAAU,SAAlB,UACI,yBAASA,UAAU,kBAAnB,SAEQjG,EAAW8F,iBAAX,UACI9F,EAAW8F,iBAAiB7F,YADhC,qBAEsB,aAG9B,yBAASgG,UAAU,UAAnB,SAEQ+Z,EAAQ/hB,KAAI,WAET9E,GAAO,IADN0jB,EACK,EADLA,KAAMtD,EACD,EADCA,OAAQ0D,EACT,EADSA,WAAYD,EACrB,EADqBA,OAAQF,EAC7B,EAD6BA,KAAMrjB,EACnC,EADmCA,KAElCoa,EAAQ,CACVgJ,OACAtD,SACA0D,aACA9W,SAAUhN,EAAI,EACdsD,IAAKogB,EACLG,OAAQ,SAACre,GAAD,OAAOqe,EAAOhd,EAAYlE,EAAY6C,IAC9CygB,KAAMtC,EACNI,OATC,EADyCA,QAY9C,OAAQzjB,GACR,IAAK,OAAQ,OAAO,cAAC,GAAD,wBAAkBN,KACtC,IAAK,QAAS,OAAO,cAAC,GAAD,wBAAmBA,KACxC,IAAK,SAAU,OAAO,cAAC,GAAD,eAAc0a,IACpC,IAAK,OAAQ,OAAO,cAACsL,GAAD,eAActL,IAClC,IAAK,cAAe,OAAO,cAAC,GAAD,2BAAkBA,GAAlB,IAAyB7T,WAAYA,KAChE,IAAK,SAAU,OAAO,cAAC,GAAD,eAAkB6T,IAExC,QAAS,OAAO,mCAK5B,cAAC,GAAD,SC2CGyM,I,OAhHQ,SAAC,GAAgC,IAA9BtgB,EAA6B,EAA7BA,WAAYlE,EAAiB,EAAjBA,WAC5BykB,EAAWvgB,EAAWkL,OAAOlL,EAAWmL,eAC9C,EAAsCqO,mBAAS,YAA/C,mBAAOvZ,EAAP,KAAoBoT,EAApB,KACA,EAAoCmG,mBAAS,WAA7C,mBAAOtZ,EAAP,KAAmBmF,EAAnB,KAEMmb,EAAWC,uBAAY,SAAC3mB,GAAD,OAAUA,GAAQA,EAAK4mB,UAAS,IACrDC,EAAkB3gB,EAAlB2gB,cACFC,EAAmB5gB,EAAW4gB,kBAAqBL,IAAaA,EAAStgB,YAE/E+N,qBAAU,WACFhO,EAAW4gB,kBAAoBL,GAC/BlN,EAAekN,EAAStgB,aACxBoF,EAAckb,EAASrgB,aAEvBmT,EAAe,MAEpB,QAACkN,QAAD,IAACA,OAAD,EAACA,EAAUrgB,WAAYF,EAAW4gB,iBAAkBL,IAEvDvS,qBAAU,WACN,UAAIuS,QAAJ,IAAIA,OAAJ,EAAIA,EAAUrgB,WACVmF,EAAckb,EAASrgB,gBACpB,CACH,IAAM2gB,EAAcnd,IAAoB0B,gBACxCC,EAAcwb,MAEnB,IAEH,IAYMC,EAAe,WACjB9gB,EAAWuf,QAAQxF,QAAQ1L,SAUzB0S,EAAc,kBAChB,qCAgBI,qBAAK9a,UAAU,YACf,wBACIxM,KAAK,SACLwM,UAAU,oBACVG,QAAS0a,EAHb,iDAWR,OACI,cAAC,GAAD,CACIzF,UAAWsF,GAAiBC,EAC5BxF,WAAYpb,EAAW4gB,kBAAoB5gB,EAAW2gB,cAvC3C,WACX3gB,EAAW2gB,cAAe7kB,EAAW,CAAErC,KAAMsC,IAAEilB,oBAAqBlhB,SAAS,IACxEE,EAAW4gB,kBAAkB9kB,EAAW,CAAErC,KAAMsC,IAAE+R,uBAAwBhO,SAAS,KAqCL,KACnFwb,MAAM,kBAHV,SAKI,uBAAMrV,UAAU,eAAe0W,SA1DxB,SAAChe,GACZA,EAAEwP,iBACEwS,EAAe7kB,EAAW,CAAErC,KAAMsC,IAAEwQ,UAAWzM,QAAS,CAAEG,cAAaC,gBAClE0gB,IACL5gB,EAAW8F,iBAAiBuN,eAAepT,GAC3CD,EAAW8F,iBAAiBwN,iBAAiBpT,GAC7CpE,EAAW,CAAErC,KAAMsC,IAAE+R,uBAAwBhO,SAAS,KAE1D4D,IAAoBW,YACpBX,IAAoB2B,cAAcnF,IAiD9B,UACI,iDACA,uBACIyZ,IAAK6G,EACLS,YAAY,oBACZC,UAAQ,EACRlf,MAAO/B,EACPyG,SAAU,SAAC/H,GAAD,OAAO0U,EAAe1U,EAAE5D,OAAOiH,UAE7C,0CACA,uBACIif,YAAY,qBACZjf,MAAO9B,EACPwG,SAAU,SAAC/H,GAAD,OAAO0G,EAAc1G,EAAE5D,OAAOiH,QACxCkf,UAAQ,IAEZ,qBAAKjb,UAAU,SAAf,SACI,wBAAQxM,KAAK,SAASwM,UAAU,kBAAhC,oBAEJ,qBAAKA,UAAU,SAAf,SACK0a,GAAiB,cAACI,EAAD,aCpEvBI,I,OAtCI,SAAC,GAAgC,IAA9BnhB,EAA6B,EAA7BA,WAAYlE,EAAiB,EAAjBA,WAC9B,EAA8C0d,mBAAS,IAAvD,mBAAO4H,EAAP,KAAwBC,EAAxB,KACA,EAAgC7H,mBAAS,QAAzC,mBAAO8H,EAAP,KAAiBC,EAAjB,KACMC,EAAOxhB,EAAWyhB,YAAczhB,EAAW8F,iBACjDkI,qBAAU,WACFwT,IACAH,EAAmBrhB,EAAW8F,iBAAiB4b,kBAC/CH,EAAY,WAEjB,CAACC,IAEJ,IAGMG,EAAI,UAAMniB,OAAOoiB,SAASC,SAAtB,aAAmCriB,OAAOoiB,SAASE,MAAnD,OAA0DtiB,OAAOoiB,SAASG,SAA1E,cAAwFX,GASlG,OACI,cAAC,GAAD,CACI/F,UAAWrb,EAAWyhB,WACtBnG,MAAM,iBACNF,WAhBW,WACftf,EAAW,CAAErC,KAAMsC,IAAEimB,gBAAiBliB,SAAS,KAY/C,SAKI,sBAAKmG,UAAU,cAAf,UACI,uBAAOgc,UAAQ,EAAChc,UAAU,SAASjE,MAAO2f,IAC1C,wBAAQvb,QAhBP,WACToM,UAAU0P,UAAUC,UAAUR,GAAMrV,MAAK,WACrCiV,EAAY,WACZnT,SAASgU,uBAAuB,UAAU,GAAG1B,QAC7CtS,SAASgU,uBAAuB,UAAU,GAAGC,aAYlB5oB,KAAK,SAASwM,UAAU,UAA/C,SAA0Dqb,WCoB3DgB,I,cArDE,SAAC,GAEX,IAEc7a,EAHjB8a,EACE,EADFA,IAAK7R,EACH,EADGA,KAAM1O,EACT,EADSA,MAAO0E,EAChB,EADgBA,SAAUpJ,EAC1B,EAD0BA,OAAQklB,EAClC,EADkCA,UAE9BhC,EAAWzS,IAAM0U,YAKvB,OACI,sBACIxc,UAAU,YACVG,QAAS,kBAAMoa,EAASzG,QAAQ2G,SAChCpa,UAAW,kBAAMka,EAASzG,QAAQ2G,SAClCxa,KAAK,UACLC,SAAU,EALd,UAOKqc,EAEO,qBAAKvc,UAAU,SAAf,UAdCwB,EAeY+a,EAfN/a,EAAEG,MAAM,MAAM3J,KAAI,SAACU,EAAGxF,GACzC,OAAIA,EAAI,EAAU,+BAAc,4BAAIwF,KAAPA,GACtB,+BAAeA,GAAJA,SAeN,wBACR,uBACC4jB,EAEO,0BACItc,UAAU,eACVjE,MAAOugB,EACPN,UAAQ,EACRS,WAAW,UAEf,wBACR,0BACIzc,UAAU,gBACVyc,WAAW,QACL1gB,QAAO0E,WACbic,oBAAkB,QAClBnpB,MAAO,CAAE8D,SAAQC,MAAO,QACxBoc,IAAK6G,IAER9P,EAEO,0BACIzK,UAAU,gBACVgc,UAAQ,EACRjgB,MAAO0O,EACPgS,WAAW,UAEf,6BCoBLE,GAhEO,SAAC,GAAgC,IAA9B5iB,EAA6B,EAA7BA,WAAYlE,EAAiB,EAAjBA,WACjC,EAA0C0d,mBAAS,IAAnD,mBAAOnhB,EAAP,KAAsBwqB,EAAtB,KACA,EAA0CrJ,mBAAS,IAAnD,mBAAOlhB,EAAP,KAAsBwqB,EAAtB,KACA,EAAwCtJ,mBAAS,IAAjD,mBAAO2C,EAAP,KAAqBC,EAArB,KACApO,qBAAU,WACFhO,EAAW8F,mBACX+c,EAAiB7iB,EAAW8F,iBAAiBid,oBAC7CD,EAAiB9iB,EAAW8F,iBAAiBkd,uBAElD,CAAChjB,EAAW8F,mBAgBf,OACI,cAAC,GAAD,CACIuV,UAAWrb,EAAWijB,cACtB7H,WAjBM,kBAAMtf,EAAW,CAAErC,KAAMsC,IAAEmnB,kBAAmBpjB,SAAS,KAkB7Dwb,MAAM,WAHV,SAKI,sBAAKrV,UAAU,oBAAf,UACI,gCACI,gDACA,cAAC,GAAD,CACIsc,IAAI,oDACJ7R,KAAK,IACL1O,MAAO3J,EACPqO,SAAU,SAAC/H,GAAD,OAAOkkB,EAAiBlkB,EAAE5D,OAAOiH,QAC3C1E,OAAQ,IACRklB,UVbC,iXUgBT,gCACI,iDACA,cAAC,GAAD,CACID,IAAI,oDACJ7R,KAAK,IACL1O,MAAO1J,EACPoO,SAAU,SAAC/H,GAAD,OAAOmkB,EAAiBnkB,EAAE5D,OAAOiH,QAC3C1E,OAAQ,IACRklB,UVjBC,8ZUoBT,qBAAKvc,UAAU,QAAf,SAAwBkW,IAExB,qBAAKlW,UAAU,SAAf,SACI,wBAAQxM,KAAK,SAASwM,UAAU,kBAAkBG,QA7CnD,WACX,IACIpG,EAAW8F,iBAAiBvN,qBAAqB,CAC7CF,cAAc,gCAAD,OAAkCA,EAAlC,KACbC,cAAc,gCAAD,OAAkCA,EAAlC,OAEjBwD,EAAW,CAAErC,KAAMsC,IAAEmnB,kBAAmBpjB,SAAS,IACjDsc,EAAgB,IAClB,MAAOzd,GACLyd,EAAgBzd,EAAEvC,WAoCV,0BCEL+mB,I,OA5DH,SAAC,GAAgC,IAA9BnjB,EAA6B,EAA7BA,WAAYlE,EAAiB,EAAjBA,WACjByjB,EAAUxR,IAAM6L,SAsCtB,OApCA5L,qBAAU,WACNlS,EAAW,CAAErC,KAAMsC,IAAEqnB,aAActjB,QAASyf,IAC5C,IAAMlY,EAAI+G,SAASiV,qBAAqB,QAAQ,GAC1C1hB,EAAIyM,SAASgU,uBAAuB,kBAAkB,GACxDkB,EAAK,EACTjc,EAAE+S,iBAAiB,aAAa,SAACzb,GAC7BA,EAAEwP,iBAES,KADXmV,GAAM,IACQ3hB,EAAE4hB,UAAUzmB,OAAO,aAErCuK,EAAE+S,iBAAiB,aAAa,SAACzb,GAC7BA,EAAEwP,iBAES,KADXmV,GAAM,IACQ3hB,EAAE4hB,UAAUxpB,IAAI,aAGlCsN,EAAE+S,iBAAiB,YAAY,SAACzb,GAC5BA,EAAEwP,oBAEN,CAAC,UAAW,WAAY,QAAQtT,SAAQ,SAAC2oB,GACrCnc,EAAE+S,iBAAiBoJ,GAAW,SAAC7kB,GAC3BA,EAAEwP,iBACFmV,EAAK,EACL3hB,EAAE4hB,UAAUxpB,IAAI,gBAIxBsN,EAAE+S,iBAAiB,QAAQ,SAACzb,GACxBA,EAAEwP,iBACFoR,EAAQxF,QAAQ/X,MAAQ,KACY,IAAhCrD,EAAE8kB,aAAaC,MAAMtqB,QACuC,YAAzDuF,EAAE8kB,aAAaC,MAAM,GAAGxX,KAAKtE,MAAM,KAAK9J,OAAO,GAAG,IACrDgO,EAAS9L,EAAYlE,EAAY6C,EAAE8kB,aAAaC,MAAM,SAG/D,IAEC,qBAAKzd,UAAU,wBAAf,SACI,sBAAKA,UAAU,QAAf,UACI,cAAC,KAAD,CAAcwI,KAAM,IAAKjV,MAAO,CAAEyV,MAAO,aACzC,gCACI,uBACIxV,KAAK,OACLkgB,IAAK4F,EACLnZ,QAAS,SAACzH,GAAQA,EAAE5D,OAAOiH,MAAQ,MACnCxI,MAAO,CAAEkhB,QAAS,QAClB7H,OAAO,WACPnM,SAAU,SAAC/H,GAAD,OAAOmN,EAAS9L,EAAYlE,EAAY6C,MAEtD,sBAAMsH,UAAU,QAAhB,oBACA,oBAAIA,UAAU,OAAd,sDCmHL0d,I,OAvKM,SAAC,GAAgC,IAAD,EAA7B3jB,EAA6B,EAA7BA,WAAYlE,EAAiB,EAAjBA,WAChC,EAAgC0d,mBAAS,GAAzC,mBAAOoK,EAAP,KAAiBC,EAAjB,KACA,EAAsCrK,mBAAS,IAA/C,mBAAOsK,EAAP,KAAoBC,EAApB,KACA,EAAsCvK,mBAAS,IAA/C,mBAAOwK,EAAP,KAAoBC,EAApB,KACMjE,EAAU,CACZ7lB,KAAG1C,SAAU0C,KAAGzC,SAChByC,KAAGxC,YAAawC,KAAGvC,YACnBuC,KAAGrC,SAAUqC,KAAGpC,SAChBoC,KAAGlC,QAASkC,KAAGjC,UAAWiC,KAAGnC,SAOjC,EAAwCwhB,mBALhB,WACpB,IAAM5I,EAAM,GAEZ,OADAoP,EAAQnlB,SAAQ,SAACmiB,GAAapM,EAAIoM,IAAU,KACrCpM,EAEsCsT,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAiB,SAACrrB,GACpB,OAAIgH,EAAW8F,iBACJ9F,EAAW8F,iBAAiBue,eAAerrB,GAE/C,IAEXgV,qBAAU,WACFhO,EAAW8F,mBACXie,EAAe,aACR/jB,EAAW8F,iBAAiBlG,UAC1B9B,QAAQwmB,UAAUrmB,KAAI,SAAC+e,EAAQ7jB,GAAT,mBAAC,eAAoB6jB,GAArB,IAA6B7jB,WAE5D0qB,EACI7jB,EAAW8F,iBAAiBlG,UAAUxG,OACpC4G,EAAW8F,iBAAiBoO,mBAGvC,CAAClU,EAAWsN,YAAatN,EAAWkL,OAAQlL,EAAW8F,iBAAkB8d,IAE5E,IAkBMW,GAAmB,oBACpBpqB,KAAG1C,SAAW,iBADM,eAEpB0C,KAAGzC,SAAW,gBAFM,eAGpByC,KAAGxC,YAAc,eAHG,eAIpBwC,KAAGvC,YAAc,eAJG,eAKpBuC,KAAGrC,SAAW,gBALM,eAMpBqC,KAAGpC,SAAW,gBANM,eAOpBoC,KAAGnC,QAAU,iBAPO,eAQpBmC,KAAGlC,QAAU,uBARO,eASpBkC,KAAGjC,UAAY,YATK,GA2BnBssB,EAAY,SAAC3qB,EAAKmY,EAAK9R,EAAYukB,EAAO5S,GAC5C,IAAM6S,EAAK,IAAIjsB,KAAK+P,SAAS3O,EAAK,KAC5B8qB,EAAOD,EAAGE,qBACVC,EAAOH,EAAGI,qBAuBhB,OArBI,qCACI,6BAEQL,IAAUb,EAAW,YACjB,wBAAQ3d,UAAU,SAASxM,KAAK,SAAS2M,QAAS,kBAxBrD,SAACqe,GAElB,GAAIjlB,OAAOC,QAAQ,+CAAgD,CAE/D,IADA,IAAIslB,EAAenB,EACZa,EAAQM,GACX/kB,EAAW8F,iBAAiBkf,mBAC5BD,GAAgB,EAEpB,KAAON,EAAQM,GACX/kB,EAAW8F,iBAAiBmf,mBAC5BF,GAAgB,EAEpBlB,EAAYkB,IAY4DG,CAAaT,IAArE,yBAMZ,uCAAQE,EAAR,YAAgBE,KAChB,mCAEI,sCAAO3kB,KAFX,OAKA,oBAAI1G,MAAO,CAAE2rB,WAAY,KAAzB,SAAiCnT,IACjC,oBAAIxY,MAAO,CAAE2rB,WAAY,KAAzB,SAAiCtT,QAOvCuB,EAAc,SAAC,GAAD,IAChBzJ,EADgB,EAChBA,WAAY9P,EADI,EACJA,IAAKV,EADD,EACCA,EAAG+G,EADJ,EACIA,WAAY2R,EADhB,EACgBA,KADhB,OAEd2S,EACF3qB,EA7EoB,SAAC8P,GACrB,IAAMyb,EAAMzb,EAAWvP,WACvB,OAAQuP,EAAWzP,YACnB,KAAKC,KAAG1C,SAAU,MAAM,qBAAN,OAA4B2tB,EAAI,IAClD,KAAKjrB,KAAGzC,SAAU,MAAM,oBAAN,OACd2sB,EAAee,EAAI,GAAGxrB,IADR,oBAENyqB,EAAee,EAAI,GAAG/qB,UAFhB,gBAEiCgqB,EAAee,EAAI,GAAG9qB,WACzE,KAAKH,KAAGxC,YAAa,MAAM,2BAAN,OAAkC0sB,EAAee,EAAI,IAArD,SACrB,KAAKjrB,KAAGvC,YAAa,MAAM,gBAAN,OAAuBysB,EAAee,EAAI,KAC/D,KAAKjrB,KAAGrC,SAAU,MAAM,iBAAN,OAAwBusB,EAAee,EAAI,KAC7D,KAAKjrB,KAAGpC,SAAU,MAAM,iBAAN,OAAwBssB,EAAee,EAAI,KAC7D,KAAKjrB,KAAGnC,QAAS,MAAM,cAAN,OAAqBqsB,EAAee,EAAI,IAAxC,cACjB,KAAKjrB,KAAGlC,QAAS,MAAM,6BAAN,OAAoCosB,EAAee,EAAI,KACxE,KAAKjrB,KAAGjC,UAAW,MAAM,+BAAN,OAAsCmsB,EAAee,EAAI,KAC5E,QAAS,MAAO,IA+DXrT,CAAgBpI,GAAazJ,EAAY/G,EAAG0Y,IAGrD7D,qBAAU,WACNiW,EAAeH,EAAYxc,QAAO,SAAC0V,GAAD,OAAYmH,EAAanH,EAAOrT,WAAWzP,eAAa+D,IAAImV,MAC/F,CAAC+Q,EAAcL,IAGlB,OACI,cAAC,GAAD,CACIzI,UAAWrb,EAAWsN,YACtB8N,WAJM,kBAAMtf,EAAW,CAAErC,KAAMsC,IAAEwR,kBAAmBzN,SAAS,KAK7Dwb,MAAM,UAHV,SAKI,sBAAKrV,UAAU,iBAAf,UACI,qCACI,6CAEI+Z,EAAQ/hB,KAAI,SAAC+e,GAAD,OACR,wBAAOqI,QAASrI,EAAQ/W,UAAU,kBAAlC,UACI,uBACIxM,KAAK,WACLyS,KAAK,SACLuT,QAAS0E,EAAanH,GACtBtW,SAAU,kBAAM0d,EAAgB,2BACzBD,GADwB,mBAE1BnH,GAAUmH,EAAanH,SAG/BuH,EAAoBvH,KAVgCA,SAerE,qBAAK/W,UAAU,YAAf,SACI,uBAAOzM,MAAO,CAAE8rB,cAAe,UAA/B,SACI,gCACKtB,EAAY/lB,KAAI,SAACgY,EAAG9c,GAAJ,OACb,oBACI8M,UAAS,uBAAkB9M,IAAMyqB,EAAW,SAAW,IAD3D,SAKK3N,GAFI9c,mB,8BCoD1BosB,I,OA1MU,SAAC,GAAgC,IAA9BvlB,EAA6B,EAA7BA,WAAYlE,EAAiB,EAAjBA,WAC9ByjB,EAAUxR,IAAM6L,SACtB,EAAkCJ,oBAAS,GAA3C,mBAAOgM,EAAP,KAAkBC,EAAlB,KACA,EAAkCjM,mBAAS,IAA3C,mBAAOkM,EAAP,KAAkBC,EAAlB,KAEA3X,qBAAU,YACsC,IAAxCwE,UAAUC,UAAU/U,QAAQ,SAA4D,IAA3C8U,UAAUC,UAAU/U,QAAQ,WACzE+nB,GAAa,GAEjB3pB,EAAW,CAAErC,KAAMsC,IAAEqnB,aAActjB,QAASyf,MAC7C,IAEHvR,qBAAU,WAMNxO,OAAOsE,aAAaE,QAAQ,WAAYC,KAAKC,UAAUwhB,MACxD,CAACA,IAEJ,IAyBME,EAAgB,uCAAG,WAAOC,EAAQ7jB,GAAf,yCAAApE,EAAA,sDACjBkoB,EAAWD,EACX7b,EAAQ,GAFS,kCAIkBhI,EAAM+jB,WAJxB,mJAIHtpB,EAJG,KAKQ,UADNupB,EAJF,MAKDC,KALC,kCAMUD,EAAYtZ,UANtB,QAMPwZ,EANO,OAOblc,EAAQA,EAAMmc,OAAO,CAAC,CAClB1pB,IAAI,GAAD,OAAKopB,EAAL,YAAe7jB,EAAMkK,KAArB,YAA6BzP,GAChC2pB,SAAUF,EAASG,aACnB5X,KAAMyX,EAASzX,KACf6X,QAASJ,EACT9a,WAAYpJ,KAZH,2BAce,cAArBgkB,EAAYC,KAdN,wBAebH,EAAQ,UAAMD,EAAN,YAAgB7jB,EAAMkK,MAfjB,UAgBK0Z,EAAiBE,EAAUE,GAhBhC,QAgBPpV,EAhBO,OAiBb5G,EAAQA,EAAMmc,OAAOvV,GAjBR,0UAoBd5G,GApBc,4EAAH,wDAuBhBuc,EAAU,uCAAG,sDAAA3oB,EAAA,sEACS4B,OAAOgnB,sBADhB,OACTC,EADS,OAEXzc,EAAQ,GAFG,kCAIkByc,EAAUV,WAJ5B,qJAIGtpB,EAJH,KAKQ,UADAuF,EAJR,MAKDikB,KALC,kCAMgBjkB,EAAM0K,UANtB,QAMDwZ,EANC,OAOPlc,EAAQA,EAAMmc,OAAO,CAAC,CAClB1pB,IAAI,GAAD,OAAKgqB,EAAUva,KAAf,YAAuBzP,GAC1B2pB,SAAUF,EAASG,aACnB5X,KAAMyX,EAASzX,KACf6X,QAASJ,EACT9a,WAAYpJ,KAZT,2BAce,cAAfA,EAAMikB,KAdN,kCAeWL,EAAiBa,EAAUva,KAAMlK,GAf5C,QAeD4O,EAfC,OAgBP5G,EAAQA,EAAMmc,OAAOvV,GAhBd,iTAmBf+U,EAAa,IACbA,EAAa3b,GACblO,EAAW,CAAErC,KAAMsC,IAAE2qB,aAAc5mB,QAASkK,EAAM,GAAGvN,IAAImL,MAAM,KAAK,KArBrD,4EAAH,qDAwBV+e,EAAc,uCAAG,oCAAA/oB,EAAA,6DACbgpB,EAAa,CACfjU,MAAO,CACH,CACIC,YAAa,UACbC,OAAQ,CACJ,eAAgB,CAAC,eAI7BgU,wBAAwB,EACxBC,UAAU,GAXK,SAcQtnB,OAAOunB,mBAAmBH,GAdlC,0CAcZxb,EAdY,cAeGA,EAAWsB,UAfd,OAeb4Z,EAfa,OAgBnBxa,EAAS9L,EAAYlE,EAAYwqB,EAASlb,GAhBvB,4CAAH,qDAmBpB,OACI,iCACMoa,GACE,wBACIvf,UAAU,cACVof,QAAQ,aAFZ,6BAKI,uBACI5rB,KAAK,OACLoZ,OAAO,6BACPjZ,GAAG,aACHJ,MAAO,CAAEkhB,QAAS,QAClBtU,QAAS,SAACzH,GAAQA,EAAE5D,OAAOiH,MAAQ,MACnC0E,SAAU,SAAC/H,GACPgnB,EAAa,IACbA,GAAa,SAAC3b,GACV,IAAK,IAAI7Q,EAAI,EAAGA,EAAIwF,EAAE5D,OAAO2oB,MAAMtqB,OAAQD,GAAK,EAC5C6Q,EAAQA,EAAMmc,OAAO,CAAC,CAClB1pB,IAAKkC,EAAE5D,OAAO2oB,MAAMvqB,GAAG6tB,mBACvBZ,SAAUznB,EAAE5D,OAAO2oB,MAAMvqB,GAAGktB,aAC5B5X,KAAM9P,EAAE5D,OAAO2oB,MAAMvqB,GAAGsV,KACxB6X,QAAS3nB,EAAE5D,OAAO2oB,MAAMvqB,MAGhC,OAAO6Q,KAEXxK,OAAOsE,aAAaE,QAAQ,WAAYC,KAAKC,UAAUwhB,KAE3DuB,WAAS,EACTC,gBAAgB,YAI3B1B,GACG,wBACI/rB,KAAK,SACLwM,UAAU,cACVkhB,UAAW3B,EACXpf,QAASmgB,EAJb,+BASFf,GAEM,uBACI/rB,KAAK,OACLkgB,IAAK4F,EACLnZ,QAAS,SAACzH,GAAQA,EAAE5D,OAAOiH,MAAQ,MACnCxI,MAAO,CAAEkhB,QAAS,QAClB7H,OAAO,WACPnM,SAAU,SAAC/H,GAAD,OAAOmN,EAAS9L,EAAYlE,EAAY6C,EAAE5D,OAAO2oB,MAAM,OAG5E8B,GAEO,wBACI/rB,KAAK,SACLkgB,IAAK4F,EACLtZ,UAAU,cACVkhB,UAAW3B,EACXhsB,MAAO,CAAEkhB,QAAS,QAClBtU,QAASugB,EACTptB,MAAM,gBAWlB,+CAEK,IACAmsB,EAAU,GAAKA,EAAU,GAAGjpB,IAAImL,MAAM,KAAK,GAAK,MAErD,cAAC,KAAD,CACI8b,MAAOgC,EACP0B,aA7Ka,SAACztB,GACtB,I3B0FqBsQ,EAAU8B,EAAMX,E2BzFrC,GADuB,CAAC,OAAQ,MAAO,MAAO,OAC3BhD,SAASzO,EAAK2sB,QAAQpa,KAAKtE,MAAM,KAAKuE,OAErD0E,MAAM,6BAIV,GAA2C,YAAvClX,EAAK2sB,QAAQpa,KAAKtE,MAAM,KAAKuE,MAAqB,CAClD,IAAIkb,GAAU,EACdrnB,EAAWkL,OAAOrQ,SAAQ,SAACysB,EAAGnuB,GACrBmuB,EAAE7a,WAAa9S,EAAK2sB,QAAQpa,OAC7Bmb,EAASluB,OAGD,IAAZkuB,EACAvrB,EAAW,CAAErC,KAAMsC,IAAE2S,WAAY5O,QAASunB,IAE1Cvb,EAAS9L,EAAYlE,EAAYnC,EAAK2sB,QAAS3sB,EAAKyR,iB3ByEvCnB,E2BtEQnO,E3BsEEiQ,E2BtEUpS,EAAK2sB,Q3BsETlb,E2BtEkBzR,EAAKyR,W3BuE5DW,GACA9B,EAAS,CACLxQ,KAAMsC,IAAE8Q,cACR/M,QAAS,CAAEgN,MAAM,EAAMwZ,QAASva,EAAMX,iB2B+ElCmc,eAAgB,kBAAM,MACtBC,aAAcC,iBAAcC,UAC5BC,eAAgBC,mBAAgBC,mB,8BC/DjCC,I,sEAhIO,SAAC,GAAgC,IAA9B9nB,EAA6B,EAA7BA,WAAYlE,EAAiB,EAAjBA,WACjC,EAAkC0d,mBAAS,IAA3C,mBAAOuO,EAAP,KAAkBC,EAAlB,KACA,EAAgCxO,mBAAS,IAAzC,mBAAO/M,EAAP,KAAiBwb,EAAjB,KACA,EAAkCzO,oBAAS,GAA3C,mBAAOgM,EAAP,KAAkBC,EAAlB,KAEAzX,qBAAU,YACsC,IAAxCwE,UAAUC,UAAU/U,QAAQ,SAA4D,IAA3C8U,UAAUC,UAAU/U,QAAQ,WACzE+nB,GAAa,KAElB,IAT+C,SAiBnCyC,IAjBmC,2EAiBlD,4BAAAtqB,EAAA,0DACQoC,EAAWoL,WADnB,iCAE6BpL,EAAWoL,WAAWC,iBAFnD,cAEcC,EAFd,gBAGcA,EAAOC,MAAMwc,GAH3B,uBAIczc,EAAOG,QAJrB,+BAOQoF,MAAM,0BAPd,QASI/U,EAAW,CAAErC,KAAMsC,IAAE8Q,cAAe/M,QAAS,CAAEgN,MAAM,KATzD,6CAjBkD,+BA6BnCqb,IA7BmC,2EA6BlD,8BAAAvqB,EAAA,sEACyB4B,OAAOsT,qBADhC,cACUC,EADV,gBAEyBA,EAAO1H,iBAFhC,cAEUC,EAFV,gBAGUA,EAAOC,MAAMwc,GAHvB,wBAIUzc,EAAOG,QAJjB,6CA7BkD,+BAqCnC2c,IArCmC,2EAqClD,gCAAAxqB,EAAA,sDAEUyqB,EAAcrV,OAAO,aACrBb,GAAQ,IAAIC,aAAcC,OAAO0V,GACjCzV,EAAO,IAAIC,KAAK,CAACJ,GAAQ,CAAE1Y,KAAM,mCACvCwX,kBAAOqB,EAAM+V,GALjB,4CArCkD,sBA6ElD,OA/BAra,oBAAS,sBAAC,4BAAApQ,EAAA,0DACFoC,EAAWsmB,QADT,oBAEF2B,EAAYjoB,EAAWsmB,QAAQpa,OACzBF,EAAK,IAAIC,YACZG,OAAS,SAACpT,GACTgvB,EAAahvB,EAAE+B,OAAOsR,UAEtBrM,EAAWoL,WAPb,6BAOyBY,EAPzB,SAO6ChM,EAAWoL,WAAWsB,UAPnE,wBAO4BC,WAP5B,wCAQGX,EAAGW,WAAW3M,EAAWsmB,SAR5B,4CAUP,CAACtmB,EAAWsmB,UAsBX,cAAC,GAAD,CACIjL,UAAWrb,EAAWsoB,cACtBlN,WArEM,WACVtf,EAAW,CAAErC,KAAMsC,IAAE8Q,cAAe/M,QAAS,CAAEgN,MAAM,KACrDkb,EAAa,IACbC,EAAY,KAmER3M,MAAO7O,EAHX,SAKI,gCACI,sBAAKxG,UAAU,WAAf,UACKwG,GAEO,wBAAQhT,KAAK,SAASwM,UAAU,kBAAkBG,QAAS8hB,EAA3D,kBAEP1C,GACG,wBAAQ/rB,KAAK,SAASwM,UAAU,kBAAkBG,QAAS+hB,EAA3D,sBAEF3C,GACE,wBAAQ/rB,KAAK,SAASwM,UAAU,kBAAkBG,QAASgiB,EAA3D,wBAGR,qBAAKniB,UAAU,oBAAf,SACI,cAAC,KAAD,CACIjE,MAAO+lB,EACPQ,cAAe,SAAC5pB,GAAD,OAAOqpB,EAAarpB,IACnC6pB,UAAW,SAACC,GAAD,OA1C/B,SAAyBA,GACrB,IACMC,EAASjc,EAAS7E,MAAM,KAAKuE,MACnC,GAFmB,CAAC,IAAK,IAAK,IAAK,MAAO,MAAO,KAAM,IAAK,MAE7C/D,SAASsgB,GACpB,OAAQA,GACR,IAAK,IAAK,OAAOF,qBAAUC,EAAME,aAAUC,QAAS,WACpD,IAAK,IACL,IAAK,IACL,IAAK,MAAO,OAAOJ,qBAAUC,EAAME,aAAUhnB,EAAG,KAChD,IAAK,MAAO,OAAO6mB,qBAAUC,EAAME,aAAUE,IAAK,OAClD,IAAK,KAAM,OAAOL,qBAAUC,EAAME,aAAUG,OAAQ,UACpD,IAAK,IAAK,OAAON,qBAAUC,EAAME,aAAUI,OAAQ,UACnD,IAAK,KAAM,OAAOP,qBAAUC,EAAME,aAAUK,KAAM,QAClD,QAAS,OAAOR,qBAAUC,EAAME,aAAUM,WAG9C,OAAOT,qBAAUC,EAAME,aAAUM,WA0BIC,CAAgBT,IACrCU,QAAS,GACT3vB,MAAO,CACH4vB,WAAY,mCACZzJ,SAAU,GACV0J,UAAW,QACXC,SAAU,OACVC,OAAQ,uBAIpB,sBAAKtjB,UAAU,WAAf,UACKwG,GAEO,wBAAQhT,KAAK,SAASwM,UAAU,kBAAkBG,QAAS8hB,EAA3D,kBAEP1C,GACG,wBAAQ/rB,KAAK,SAASwM,UAAU,kBAAkBG,QAAS+hB,EAA3D,sBAEF3C,GACE,wBAAQ/rB,KAAK,SAASwM,UAAU,kBAAkBG,QAASgiB,EAA3D,+BCzDToB,GA3ES,SAAC,GAAgC,IAA9BxpB,EAA6B,EAA7BA,WAAYlE,EAAiB,EAAjBA,WAInC,EAA0B0d,mBAAS,IAAnC,mBAAOiQ,EAAP,KAAcC,EAAd,KACA,EAAwBlQ,mBAAS,IAAjC,mBAAOmQ,EAAP,KAAaC,EAAb,KACA,EAAwBpQ,mBAAS,IAAjC,mBAAOqQ,EAAP,KAAaC,EAAb,KACA,EAA0BtQ,mBAAS,IAAnC,mBAAO8B,EAAP,KAAcyO,EAAd,KACA,EAAwBvQ,mBAAS,IAAjC,mBAAOwQ,EAAP,KAAaC,EAAb,KACA,EAA4BzQ,mBAAS,IAArC,mBAAO0Q,EAAP,KAAeC,EAAf,KAUA,OACI,cAAC,GAAD,CACI9O,UAAWrb,EAAWoqB,gBACtB9O,MAAM,aACNF,WAtBW,WACftf,EAAW,CAAErC,KAAMsC,IAAEsR,qBAAsBvN,SAAS,KAkBpD,SAKI,uBAAMmG,UAAU,eAAhB,UACI,8CACA,uBACIgb,YAAY,aACZC,UAAQ,EACRlf,MAAOynB,EACP/iB,SAAU,SAAC/H,GAAD,OAAO+qB,EAAS/qB,EAAE5D,OAAOiH,UAEvC,8CACA,uBACIif,YAAY,uCACZC,UAAQ,EACRlf,MAAO2nB,EACPjjB,SAAU,SAAC/H,GAAD,OAAOirB,EAAQjrB,EAAE5D,OAAOiH,UAEtC,+CACA,uBACIif,YAAY,kBACZjf,MAAO6nB,EACPnjB,SAAU,SAAC/H,GAAD,OAAOmrB,EAAQnrB,EAAE5D,OAAOiH,QAClCkf,UAAQ,IAEZ,+CACA,uBACID,YAAY,cACZjf,MAAOkoB,EACPxjB,SAAU,SAAC/H,GAAD,OAAOwrB,EAAUxrB,EAAE5D,OAAOiH,QACpCkf,UAAQ,IAEZ,4CACA,uBACID,YAAY,WACZjf,MAAOsZ,EACP5U,SAAU,SAAC/H,GAAD,OAAOorB,EAASprB,EAAE5D,OAAOiH,QACnCkf,UAAQ,IAEZ,kDACA,uBACID,YAAY,iBACZjf,MAAOgoB,EACPtjB,SAAU,SAAC/H,GAAD,OAAOsrB,EAAQtrB,EAAE5D,OAAOiH,QAClCkf,UAAQ,IAEZ,qBAAKjb,UAAU,SAAf,SACI,wBAAQxM,KAAK,SAASwM,UAAU,kBAAkBG,QA3DnD,SAACzH,GACZA,EAAEwP,iBACFsC,KAAMC,KAAN,iDAAqD+Y,EAArD,iBAAmEI,EAAnE,iBAAgFG,EAAhF,kBAA8F1O,EAA9F,iBAA4GqO,EAA5G,mBAA2HO,IACtH5d,MAAK,SAACsE,GACHC,MAAMD,EAAIjX,SACXmX,OAAM,SAACpS,GACNmS,MAAMnS,OAqDF,iCChBLykB,GAxCH,WACR,MAAiCkH,qBAAWC,IAASC,KAArD,mBAAOvqB,EAAP,KAAmBlE,EAAnB,KAWA,OAVAkS,qBAAU,WAMN,OADAxO,OAAOgrB,eAJoB,SAAC7rB,GAExB,OADAA,EAAE8rB,YAAc,4CACT,6CAGJ,WACHjrB,OAAOgrB,eAAiB,QAE7B,IAEC,sBAAKvkB,UAAU,YAAf,UACI,cAAC,GAAD,CAAgBjG,WAAYA,EAAYlE,WAAYA,IACpD,cAAC,GAAD,CAAYkE,WAAYA,EAAYlE,WAAYA,IAChD,cAAC4uB,GAAD,CAAe1qB,WAAYA,EAAYlE,WAAYA,IACnD,cAAC6uB,GAAD,CAAc3qB,WAAYA,EAAYlE,WAAYA,IAClD,cAAC8uB,GAAD,CAAiB5qB,WAAYA,EAAYlE,WAAYA,IACrD,cAAC+uB,GAAD,CAAe7qB,WAAYA,EAAYlE,WAAYA,IACnD,cAACgvB,GAAD,CACI1P,WAAY,kBAAMtf,EAAW,CAAErC,KAAMsC,IAAEgvB,eACvC/qB,WAAYA,IAEhB,cAAC,GAAD,CAAclE,WAAYA,IAC1B,cAAC,GAAD,CAAQkE,WAAYA,EAAYlE,WAAYA,IAC5C,0BAASmK,UAAU,OAAOzM,MAAO,CAAEkhB,QAAS,OAAQsQ,SAAU,UAA9D,UACI,qBAAKxxB,MAAO,CAAEkhB,QAAS,OAAQsQ,SAAU,QAAzC,SACI,cAAC,GAAD,CAAkBhrB,WAAYA,EAAYlE,WAAYA,MAE1D,qBAAKmK,UAAU,QAAQzM,MAAO,CAAEkhB,QAAS,OAAQsQ,SAAU,UAA3D,SACI,cAACC,GAAD,CAAgBnvB,WAAYA,EAAYkE,WAAYA,SAG5D,cAAC,IAAD,CAAc4O,MAAM,SAASnV,KAAK,OAAOoV,OAAO,UAChD,cAAC,IAAD,CAAgBvV,SAAS,YAAY4xB,UAAW,IAAMC,cAAc,QCxC5D3a,QACW,cAA7BhR,OAAOoiB,SAASwJ,UAEe,UAA7B5rB,OAAOoiB,SAASwJ,UAEhB5rB,OAAOoiB,SAASwJ,SAASnY,MAAM,2DClBnC,IAceoY,GAdS,SAACC,GACjBA,GAAeA,aAAuBC,UACtC,8BAAqBjf,MAAK,YAEnB,IADHkf,EACE,EADFA,OAAQC,EACN,EADMA,OAAQC,EACd,EADcA,OAAQC,EACtB,EADsBA,OAAQC,EAC9B,EAD8BA,QAEhCJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFpBO,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,GAAD,MAEJ3d,SAASvM,eAAe,SFqHtB,kBAAmB2Q,WACrBA,UAAUwZ,cAAcC,MACrB3f,MAAK,SAAC4f,GACLA,EAAaC,gBAEdrb,OAAM,SAACsb,GACNC,QAAQD,MAAMA,EAAMhwB,YEhH5BivB,M,gCCtBA,IAAMhwB,EAAwB,CAE1Bmb,KAAM,SAACxO,EAAGkO,GAAJ,gBAAY,SAAClO,EAAEhP,EAAIkd,EAAEld,EAAM,GAAf,SAAoBgP,EAAE/O,EAAIid,EAAEjd,EAAM,GAAM,KAE1DqzB,OAAQ,SAACtW,EAAGuW,GAAJ,MAAW,CACfvzB,EAAGgd,EAAEhd,EAAIkG,KAAKstB,IAAID,GAAKvW,EAAE/c,EAAIiG,KAAKutB,IAAIF,GACtCtzB,EAAG+c,EAAEhd,EAAIkG,KAAKutB,IAAIF,GAAKvW,EAAE/c,EAAIiG,KAAKstB,IAAID,KAG1CG,SAAU,SAAC1kB,EAAGkO,GAAJ,OAAalO,EAAEhP,GAAKkd,EAAEld,GAAKgP,EAAE/O,EAAIid,EAAEjd,GAAO+O,EAAEhP,GAAKkd,EAAEld,GAAKgP,EAAE/O,EAAIid,EAAEjd,EAAMiG,KAAKytB,GAAK,GAE1FC,UAX0B,SAWhBC,EAAM7kB,EAAGkO,GACf,OAAQhX,KAAK4tB,KAAKD,GAAQj0B,KAAK8zB,SAAS1kB,EAAGkO,GAAK,EAAIhX,KAAKytB,KAAO,EAAIztB,KAAKytB,KAG7EnpB,cAf0B,SAeZjI,EAAGN,EAAG+M,EAAGkO,GACnB,IAAM2W,GAAQ7kB,EAAE/O,EAAIid,EAAEjd,IAAM+O,EAAEhP,EAAIkd,EAAEld,GAC9BuzB,EAAI3zB,KAAKg0B,UAAUC,EAAM7kB,EAAGkO,GAE5BF,EAAI,CAAEhd,EADFJ,KAAK4d,KAAKxO,EAAGkO,GAAK3a,EACVtC,EAAGgC,GACrB,EAAiBrC,KAAK0zB,OAAOtW,EAAGuW,GAAxBvzB,EAAR,EAAQA,EAAGC,EAAX,EAAWA,EACX,MAAO,CAAED,EAAGA,EAAIgP,EAAEhP,EAAGC,EAAGA,EAAI+O,EAAE/O,IAGlCqC,kBAxB0B,SAwBR+L,EAAGW,EAAGkO,GACpB,IAAMF,EAAI,CAAEhd,EAAGqO,EAAErO,EAAIgP,EAAEhP,EAAGC,EAAGoO,EAAEpO,EAAI+O,EAAE/O,GAC/B4zB,GAAQ7kB,EAAE/O,EAAIid,EAAEjd,IAAM+O,EAAEhP,EAAIkd,EAAEld,GAC9BuzB,EAAI3zB,KAAKg0B,UAAUC,EAAM7kB,EAAGkO,GAClC,EAAiBtd,KAAK0zB,OAAOtW,GAAIuW,GAAzBvzB,EAAR,EAAQA,EAER,MAAO,CAAEiC,EAFT,EAAWhC,EAEIsC,EAAGvC,EADRJ,KAAK4d,KAAKxO,EAAGkO,MAKhB7a,O,4CCyEA7B,EA3GD,CACV,CACIuzB,SAAU,IACVvzB,MAAO,CACHwzB,eAAgB,MAGxB,CACID,SAAU,uBACVvzB,MAAO,CACH2Z,QAAS,cACTsH,OAAQ,IACRld,MAAO,oBACPD,OAAQ,qBACRmL,MAAO,oBACPF,QAAS,sBACTG,gBAAiB,8BACjBC,YAAa,0BACbC,YAAa,0BACbqkB,WAAY,SACZC,WAAY,WAGpB,CACIH,SAAU,uBACVvzB,MAAO,CACH+D,MAAO,EACPD,OAAQ,EACRoL,gBAAiB,8BACjB+R,OAAQ,MAIhB,CACIsS,SAAU,OACVvzB,MAAO,CACH2zB,WAAY,SACZC,iBAAkB,aAG1B,CACIL,SAAU,uBACVvzB,MAAO,CACH+D,MAAO,wBACPgS,UAAW,8BACX8d,iBAAkB,8BAClBF,WAAY,WACZG,iBAAkB,8BAClBC,eAAgB,4BAChBC,cAAe,gBACfC,UAAW,sBAGnB,CACIV,SAAU,cACVvzB,MAAO,CACHD,MAAO,cACPm0B,iBAAkB,aAClBjT,OAAQ,IACRkT,sBAAuB,EACvB1e,MAAO,OACP2e,oBAAqB,OACrBC,oBAAqB,iBACrBC,gBAAiB,OACjBC,gBAAiB,EACjBC,kBAAmB,IAG3B,CACIjB,SAAU,UACVvzB,MAAO,CACHkhB,QAAS,SAGjB,CACIqS,SAAU,+BACVvzB,MAAO,CACH8D,OAAQ,GACRC,MAAO,GACPgL,QAAS,GACTK,YAAa,EACbqlB,cAAe,KAGvB,CACIlB,SAAU,oBACVvzB,MAAO,CACHkP,gBAAiB,YAGzB,CACIqkB,SAAU,aACVvzB,MAAO,CACHkP,gBAAiB,YAGzB,CACIqkB,SAAU,YACVvzB,MAAO,CACH00B,aAAc,OACdlB,eAAgB,GAChBmB,eAAgB,KCnGtBzb,EAAU,CACZlZ,MAAM,YAAKA,GACX40B,gBAAgB,EAChBC,oBAAoB,EACpB7oB,QAAS,IACTE,QAAS,GAGEgN,O,qICVf,IAsCe4b,EAtCAC,EAAQ,IAsCRD,CApCI,CACfE,SAAU,GACVtkB,uBAAwB,uBACxBlO,uBAAwB,uBACxB4O,uBAAwB,uBACxBL,uBAAwB,uBACxBwgB,YAAa,aACb1oB,eAAgB,iBAChBI,aAAc,eACdgsB,UAAW,YACXC,SAAU,WACV3sB,oBAAqB,sBACrBoS,SAAU,WACVC,SAAU,WACVua,mBAAoB,qBACpBpiB,UAAW,YACXsO,eAAgB,iBAChBnM,WAAY,aACZf,aAAc,eACdX,UAAW,YACXgV,gBAAiB,kBACjBkB,kBAAmB,oBACnBE,aAAc,eACd7V,kBAAmB,oBACnBF,qBAAsB,uBACtBnL,WAAY,aACZqO,sBAAuB,wBACvB3C,iBAAkB,mBAClB/N,eAAgB,iBAChBiO,uBAAwB,yBACxBkT,oBAAqB,sBACrBnU,cAAe,gBACfqG,gBAAiB,kBACjBwT,aAAc,iB,6DC4JHkI,EAxLK,SAAC,GAEd,IADHj1B,EACE,EADFA,KAAMuiB,EACJ,EADIA,QAASgM,EACb,EADaA,OAAQxd,EACrB,EADqBA,aAEjB8V,EAAWC,uBAAY,SAAC3mB,GAAD,OAAUA,GAAQA,EAAK4mB,UAAS,IACvDmO,EAAUpM,sBAChB,EAAmBjJ,oBAAS,GAArBsV,EAAP,oBACA,EAAkCtV,mBAAS,IAA3C,mBAAOuV,EAAP,KAAkBC,EAAlB,KACA,EAAkCxV,mBAAS,IAA3C,mBAAOyV,EAAP,KAAkBC,EAAlB,KACMC,EAAc,GACpBA,EAAY/nB,KAAK,GAkBjB,OAZA4G,qBAAU,WAJO,IAACohB,EAKTN,IALSM,EAMD,CACL7xB,MAAO2B,KAAKuH,IAAI9M,EAAKH,MAAM+D,MAAO2B,KAAKsH,IAAI,IAAKqoB,EAAQ9U,QAAQC,YAAc,MANtFkC,EAAQ,2BAAKviB,GAAN,IAAYH,MAAM,2BAAMG,EAAKH,OAAU41B,SAS/C,EAAEN,GAAYn1B,EAAKJ,QAEtByU,qBAAU,WACNghB,EAAar1B,EAAKJ,MAAMqO,MAAM,KAAK,MACpC,CAACjO,EAAKJ,QAGL,sBAAK0M,UAAU,WAAW0W,SAAUuL,EAApC,UACI,qBAAKjiB,UAAU,aAAazM,MAAO,CAAE8D,OAAQ3D,EAAKH,MAAM8D,QAAxD,SACI,qBACI2I,UAAU,WACVzM,MAAK,2BACEG,EAAKH,OADP,IAED61B,aAAmC,YAArB11B,EAAKH,MAAMiP,MAAsB,OAAS,IAJhE,SAOI,sBAAMkR,IAAKkV,EAAX,SAAqBnkB,EAAe/Q,EAAKJ,MAAQ,SAIzD,sBAAK0M,UAAU,OAAOzM,MAAO,CAAE2vB,QAAS,IAAxC,UA4BKze,EAAe,yCAAoB,GACnCA,EACG,qCACI,uBACIzE,UAAU,YACV0T,IAAK6G,EACL/mB,KAAK,OACLynB,UAAQ,EACR3nB,MAAM,aACN0nB,YAAY,mBACZjf,MAAOrI,EAAKJ,MAAMqO,MAAM,KAAK,GAC7BlB,SAAU,SAAC/H,GAC0B,MAA7BA,EAAE5D,OAAOiH,MAAMlE,OAAO,IACtBkxB,EAAa,GAAD,OAAIrwB,EAAE5D,OAAOiH,MAAb,MACZka,EAAQ,2BAAKviB,GAAN,IAAYJ,MAAM,GAAD,OAAKoF,EAAE5D,OAAOiH,MAAd,YAAuBitB,QAE/CD,EAAarwB,EAAE5D,OAAOiH,OACtBka,EAAQ,2BAAKviB,GAAN,IAAYJ,MAAOoF,EAAE5D,OAAOiH,MAAQitB,SAKvD,uBACIhpB,UAAU,gBACVxM,KAAK,OACLF,MAAM,kBACN0nB,YAAY,cACZva,SAAU,SAAC/H,GAEP,GADAuwB,EAAavwB,EAAE5D,OAAOiH,MAAM4F,MAAM,KAAKuE,OACnC4iB,EAAW,CACX,IAAIO,EAAQP,EACgB,MAAxBA,EAAUjxB,OAAO,KACjBkxB,EAAa,GAAD,OAAID,EAAJ,MACZO,GAAS,KAEbpT,EAAQ,2BAAKviB,GAAN,IAAYJ,MAAO+1B,EAAQ3wB,EAAE5D,OAAOiH,MAAM4F,MAAM,KAAKuE,cACzD+P,EAAQ,2BAAKviB,GAAN,IAAYJ,MAAM,IAAD,OAAMoF,EAAE5D,OAAOiH,MAAM4F,MAAM,KAAKuE,WAEnEojB,KAAK,UAET,0BAAU31B,GAAG,QAAb,SAEQ8J,IAAoB6B,cAEdtB,KAAKE,MAAMT,IAAoB6B,eAC5BtH,KAAI,SAACuxB,GACF,IAEI/K,EAFE8K,EAAO,GAIb,MAHsB,CAAC,KAAM,KAAM,OAAQ,MAAO,KAAM,OAGrCE,MAAK,SAACvP,GAAD,OAAesP,EAAK/yB,IAAIgB,WAAW2K,SAAS8X,OAChEqP,EAAKnoB,KAAKooB,EAAK/yB,IAAIgB,YACnB0xB,EAAY/nB,KAAK+nB,EAAYA,EAAY/1B,OAAS,GAAK,GACvDqrB,EAAQ0K,EAAYA,EAAY/1B,OAAS,GAAK,EAEvC,wBAAQ4I,MAAOutB,GAAW9K,IAE9B,QAEb,QAIlB,UCvIdiL,G,OAAW,SAAC,GAAqB,IAAnBjhB,EAAkB,EAAlBA,KAAMQ,EAAY,EAAZA,MAChBxH,EAAyB,EAArBe,SAASiG,EAAM,IACnBkhB,EAAa,CACfC,WAAW,GAAD,OAAK,MAASnoB,EAAd,oBAA2BwH,GACrC4gB,aAAa,GAAD,OAAKpoB,EAAI,EAAT,wBACZqoB,UAAU,GAAD,OAAKroB,EAAI,EAAT,wBACTsoB,YAAa,GAEjB,OACI,qBAAKv2B,MAAOm2B,MAyELK,EArEK,SAAC,GAEd,IADHr2B,EACE,EADFA,KAAMuiB,EACJ,EADIA,QAASgM,EACb,EADaA,OAAQxd,EACrB,EADqBA,aAGjB8V,EAAWC,uBAAY,SAAC3mB,GAAD,OAAUA,GAAQA,EAAK4mB,UAAS,IAc7D,OACI,sBAAKza,UAAU,WAAW0W,SAAUuL,EAApC,UACI,sBAAKjiB,UAAU,UAAf,UACI,qBACIA,UAAU,WACVzM,MAAO,CACHy2B,kBAAmBt2B,EAAKH,MAAMsP,UAC9BonB,kBAAmBv2B,EAAKH,MAAMkP,gBAC9BynB,kBAAmBx2B,EAAKH,MAAMiP,SAGtC,cAAC,EAAD,CAAUgG,KAAM9U,EAAKH,MAAMsP,UAAWmG,MAAOtV,EAAKH,MAAMkP,kBACxD,qBAAKzC,UAAU,QAAf,SAAwBtM,EAAKJ,WAEjC,sBAAK0M,UAAU,OAAf,UACKyE,EAAe,yCAAoB,GACnCA,EACG,uBACIiP,IAAK6G,EACLva,UAAU,sBACVxM,KAAK,OACLynB,UAAQ,EACR3nB,MAAM,aACNyI,MAAOrI,EAAKJ,MACZ0nB,YAAY,mBACZva,SAAU,SAAC/H,GAAD,OAAOud,EAAQ,2BAAKviB,GAAN,IAAYJ,MAAM,GAAD,OAAKoF,EAAE5D,OAAOiH,aAE3D,UC9DdouB,EAAY,CACd7yB,MAAO,IACPD,OAAQ,GACRmL,MAAO,YACPF,QAAS,EACTG,gBAAiB,UACjBC,YAAa,OACbC,YAAa,GAGXynB,EAAY,CACdvnB,UAAW,EACXJ,gBAAiB,KACjBD,MAAO,SCbL8hB,EAAe,CACjBlP,WAAW,EACXgB,aAAc,CACVpgB,GAAI,aACJqf,MAAO,GACPgB,WAAY,GACZC,SAAU,GACVC,aAAc,GACdC,aAAc,GACd/R,aAAc,MAElB+W,YAAY,EACZwB,eAAe,EACfrC,kBAAkB,EAClBD,eAAe,EACfyJ,iBAAiB,EAEjBvM,aAAa,EACbyS,YAAY,EACZ7S,aAAa,EACbE,aAAa,EACbzS,OAAQ,GACRC,cAAe,EACfmC,aAAa,EACb0Q,oBAAoB,EACpBlY,iBAAkB,KAClBE,UAAW,IACX2K,gBAAiB,MAGf4f,EAAoB,CACtBtwB,YAAa,GACbgC,QAAS,KACTE,SAAU,KACVqK,QAAS,KACTtM,WAAY,GACZswB,UAAW,KACX/W,SAAU,KACV7f,GAAI,KACJwR,WAAY,KACZqB,SAAU,MC4JC6d,EA9LC,SAACtgB,EAAOgT,GACpB,OAAQA,EAAOvjB,MACf,KAAKsC,EAAEmO,uBACH,OAAO,2BACAF,GADP,IAEIqR,WAAW,EACXgB,aAAc,CACVf,MAAO,cACPgB,WAAY,cACZC,SAAUqS,EACVpS,aAAc4T,EACd3T,aAAc,GACd/R,cAAc,EACdzO,GAAI+gB,EAAO/gB,MAGvB,KAAKF,EAAEC,uBACH,OAAO,2BACAgO,GADP,IAEIqR,WAAW,EACXgB,aAAc,CACVf,MAAO,cACPgB,WAAY,cACZC,SAAUyT,EACVxT,aAAc6T,EACd5T,aAAc,GACd/R,cAAc,EACdzO,GAAI+gB,EAAO/gB,MAGvB,KAAKF,EAAEwO,uBACH,OAAO,2BACAP,GADP,IAEIqR,WAAW,EACXgB,aAAc,CACVf,MAAO,YACPgB,WAAY,YACZC,SAAUqS,EACVpS,aAAcQ,EAAOxjB,MACrBijB,aAAcO,EAAOzjB,MACrBmR,aAAcsS,EAAOtS,aACrBzO,GAAI+gB,EAAO/gB,MAIvB,KAAKF,EAAE6O,uBACH,OAAO,2BACAZ,GADP,IAEIqR,WAAW,EACXgB,aAAc,CACVf,MAAO,YACPgB,WAAY,YACZC,SAAUyT,EACVxT,aAAcQ,EAAOxjB,MACrBijB,aAAcO,EAAOzjB,MACrBmR,aAAcsS,EAAOtS,aACrBzO,GAAI+gB,EAAO/gB,MAIvB,KAAKF,EAAEgvB,YAAa,OAAO,2BAAK/gB,GAAZ,IAAmBqR,WAAW,IAClD,KAAKtf,EAAE0G,aAAc,OAAO,2BAAKuH,GAAZ,IAAmB6T,aAAa,EAAMvT,mBAAoB0S,EAAOld,UACtF,KAAK/D,EAAEsG,eAAgB,OAAO,2BAAK2H,GAAZ,IAAmB6T,aAAa,IACvD,KAAK9hB,EAAE0yB,UAAW,OAAO,2BAAKzkB,GAAZ,IAAmBsmB,WAAYtT,EAAOld,UAExD,KAAK/D,EAAEoY,SAAU,OAAO,2BAAKnK,GAAZ,IAAmByT,YAAaT,EAAOld,UACxD,KAAK/D,EAAEqY,SAAU,OAAO,2BAAKpK,GAAZ,IAAmB2T,YAAaX,EAAOld,UAExD,KAAK/D,EAAEwQ,UACH,IAAI8a,GAAU,EACRplB,EAAU+a,EAAOld,QAAQmC,UAAW,IAAIxJ,MAAOC,UAAU+E,WAM/D,OALAuM,EAAMkB,OAAOrQ,SAAQ,SAACysB,EAAGnuB,IAChBmuB,EAAErlB,SAAWqlB,EAAErlB,UAAYA,GAAaqlB,EAAEnlB,UAAYmlB,EAAEnlB,WAAa6a,EAAOld,QAAQqC,YACrFklB,EAASluB,OAGD,IAAZkuB,EACO,2BAAKrd,GAAZ,IAAmB2W,eAAe,EAAOxV,cAAekc,IAErD,2BACArd,GADP,IAEI2W,eAAe,EACfxV,cAAenB,EAAMkB,OAAO9R,OAC5B8R,OAAO,GAAD,mBACClB,EAAMkB,QADP,4BAGKqlB,GAHL,IAIEtwB,YAAa+c,EAAOld,QAAQG,YAC5BgC,UACAE,SAAU6a,EAAOld,QAAQqC,SACzBqK,QAASwQ,EAAOld,QAAQ0M,QACxBpB,WAAY4R,EAAOld,QAAQsL,YAAc,KACzCqB,SAAUuQ,EAAOld,QAAQ2M,SACzBvM,WAAY8c,EAAOld,QAAQI,YAAc,SAKzD,KAAKnE,EAAE8e,eACH,OAAO,2BAAK7Q,GAAZ,IAAmBkB,OAAO,GAAD,mBAAMlB,EAAMkB,QAAZ,YAAuB8R,EAAOld,YAE3D,KAAK/D,EAAE6R,iBACH,OAAO,2BAAK5D,GAAZ,IAAmBlE,iBAAkBkX,EAAOld,UAEhD,KAAK/D,EAAE2S,WAAY,OAAO,2BAAK1E,GAAZ,IAAmBmB,cAAe6R,EAAOld,UAE5D,KAAK/D,EAAEiR,UAAW,OAAO,2BAAKhD,GAAZ,IAAmB2W,eAAe,IACpD,KAAK5kB,EAAE4R,aAAc,OAAO,2BACrB3D,GADc,IAEjBkB,OAAQlB,EAAMkB,OAAO5D,QAAO,SAAC3I,EAAGxF,GAAJ,OAAUA,IAAM6jB,EAAOld,WACnDqL,cAAenB,EAAMmB,cAAgB6R,EAAOld,QACtCkK,EAAMmB,cACNjM,KAAKuH,IAAI,EAAGuD,EAAMmB,cAAgB,KAG5C,KAAKpP,EAAEgG,oBACH,IAAM0uB,EAAQ,eAAQzmB,GAKtB,OAJAymB,EAASvlB,OAASulB,EAASvlB,OAAOjN,KAAI,SAACqpB,GAAD,OAClCA,EAAErlB,UAAY+a,EAAOld,QAAQmC,QAA7B,2BAA4CqlB,GAA5C,kBAAgDtK,EAAOld,QAAQrG,KAAOujB,EAAOld,QAAQkC,QAC/EslB,KAEH,eAAKmJ,GAGhB,KAAK10B,EAAEimB,gBACH,OAAO,2BAAKhY,GAAZ,IAAmByX,WAAYzE,EAAOld,UAG1C,KAAK/D,EAAEmnB,kBACH,OAAO,2BAAKlZ,GAAZ,IAAmBiZ,cAAejG,EAAOld,UAG7C,KAAK/D,EAAEqnB,aACH,OAAO,2BAAKpZ,GAAZ,IAAmBuV,QAASvC,EAAOld,UAGvC,KAAK/D,EAAEmX,gBACH,IAAMud,EAAQ,eAAQzmB,GAKtB,OAJAymB,EAASvlB,OAASulB,EAASvlB,OAAOjN,KAAI,SAACqpB,EAAG7C,GAAJ,OAClCA,IAAUzH,EAAOld,QAAQqL,cAAzB,2BAA8Cmc,GAA9C,IAAiDlc,WAAY4R,EAAOld,QAAQsL,aACtEkc,KAEH,eAAKmJ,GAGhB,KAAK10B,EAAE2qB,aACH,OAAO,2BAAK1c,GAAZ,IAAmB2G,gBAAiBqM,EAAOld,UAG/C,KAAK/D,EAAEwR,kBACH,OAAO,2BAAKvD,GAAZ,IAAmBsD,YAAa0P,EAAOld,UAG3C,KAAK/D,EAAEmG,WACH,IAAMuuB,EAAQ,eAAQzmB,GAItB,OAHAymB,EAASvlB,OAASulB,EAASvlB,OAAOjN,KAAI,SAACqpB,GAAD,OAClCA,EAAErlB,UAAY+a,EAAOld,QAAQmC,QAA7B,2BAA4CqlB,GAA5C,kBAAgDtK,EAAOld,QAAQrG,KAAOujB,EAAOld,QAAQkC,QAAUslB,KAE5F,eAAKmJ,GAGhB,KAAK10B,EAAEwU,sBACH,OAAO,2BAAKvG,GAAZ,IAAmBgU,mBAAoBhB,EAAOld,UAElD,KAAK/D,EAAE8D,eACH,OAAO,2BAAKmK,GAAZ,IAAmBhE,UAAWgX,EAAOld,UAEzC,KAAK/D,EAAE+R,uBACH,OAAO,2BAAK9D,GAAZ,IAAmB4W,iBAAkB5D,EAAOld,UAEhD,KAAK/D,EAAEilB,oBACH,OAAO,2BAAKhX,GAAZ,IAAmB2W,cAAe3D,EAAOld,UAE7C,KAAK/D,EAAEsR,qBACH,OAAO,2BAAKrD,GAAZ,IAAmBogB,gBAAiBpN,EAAOld,UAG/C,KAAK/D,EAAE8Q,cACH,OAAO,2BACA7C,GADP,IAEIse,cAAetL,EAAOld,QAAQgN,KAC9BwZ,QAAStJ,EAAOld,QAAQwmB,QACxBlb,WAAY4R,EAAOld,QAAQsL,aAInC,QACI,OAAOpB,M","file":"static/js/main.500746de.chunk.js","sourcesContent":["export default {\n    ADD_NODE: 'ADD_NODE',\n    ADD_EDGE: 'ADD_EDGE',\n    UPDATE_NODE: 'UPDATE_NODE',\n    UPDATE_EDGE: 'UPDATE_EDGE',\n    UPDATE_DATA: 'UPDATE_DATA',\n    DEL_NODE: 'DEL_NODE',\n    DEL_EDGE: 'DEL_EDGE',\n    SET_POS: 'SET_POS',\n    SET_DIM: 'SET_DIM',\n    SET_BENDW: 'SET_BENDW',\n};\n","import BendingDistanceWeight from '../calculations/bending-dist-weight';\nimport GA from '../graph-actions';\nimport { actionType as T } from '../../reducer';\nimport GraphCanvas from './2-canvas';\n\nclass GraphComponent extends GraphCanvas {\n    getTid;\n\n    nodeValidator;\n\n    edgeValidator;\n\n    addAction;\n\n    getRealSourceId;\n\n    constructor(...args) {\n        super(...args);\n        const [,,,,, nodeValidator, edgeValidator] = args;\n        this.setEdgeNodeValidator({ nodeValidator, edgeValidator });\n        this.getTid = () => new Date().getTime();\n    }\n\n    getPos() {\n        const allNodes = this.cy.$('node');\n        const start = { x: 100, y: 100 };\n        let found = true;\n        while (found) {\n            found = false;\n            for (let i = 0; i < allNodes.length; i += 1) {\n                const nodePos = allNodes[i].position();\n                found = found || (nodePos.x === start.x && nodePos.y === start.y);\n            }\n            if (found) {\n                start.x += 10;\n                start.y += 10;\n            }\n        }\n        return start;\n    }\n\n    addNode(label, style, type = 'ordin', position = this.getPos(),\n        data = {}, id, tid = this.getTid()) {\n        const node = this.cy.add({\n            group: 'nodes',\n            data: {\n                ...data, id, label, type, style,\n            },\n            position,\n        });\n        this.addAction(\n            { actionName: GA.DEL_NODE, parameters: [node.id()] },\n            {\n                actionName: GA.ADD_NODE,\n                parameters: [label, style, type, position, data, node.id()],\n            },\n            tid,\n        );\n        return node;\n    }\n\n    getEdgesBetweenNodes(sourceID, targetID) {\n        return this.getById(sourceID).edgesWith(this.getById(targetID));\n    }\n\n    getBendingD(sourceID, targetID) {\n        const edges = this.getEdgesBetweenNodes(sourceID, targetID);\n        const dists = new Set();\n        edges.forEach((edge) => {\n            if (targetID === edge.target().id()) dists.add(edge.data('bendData').bendDistance);\n            else dists.add(-edge.data('bendData').bendDistance);\n        });\n        for (let d = 0; ;d += 20) {\n            if (!dists.has(d)) return d;\n            if (!dists.has(-d)) return -d;\n        }\n    }\n\n    parseBendinDW({\n        sourceID, targetID, type, bendWeight, bendDistance, bendPoint,\n    }) {\n        if (type !== 'ordin') return { bendDistance: 0, bendWeight: 0 };\n        if (bendDistance && bendWeight) return { bendDistance, bendWeight };\n        if (bendPoint) {\n            const { x, y } = bendPoint;\n            const { d, w } = BendingDistanceWeight.getWeightDistance(\n                { x, y }, this.getById(sourceID).position(), this.getById(targetID).position(),\n            );\n            return { bendDistance: d, bendWeight: w };\n        }\n        return { bendDistance: this.getBendingD(sourceID, targetID), bendWeight: 0.5 };\n    }\n\n    addEdgeWithLabel(edgeData, tid = this.getTid()) {\n        const { type = 'ordin' } = edgeData;\n        const bendData = this.parseBendinDW({ ...edgeData, ...edgeData.bendData });\n        const edge = this.cy.add({\n            group: 'edges',\n            data: {\n                ...edgeData, source: edgeData.sourceID, target: edgeData.targetID, type, bendData,\n            },\n        });\n        this.addAction(\n            { actionName: GA.DEL_EDGE, parameters: [edge.id()] },\n            { actionName: GA.ADD_EDGE, parameters: [{ ...edgeData, id: edge.id() }] },\n            tid,\n        );\n\n        return edge;\n    }\n\n    addEdge(edgeData, tid = this.getTid()) {\n        if ((edgeData.type && edgeData.type !== 'ordin') || edgeData.label) {\n            return this.addEdgeWithLabel({ ...edgeData, type: edgeData.type || 'ordin' }, tid);\n        }\n        this.dispatcher({\n            type: T.Model_Open_Create_Edge,\n            cb: (edgeLabel, edgeStyle) => {\n                const message = this.validiateEdge(edgeLabel, edgeStyle,\n                    edgeData.targetID, edgeData.targetID, null, 'New');\n                if (message.ok) this.addEdgeWithLabel({ ...edgeData, type: edgeData.type || 'ordin' }, tid);\n                return message;\n            },\n        });\n        return undefined;\n    }\n\n    getStyle(id) {\n        return this.getById(id).data('style');\n    }\n\n    getLabel(id) {\n        return this.getById(id).data('label') || this.getById(id).data('label');\n    }\n\n    updateNode(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        this.addAction(\n            {\n                actionName: GA.UPDATE_NODE,\n                parameters: [id, this.getStyle(id), this.getById(id).data('label'), shouldUpdateLabel],\n            },\n            { actionName: GA.UPDATE_NODE, parameters: [id, style, label, shouldUpdateLabel] },\n            tid,\n        );\n        if (shouldUpdateLabel) this.getById(id).data('label', label);\n        this.getById(id).data('style', style);\n    }\n\n    updateEdge(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        this.addAction(\n            {\n                actionName: GA.UPDATE_EDGE,\n                parameters: [id, this.getStyle(id), this.getById(id).data('label'), shouldUpdateLabel],\n            },\n            { actionName: GA.UPDATE_EDGE, parameters: [id, style, label, shouldUpdateLabel] },\n            tid,\n        );\n        if (shouldUpdateLabel) this.getById(id).data('label', label);\n        this.getById(id).data('style', style);\n    }\n\n    updateData(id, key, val, tid = this.getTid()) {\n        this.addAction(\n            { actionName: GA.UPDATE_DATA, parameters: [id, key, this.getById(id).data(key)] },\n            { actionName: GA.UPDATE_DATA, parameters: [id, key, val] }, tid,\n        );\n        this.getById(id).data(key, val);\n        return this;\n    }\n\n    deleteNode(id, tid = this.getTid()) {\n        const node = this.getById(id);\n        node.connectedEdges('[type=\"ordin\"]').forEach((edge) => this.deleteEdge(edge.id(), tid));\n        node.connectedEdges().forEach((edge) => this.deleteEdge(edge.id(), tid));\n        this.addAction(\n            {\n                actionName: GA.ADD_NODE,\n                parameters: [\n                    node.data('label'), this.getStyle(node.id()), node.data('type'),\n                    node.position(), node.json().data, id,\n                ],\n            },\n            { actionName: GA.DEL_NODE, parameters: [id] }, tid,\n        );\n        node.remove();\n    }\n\n    deleteEdge(id, tid = this.getTid()) {\n        if (this.getById(id).length === 0 || this.getById(id).removed()) return;\n        const jsonEd = this.getById(id).json();\n        this.addAction(\n            {\n                actionName: GA.ADD_EDGE,\n                parameters: [{\n                    ...jsonEd.data, sourceID: jsonEd.data.source, targetID: jsonEd.data.target,\n                }],\n            },\n            { actionName: GA.DEL_EDGE, parameters: [id] }, tid,\n        );\n        this.getById(id).remove();\n    }\n\n    deleteElem(id, tid = this.getTid()) {\n        if (this.getById(id).isNode()) return this.deleteNode(id, tid);\n        return this.deleteEdge(id, tid);\n    }\n\n    setPos(id, pos) {\n        this.getById(id).position(pos);\n        this.getById(id).emit('moved');\n    }\n\n    setDim(id, dim, pos) {\n        const style = this.getById(id).data('style');\n        this.getById(id).data('style', { ...style, height: dim.height, width: dim.width });\n        this.setPos(id, pos);\n    }\n\n    getNodeValidator() {\n        const [a, b] = [this.nodeValidator.toString().indexOf('{'), this.nodeValidator.toString().lastIndexOf('}')];\n        return this.nodeValidator.toString().slice(a + 1, b).trim();\n    }\n\n    getEdgeValidator() {\n        const [a, b] = [this.edgeValidator.toString().indexOf('{'), this.edgeValidator.toString().lastIndexOf('}')];\n        return this.edgeValidator.toString().slice(a + 1, b).trim();\n    }\n\n    setEdgeNodeValidator({ nodeValidator, edgeValidator }) {\n        // eslint-disable-next-line no-eval\n        this.nodeValidator = eval(nodeValidator);\n        // eslint-disable-next-line no-eval\n        this.edgeValidator = eval(edgeValidator);\n    }\n\n    getNodesEdges() {\n        const nodes = this.cy.$('node[type=\"ordin\"]').map((node) => ({\n            label: node.data('label'),\n            style: node.data('style'),\n            id: node.data('id'),\n        }));\n        const edges = this.cy.$('edge[type=\"ordin\"]').map((edge) => ({\n            label: edge.data('label'),\n            sourceLabel: this.getById(this.getRealSourceId(edge.source().id())).data('label'),\n            targetLabel: edge.target().data('label'),\n            style: edge.data('style'),\n            id: edge.data('id'),\n        }));\n        return [nodes, edges];\n    }\n\n    validiateComp(comp, validator, type) {\n        const [nodes, edges] = this.getNodesEdges();\n        try {\n            const message = validator(comp, nodes, edges, type);\n            if (message && message.ok !== undefined && message.err !== undefined) return message;\n            return { ok: false, err: 'Invalid return format from the defined validator.' };\n        } catch (e) {\n            return { ok: false, err: `Error raised at validator: ${e.message}` };\n        }\n    }\n\n    validiateNode(label, style, id, type) {\n        if (id) {\n            const node = this.getById(id);\n            return this.validiateComp({\n                label: label || node.data('label'),\n                style: style || node.data('style'),\n                id,\n            }, this.nodeValidator, type);\n        }\n        return this.validiateComp({ label, style, id }, this.nodeValidator, type);\n    }\n\n    validiateEdge(label, style, sourceID, targetID, id, type) {\n        if (id) {\n            const edge = this.getById(id);\n            return this.validiateComp({\n                label: label || edge.data('label'),\n                style: style || edge.data('style'),\n                sourceLabel: this.getById(this.getRealSourceId(edge.source().id())).data('label'),\n                targetLabel: edge.target().data('label'),\n                id,\n            }, this.edgeValidator, type);\n        }\n        return this.validiateComp({\n            label,\n            style,\n            sourceLabel: this.getById(this.getRealSourceId(sourceID)).data('label'),\n            targetLabel: this.getById(targetID).data('label'),\n            id,\n        }, this.edgeValidator, type);\n    }\n}\n\nexport default GraphComponent;\n","// import GraphUndoRedo from './graph-undo-redo';\nimport Core from './1-core';\nimport { actionType as T } from '../../reducer';\n\nclass GraphCanvas extends Core {\n    setZoomUI;\n\n    resetZoom() {\n        this.cy.reset();\n    }\n\n    setOnZoom(cb) {\n        this.cy.removeListener('zoom');\n        this.setZoomUI = cb;\n        this.cy.on('zoom', (e) => cb(Math.round(100 * e.target.zoom())));\n    }\n\n    fitZoom() {\n        this.cy.fit();\n    }\n\n    setZoom(v) {\n        this.cy.zoom(v / 100);\n    }\n\n    getZoom() {\n        return Math.round(this.cy.zoom() * 100);\n    }\n\n    clearAll() {\n        if (this.cy.elements().length === 0) return true;\n        // eslint-disable-next-line no-alert\n        if (!window.confirm('Do want to clear all elements?')) return false;\n        this.cy.elements().forEach((el) => this.deleteElem(el.id(), 0));\n        this.actionArr = [];\n        this.cy.emit('graph-modified');\n        return true;\n    }\n\n    resetAllComp() {\n        this.cy.elements().remove();\n    }\n\n    setCurStatus() {\n        super.setCurStatus();\n        this.dispatcher({ type: T.SET_ZOOM_LEVEL, payload: Math.round(this.cy.zoom() * 100) });\n    }\n}\n\nexport default GraphCanvas;\n","import cytoscape from 'cytoscape';\nimport edgehandles from 'cytoscape-edgehandles';\nimport gridGuide from 'cytoscape-grid-guide';\nimport Konva from 'konva';\nimport nodeEditing from 'cytoscape-node-editing';\nimport $ from 'jquery';\nimport cyOptions from '../../config/cytoscape-options';\nimport BendingDistanceWeight from '../calculations/bending-dist-weight';\nimport { actionType as T } from '../../reducer';\n\nclass CoreGraph {\n    dispatcher;\n\n    superState;\n\n    id;\n\n    projectName;\n\n    authorName;\n\n    cy;\n\n    bendNode;\n\n    constructor(id, element, dispatcher, superState, projectName, nodeValidator, edgeValidator, authorName) {\n        if (dispatcher) this.dispatcher = dispatcher;\n        if (superState) this.superState = superState;\n        if (typeof cytoscape('core', 'edgehandles') !== 'function') {\n            cytoscape.use(edgehandles);\n        }\n        if (typeof cytoscape('core', 'nodeEditing') !== 'function') {\n            nodeEditing(cytoscape, $, Konva);\n        }\n        if (typeof cytoscape('core', 'gridGuide') !== 'function') {\n            gridGuide(cytoscape);\n        }\n        // if (cy) this.cy = cy;\n        this.cy = cytoscape({ ...cyOptions, container: element });\n        this.id = id;\n        this.projectName = projectName;\n        this.authorName = authorName;\n        this.cy.emit('graph-modified');\n        this.bendNode = this.cy.add(\n            { group: 'nodes', data: { type: 'bend' }, classes: ['hidden'] },\n        );\n        this.registerEvents();\n        this.cy.emit('graph-modified');\n        this.initizialize();\n    }\n\n    initizialize() {\n        this.cy.nodeEditing({\n            resizeToContentCueEnabled: () => false,\n            setWidth(node, width) {\n                node.data('style', { ...node.data('style'), width });\n            },\n            setHeight(node, height) {\n                node.data('style', { ...node.data('style'), height });\n            },\n            isNoResizeMode(node) { return node.data('type') !== 'ordin'; },\n            isNoControlsMode(node) { return node.data('type') !== 'ordin'; },\n        });\n\n        this.cy.gridGuide({\n            snapToGridOnRelease: false,\n            zoomDash: true,\n            panGrid: true,\n        });\n        this.cy.edgehandles({\n            preview: false,\n            handlePosition() {\n                return 'none';\n            },\n            handleNodes: 'node[type = \"ordin\"],node[type = \"special\"]',\n            complete: (a, b, c) => { c.remove(); this.addEdge({ sourceID: a.id(), targetID: b.id() }); },\n        });\n    }\n\n    getById(x) {\n        return this.cy.getElementById(x);\n    }\n\n    getLabelFromID(x) {\n        return this.getById(x).data('label') || '**Deleted El**';\n    }\n\n    set({\n        cy, dispatcher, superState, projectName, authorName,\n    }) {\n        if (dispatcher) this.dispatcher = dispatcher;\n        if (superState) this.superState = superState;\n        if (cy) this.cy = cy;\n        if (projectName) this.projectName = projectName;\n        if (authorName) this.authorName = authorName;\n    }\n\n    setProjectName(projectName, shouldEmit = true) {\n        this.projectName = projectName;\n        if (shouldEmit) {\n            this.dispatcher({\n                type: T.SET_PROJECT_DETAILS,\n                payload: {\n                    value: projectName,\n                    graphID: this.id,\n                    type: 'projectName',\n                },\n            });\n        }\n        this.cy.emit('graph-modified');\n    }\n\n    setProjectAuthor(authorName, shouldEmit = true) {\n        this.authorName = authorName;\n        if (shouldEmit) {\n            this.dispatcher({\n                type: T.SET_AUTHOR,\n                payload: {\n                    value: authorName,\n                    graphID: this.id,\n                    type: 'authorName',\n                },\n            });\n        }\n        this.cy.emit('graph-modified');\n    }\n\n    setServerID(serverID, shouldEmit = true) {\n        this.serverID = serverID;\n        if (shouldEmit) {\n            this.dispatcher({\n                type: T.SET_PROJECT_DETAILS,\n                payload: {\n                    value: serverID,\n                    graphID: this.id,\n                    type: 'serverID',\n                },\n            });\n        }\n        this.cy.emit('graph-modified');\n    }\n\n    selectDeselectEventHandler() {\n        const els = this.cy.$(':selected');\n        if (els.length === 0) { return this.dispatcher({ type: T.ELE_UNSELECTED }); }\n        let type;\n        if (els.every((e) => e.isNode())) type = 'NODE';\n        else if (els.every((e) => e.isEdge())) type = 'EDGE';\n        else type = 'MIX';\n        const ids = els.map((e) => e.data('id'));\n        return this.dispatcher({\n            type: T.ELE_SELECTED,\n            payload: {\n                ids, type,\n            },\n        });\n    }\n\n    registerEvents() {\n        this.cy.on('select unselect', () => this.selectDeselectEventHandler());\n        this.cy.on('grab', 'node[type = \"ordin\"]', (e) => {\n            e.target.forEach((node) => {\n                node.scratch('position', { ...node.position() });\n            });\n        });\n\n        this.cy.on('nodeediting.resizestart', (e, type, node) => {\n            node.scratch('height', node.data('style').height);\n            node.scratch('width', node.data('style').width);\n            node.scratch('position', { ...node.position() });\n        });\n\n        this.cy.on('hide-bend remove', () => {\n            this.bendNode.removeListener('drag grab dragfree'); this.bendNode.addClass('hidden');\n        });\n\n        this.cy.on('grabon', (evt) => (evt.target[0].data('type') !== 'bend' ? this.cy.emit('hide-bend') : 0));\n        this.cy.on('freeon', (evt) => (evt.target[0].data('type') !== 'bend' ? this.cy.emit('show-bend') : 0));\n\n        this.cy.on('click tap', (ev) => {\n            if (ev.target === this.cy) {\n                this.cy.emit('hide-bend');\n                this.cy.$('.eh-handle').remove();\n            }\n        });\n        this.cy.on('select unselect show-bend', () => {\n            const el = this.cy.$(':selected');\n            if (el.length !== 1 || !el[0].isEdge()) this.cy.emit('hide-bend');\n            return el.emit('bend-edge');\n        });\n        this.cy.on('mouseover', 'edge', (ev) => {\n            ev.target.emit('bend-edge');\n        });\n\n        this.cy.on('bend-edge', 'edge', (ev) => {\n            if (!this.bendNode.hasClass('hidden')) this.cy.emit('hide-bend');\n            const el = ev.target;\n            this.bendNode.position(CoreGraph.getBendEdgePoint(el));\n            this.bendNode.on('drag', () => {\n                const DW = BendingDistanceWeight.getWeightDistance(\n                    this.bendNode.position(), el.source().position(), el.target().position(),\n                );\n                el.data('bendData', { bendDistance: DW.d, bendWeight: DW.w });\n                ev.target.emit('bending');\n            });\n            this.bendNode.on('grab', () => {\n                const node = el;\n                node.scratch('bendDistWeight', el.data('bendData'));\n            });\n            this.bendNode.on('dragfree', () => {\n                const node = el;\n                this.addBendChange(node.id(), node.scratch('bendDistWeight'), el.data('bendData'));\n            });\n            this.bendNode.removeClass('hidden');\n        });\n    }\n\n    setBendWightDist(id, DW) {\n        this.getById(id).data('bendData', DW);\n    }\n\n    static getBendEdgePoint(el) {\n        const { bendWeight, bendDistance } = el.data('bendData');\n        const w = parseFloat(bendWeight);\n        const d = parseFloat(bendDistance);\n        return BendingDistanceWeight.getCoordinate(w, d, el.source().position(), el.target().position());\n    }\n\n    setCurStatus() {\n        this.selectDeselectEventHandler();\n    }\n\n    reset() {\n        this.resetAllComp();\n        this.resetAllAction();\n    }\n}\n\nexport default CoreGraph;\n","const getSet = (ALL_GRAPHS) => {\n    if (!window.localStorage.getItem(ALL_GRAPHS)) {\n        window.localStorage.setItem(ALL_GRAPHS, window.btoa(JSON.stringify([])));\n    }\n    return new Set(JSON.parse(window.atob(window.localStorage.getItem(ALL_GRAPHS))));\n};\n\nconst localStorageManager = {\n    ALL_GRAPHS: window.btoa('ALL_GRAPHS'),\n    AUTHOR_NAME: window.btoa('AUTHOR_NAME'),\n\n    allgs: getSet(window.btoa('ALL_GRAPHS')),\n\n    saveAllgs() {\n        window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify(Array.from(this.allgs))));\n    },\n\n    addEmptyIfNot() {\n        if (!window.localStorage.getItem(this.ALL_GRAPHS)) {\n            window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify([])));\n        }\n    },\n\n    get(id) {\n        if (window.localStorage.getItem(id) === null) return null;\n        return JSON.parse(window.atob(window.localStorage.getItem(id)));\n    },\n    save(id, graphContent) {\n        this.addGraph(id);\n        const serializedJson = JSON.stringify(graphContent);\n        window.localStorage.setItem(id, window.btoa(serializedJson));\n    },\n    remove(id) {\n        if (this.allgs.delete(id)) this.saveAllgs();\n        localStorage.removeItem(id);\n    },\n    addGraph(id) {\n        if (this.allgs.has(id)) return;\n        this.allgs.add(id);\n        this.saveAllgs();\n    },\n    getAllGraphs() {\n        return JSON.parse(window.atob(window.localStorage.getItem(this.ALL_GRAPHS)));\n    },\n    addToFront(id) {\n        if (this.allgs.has(id)) return;\n        this.allgs.add(id);\n        const Garr = JSON.parse(window.atob(window.localStorage.getItem(this.ALL_GRAPHS)));\n        Garr.unshift(id);\n        window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify(Garr)));\n    },\n    getAuthorName() {\n        return localStorage.getItem(this.AUTHOR_NAME) || '';\n    },\n    setAuthorName(authorName) {\n        localStorage.setItem(this.AUTHOR_NAME, authorName);\n    },\n    clearGraph(id) {\n        window.localStorage.removeItem(id);\n    },\n    getFileList() {\n        return localStorage.getItem('fileList') || '';\n    },\n};\nexport default localStorageManager;\n","import Slider from 'rc-slider';\nimport React from 'react';\nimport { BiReset, BiRectangle } from 'react-icons/bi';\nimport 'rc-slider/assets/index.css';\nimport './zoomSetter.css';\nimport GraphOption from '../config/cytoscape-options';\nimport { actionType as T } from '../reducer';\n\nconst { minZoom, maxZoom } = GraphOption;\nconst marks = {};\n\nconst ZoomComp = ({ superState, dispatcher }) => {\n    const myGraph = superState.curGraphInstance;\n    if (!myGraph) return <></>;\n    const zoomValue = superState.zoomLevel;\n    return (\n        <div>\n            <div className=\"zoom-comp\">\n                <div\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"zoom-box zoom-btn\"\n                    onClick={() => myGraph.resetZoom()}\n                    onKeyDown={(ev) => ev.key === ' ' && (myGraph.resetZoom())}\n                >\n                    <BiReset />\n\n                </div>\n                <div\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"zoom-box zoom-btn\"\n                    onClick={() => myGraph.fitZoom()}\n                    onKeyDown={(ev) => ev.key === ' ' && (myGraph.resetZoom())}\n                >\n                    <BiRectangle />\n\n                </div>\n                <div className=\"zoom-box zoom-value\">\n                    {zoomValue}\n                    %\n                </div>\n                <div className=\"slider\">\n                    <Slider\n                        min={100 * minZoom}\n                        max={100 * maxZoom}\n                        marks={marks}\n                        onChange={\n                            (value) => {\n                                myGraph.setZoom(value);\n                                dispatcher({ type: T.SET_ZOOM_LEVEL, payload: value });\n                            }\n                        }\n                        included={false}\n                        value={zoomValue}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ZoomComp;\n","class PropFromArr {\n    constructor(obj) {\n        this.arr = [obj];\n        this.flatenArr();\n    }\n\n    flatenArr() {\n        const flatArr = [];\n        for (let i = 0; i < this.arr.length; i += 1) {\n            if (this.arr[i].constructor === Array) this.arr[i].forEach((o) => this.arr.push(o));\n            else flatArr.push(this.arr[i]);\n        }\n        this.arr = flatArr;\n    }\n\n    G(p) {\n        return new PropFromArr(this.arr.map((o) => o[p]).filter((o) => o));\n    }\n\n    S(p) {\n        this.arr = this.arr.map((o) => o[p]).filter((o) => o);\n        this.flatenArr();\n        return this;\n    }\n\n    any() {\n        const arr = [];\n        this.arr.forEach((obj) => {\n            Object.keys(obj).forEach((key) => {\n                arr.push(obj[key]);\n            });\n        });\n        this.arr = arr;\n        this.flatenArr();\n        return this;\n    }\n\n    parseProps(s, t) {\n        const propFromArr = new PropFromArr(this.arr);\n        s.split('.').forEach(\n            (property) => (property === '*' ? propFromArr.any() : propFromArr.S(property)),\n        );\n        if (t === 1) return propFromArr.A();\n        if (t === 2) return propFromArr;\n        return propFromArr.F();\n    }\n\n    A() { return this.arr; }\n\n    F() { return this.arr[0]; }\n}\nexport default PropFromArr;\n","import PropFromArr from './PropFromArr';\n\nconst mapByDefault = (x, arr, def) => {\n    if (arr.includes(x)) return x;\n    return def;\n};\n\nconst parseNode = (node) => {\n    const p = new PropFromArr(node).parseProps('data.y:ShapeNode', 2);\n    return {\n        label: p.parseProps('y:NodeLabel._') || p.parseProps('y:NodeLabel'),\n        id: new PropFromArr(node).parseProps('$.id'),\n        position: {\n            x: parseFloat(p.parseProps('y:Geometry.$.x')),\n            y: parseFloat(p.parseProps('y:Geometry.$.y')),\n        },\n        style: {\n            width: parseFloat(p.parseProps('y:Geometry.$.width')),\n            height: parseFloat(p.parseProps('y:Geometry.$.height')),\n            opacity: parseInt(p.parseProps('y:Fill.$.opacity'), 10) || 1,\n            shape: mapByDefault(p.parseProps('y:Shape.$.type'), ['rectangle', 'ellipse'], 'rectangle'),\n            backgroundColor: p.parseProps('y:Fill.$.color'),\n            borderColor: p.parseProps('y:BorderStyle.$.color'),\n            borderWidth: parseInt(p.parseProps('y:BorderStyle.$.width'), 10),\n        },\n    };\n};\n\nconst parseEdge = (edge) => ({\n    label: new PropFromArr(edge).parseProps('data.*.y:EdgeLabel._')\n             || new PropFromArr(edge).parseProps('data.*.y:EdgeLabel'),\n    source: new PropFromArr(edge).parseProps('$.source'),\n    target: new PropFromArr(edge).parseProps('$.target'),\n    style: {\n        backgroundColor: new PropFromArr(edge).parseProps('data.*.y:LineStyle.$.color'),\n        thickness: parseFloat(new PropFromArr(edge).parseProps('data.*.y:LineStyle.$.width')),\n        shape: mapByDefault(new PropFromArr(edge).parseProps('data.*.y:LineStyle.$.type'),\n            ['dashed', 'dotted'], 'solid'),\n    },\n    bendData: {\n        bendPoint: new PropFromArr(edge).parseProps('data.*.y:Path.y:Point.$'),\n    },\n});\n\nconst parseActionML = (({ actionName, parameters }) => ({ actionName: actionName[0], parameters: parameters[0] }));\n\nconst parseActionHistory = (grahML) => grahML.parseProps('graphml.graph.actionHistory', 1)\n    .map(({\n        equivalent, inverse, tid,\n    }) => ({\n\n        equivalent: parseActionML(equivalent[0]),\n        inverse: parseActionML(inverse[0]),\n        tid: tid[0],\n    }));\n\nconst parseDetails = (grahML) => grahML.parseProps('graphml.graph.$');\n\nexport {\n    parseNode, parseEdge, parseDetails, parseActionHistory,\n};\n","import xml2js from 'xml2js';\nimport PropFromArr from './PropFromArr';\nimport {\n    parseNode, parseEdge, parseDetails, parseActionHistory,\n} from './parseProperties';\n\nconst parser = (graphMlCnt) => new Promise((resolve) => {\n    new xml2js.Parser().parseString(graphMlCnt, (err, grahMLObj) => {\n        const grahML = new PropFromArr(grahMLObj);\n        const nodes = grahML.parseProps('graphml.graph.node', 1).map(parseNode);\n        const edges = grahML.parseProps('graphml.graph.edge', 1).map(parseEdge);\n        const {\n            id, projectName, serverID, authorName,\n        } = parseDetails(grahML);\n        const actionHistory = parseActionHistory(grahML);\n        resolve({\n            id, projectName, edges, nodes, actionHistory, serverID, authorName,\n        });\n    });\n});\nexport default parser;\n","import { toast } from 'react-toastify';\nimport parser from '../graph-builder/graphml/parser';\nimport { actionType as T } from '../reducer';\n\nconst getGraphFun = (superState) => superState.curGraphInstance;\n\nconst createNode = (state, setState) => {\n    setState({\n        type: T.Model_Open_Create_Node,\n        cb: (label, style) => {\n            const message = getGraphFun(state).validiateNode(label, style, null, 'New');\n            if (message.ok) getGraphFun(state).addNode(label, style);\n            return message;\n        },\n    });\n};\n\nconst editElement = (state, setState) => {\n    const shouldUpdateLabel = state.eleSelectedPayload.ids.length === 1;\n    const tid = new Date().getTime();\n    if (state.eleSelectedPayload.type === 'NODE') {\n        setState({\n            type: T.Model_Open_Update_Node,\n            cb: (label, style) => {\n                const retMessage = { ok: true, err: null };\n                state.eleSelectedPayload.ids.forEach((id) => {\n                    const message = getGraphFun(state).validiateNode(\n                        shouldUpdateLabel ? label : null, style, id, 'Update',\n                    );\n                    retMessage.ok = retMessage.ok && message.ok;\n                    retMessage.err = retMessage.err || message.err;\n                });\n                if (retMessage.ok) {\n                    state.eleSelectedPayload.ids.forEach(\n                        (id) => getGraphFun(state).updateNode(id, style, label, shouldUpdateLabel, tid),\n                    );\n                }\n                return retMessage;\n            },\n            labelAllowed: shouldUpdateLabel,\n            label: getGraphFun(state).getLabel(state.eleSelectedPayload.ids[0]),\n            style: getGraphFun(state).getStyle(state.eleSelectedPayload.ids[0]),\n        });\n    }\n    if (state.eleSelectedPayload.type === 'EDGE') {\n        setState({\n            type: T.Model_Open_Update_Edge,\n            cb: (label, style) => {\n                const retMessage = { ok: true, err: null };\n                state.eleSelectedPayload.ids.forEach((id) => {\n                    const message = getGraphFun(state).validiateEdge(\n                        shouldUpdateLabel ? label : null, style, null, null, id, 'Update',\n                    );\n                    retMessage.ok = retMessage.ok && message.ok;\n                    retMessage.err = retMessage.err || message.err;\n                });\n                if (retMessage.ok) {\n                    state.eleSelectedPayload.ids.forEach(\n                        (id) => getGraphFun(state).updateEdge(id, style, label, shouldUpdateLabel, tid),\n                    );\n                }\n                return retMessage;\n            },\n            labelAllowed: shouldUpdateLabel,\n            label: getGraphFun(state).getLabel(state.eleSelectedPayload.ids[0]),\n            style: getGraphFun(state).getStyle(state.eleSelectedPayload.ids[0]),\n        });\n    }\n};\n\nconst deleteElem = (state, dispatcher) => {\n    const tid = new Date().getTime();\n    state.eleSelectedPayload.ids.forEach((id) => getGraphFun(state).deleteElem(id, tid));\n    dispatcher({ type: T.ELE_UNSELECTED, payload: null });\n};\n\nconst downloadImg = (state, setState, format) => {\n    getGraphFun(state).downloadImg(format);\n};\n\nconst saveAction = (state) => {\n    getGraphFun(state).saveToDisk();\n};\n\nasync function saveGraphMLFile(state) {\n    if (state.curGraphInstance) {\n        const graph = state.graphs[state.curGraphIndex];\n        if (graph.fileHandle) {\n            const stream = await graph.fileHandle.createWritable();\n            await stream.write(getGraphFun(state).saveToFolder());\n            await stream.close();\n            toast.success('File saved Successfully');\n        } else if (!graph.fileHandle) {\n            getGraphFun(state).saveWithoutFileHandle();\n        } else {\n            toast.info('Switch to Edge/Chrome!');\n        }\n    } else {\n        toast.info('Switch to Edge/Chrome!');\n    }\n}\n\nconst readFile = async (state, setState, file, fileHandle) => {\n    if (file) {\n        const fr = new FileReader();\n        const projectName = file.name;\n        if (file.name.split('.').pop() === 'graphml') {\n            fr.onload = (x) => {\n                parser(x.target.result).then(({ authorName }) => {\n                    setState({\n                        type: T.ADD_GRAPH,\n                        payload: {\n                            projectName, graphML: x.target.result, fileHandle, fileName: file.name, authorName,\n                        },\n                    });\n                });\n            };\n            if (fileHandle) fr.readAsText(await fileHandle.getFile());\n            else fr.readAsText(file);\n        }\n    }\n};\n\nconst readTextFile = (state, setState, file, fileHandle) => {\n    if (file) {\n        setState({\n            type: T.EDIT_TEXTFILE,\n            payload: { show: true, fileObj: file, fileHandle },\n        });\n    }\n};\n\nconst createFile = (state, setState) => {\n    setState({\n        type: T.EDIT_TEXTFILE,\n        payload: { show: true },\n    });\n};\n\nconst newProject = (state, setState) => {\n    setState({ type: T.NEW_GRAPH });\n};\n\nconst clearAll = (state) => {\n    getGraphFun(state).clearAll();\n};\n\nconst editDetails = (state, setState) => {\n    setState({\n        type: T.SET_EDIT_DETAILS_MODAL,\n        payload: true,\n    });\n};\n\nconst undo = (state) => {\n    if (getGraphFun(state)) getGraphFun(state).undo();\n};\nconst redo = (state) => {\n    getGraphFun(state).redo();\n};\n\nconst openShareModal = (state, setState) => {\n    setState({ type: T.SET_SHARE_MODAL, payload: true });\n};\n\nconst openSettingModal = (state, setState) => {\n    setState({ type: T.SET_SETTING_MODAL, payload: true });\n};\n\nconst contribute = (state, setState) => {\n    setState({ type: T.SET_CONTRIBUTE_MODAL, payload: true });\n};\n\nconst viewHistory = (state, setState) => {\n    setState({ type: T.SET_HISTORY_MODAL, payload: true });\n};\n\nconst toggleServer = (state, dispatcher) => {\n    if (state.isWorkflowOnServer) {\n        dispatcher({ type: T.IS_WORKFLOW_ON_SERVER, payload: false });\n    } else {\n        dispatcher({ type: T.IS_WORKFLOW_ON_SERVER, payload: true });\n    }\n};\n\nexport {\n    createNode, editElement, deleteElem, downloadImg, saveAction, saveGraphMLFile,\n    createFile, readFile, readTextFile, newProject, clearAll, editDetails, undo, redo,\n    openShareModal, openSettingModal, viewHistory,\n    toggleServer, contribute,\n};\n","import React from 'react';\nimport {\n    MdEdit, MdClose, MdAdd,\n} from 'react-icons/md';\nimport hotkeys from 'hotkeys-js';\nimport ReactTooltip from 'react-tooltip';\nimport localStorageManager from '../graph-builder/local-storage-manager';\nimport { actionType as T } from '../reducer';\nimport { newProject, editDetails } from '../toolbarActions/toolbarFunctions';\nimport './tabBar.css';\n\nconst TabBar = ({ superState, dispatcher }) => {\n    const closeTab = (i, e) => {\n        e.stopPropagation();\n        // eslint-disable-next-line no-alert\n        if (!window.confirm('Do you confirm to close the tab? This action is irreversable.')) return;\n        localStorageManager.remove(superState.graphs[i] ? superState.graphs[i].graphID : null);\n        dispatcher({ type: T.REMOVE_GRAPH, payload: i });\n        if (!superState.curGraphIndex) {\n            dispatcher({ type: T.SET_CUR_INSTANCE, payload: null });\n        }\n    };\n    const editCur = (e) => {\n        e.stopPropagation();\n        editDetails(superState, dispatcher);\n    };\n    React.useEffect(() => {\n        hotkeys('ctrl+shift+m,command+shift+m', (event) => {\n            event.preventDefault();\n            document.getElementById('new_graph').click();\n        });\n        hotkeys('ctrl+shift+e,command+shift+e', (event) => {\n            event.preventDefault();\n            const el = document.querySelector('.tab.tab-graph.selected > .tab-act.edit');\n            if (el) el.click();\n        });\n        hotkeys('ctrl+shift+l,command+shift+l', (event) => {\n            event.preventDefault();\n            const el = document.querySelector('.tab.tab-graph.selected > .tab-act.close');\n            if (el) el.click();\n        });\n    }, []);\n\n    return (\n        <div className=\"tab-par\">\n            <button\n                className=\"tab\"\n                onClick={newProject.bind(this, superState, dispatcher)}\n                type=\"button\"\n                id=\"new_graph\"\n                data-tip=\"New Workflow Tab (Ctrl + Shift + M)\"\n            >\n                <MdAdd size={25} />\n            </button>\n            {superState.graphs.map((el, i) => (\n                <div\n                    key={el.graphID}\n                    className={`tab tab-graph ${superState.curGraphIndex === i ? 'selected' : 'none'}`}\n                    onClick={() => dispatcher({ type: T.CHANGE_TAB, payload: i })}\n                    onKeyDown={(ev) => ev.key === ' ' && dispatcher({ type: T.CHANGE_TAB, payload: i })}\n                    role=\"button\"\n                    tabIndex={0}\n                    id={`tab_${i}`}\n                >\n                    <span className=\"tab-text\">\n                        {el.fileName || el.projectName}\n                    </span>\n\n                    {superState.curGraphIndex === i ? (\n                        <button\n                            className=\"tab-act edit\"\n                            onClick={editCur}\n                            type=\"button\"\n                            data-tip=\"Edit Workflow Details (Ctrl + Shift + E)\"\n                            data-for=\"header-tab\"\n                        >\n                            <MdEdit size={16} />\n                        </button>\n                    ) : <></>}\n                    <button\n                        className=\"tab-act close\"\n                        onClick={closeTab.bind(this, i)}\n                        type=\"button\"\n                        data-tip=\"Close current Workflow (Ctrl + Shift + L)\"\n                        data-for=\"header-tab\"\n                    >\n                        <MdClose size={20} />\n                    </button>\n                    <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"solid\" id=\"header-tab\" />\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default TabBar;\n","const nodeML = ({\n  label, id, posX, posY, width, height, opacity, shape, backgroundColor, borderColor, borderWidth,\n}) => ({\n  $: {\n    id,\n  },\n  data: [\n    {\n      $: {\n        key: 'd6',\n      },\n      'y:ShapeNode': [\n        {\n          'y:Geometry': [\n            {\n              $: {\n                height,\n                width,\n                x: posX,\n                y: posY,\n              },\n            },\n          ],\n          'y:Fill': [\n            {\n              $: {\n                color: backgroundColor,\n                opacity,\n              },\n            },\n          ],\n          'y:BorderStyle': [\n            {\n              $: {\n                color: borderColor,\n                width: borderWidth,\n              },\n            },\n          ],\n          'y:NodeLabel': [label],\n          'y:Shape': [\n            {\n              $: {\n                type: shape,\n              },\n            },\n          ],\n        },\n      ],\n    },\n  ],\n});\n\nexport default nodeML;\n","const graphML = ({\n  nodes, edges, id, projectName, authorName, actionHistory, serverID, fileHandle, fileName,\n}) => ({\n  graphml: {\n    $: {\n      xmlns: 'http://graphml.graphdrawing.org/xmlns',\n      'xmlns:xsi': 'http://www.w3.org/2001/XMLSchema-instance',\n      'xsi:schemaLocation': 'http://graphml.graphdrawing.org/xmlns http://www.yworks.com/xml/schema/graphml/1.1/ygraphml.xsd',\n      'xmlns:y': 'http://www.yworks.com/xml/graphml',\n    },\n    key: [\n      {\n        $: {\n          for: 'node',\n          id: 'd6',\n          'yfiles.type': 'nodegraphics',\n        },\n      },\n      {\n        $: {\n          for: 'edge',\n          id: 'd10',\n          'yfiles.type': 'edgegraphics',\n        },\n      },\n    ],\n    graph: [\n      {\n        $: {\n          edgedefault: 'directed',\n          id,\n          projectName,\n          serverID,\n          fileHandle,\n          fileName,\n          authorName,\n        },\n        node: nodes,\n        edge: edges,\n        actionHistory,\n      },\n    ],\n  },\n});\n\nexport default graphML;\n","const edgeML = ({\n  id, label, source, target, lineColor, lineWidth, bendPoint, type,\n}) => ({\n  $: {\n    id,\n    source,\n    target,\n  },\n  data: [\n    {\n      $: {\n        key: 'd10',\n      },\n      'y:GenericEdge': [\n        {\n          $: {\n            configuration: 'com.yworks.bpmn.Connection',\n          },\n          'y:LineStyle': [\n            {\n              $: {\n                color: lineColor,\n                width: lineWidth,\n                type,\n              },\n            },\n          ],\n          'y:Arrows': [\n            {\n              $: {\n                source: 'none',\n                target: 'delta',\n              },\n            },\n          ],\n          'y:EdgeLabel': [label],\n          'y:Path': [\n            {\n              $: {\n                sx: '0.0',\n                sy: '0.0',\n                tx: '0.0',\n                ty: '0.0',\n              },\n              'y:Point': [\n                { $: bendPoint },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n  ],\n});\n\nexport default edgeML;\n","import xml2js from 'xml2js';\nimport nodeML from './nodeML';\nimport graphML from './graphML';\nimport edgeML from './edgeML';\n\nconst builder = (G) => {\n    const nodes = G.nodes.map((node) => (nodeML({\n        label: node.label,\n        id: node.id,\n        posX: node.position.x,\n        posY: node.position.y,\n        ...node.style,\n    })));\n    const edges = G.edges.map((edg, i) => edgeML({\n        id: i,\n        label: edg.label,\n        source: edg.source,\n        target: edg.target,\n        lineColor: edg.style.backgroundColor,\n        lineWidth: edg.style.thickness,\n        bendPoint: edg.bendData.bendPoint,\n        type: edg.style.shape,\n    }));\n    const X = graphML({\n        nodes,\n        edges,\n        projectName: G.projectName,\n        id: G.id,\n        actionHistory: G.actionHistory,\n        serverID: G.serverID,\n        fileHandle: G.fileHandle,\n        fileName: G.fileName,\n        authorName: G.authorName,\n    });\n    const xml = new xml2js.Builder().buildObject(X);\n    return xml;\n};\nexport default builder;\n","import GraphServer from './6-server';\n\nexport default GraphServer;\n","import Axios from 'axios';\nimport { actionType as T } from '../../reducer';\nimport GraphLoadSave from './5-load-save';\n// import {\n//     postGraph, updateGraph, forceUpdateGraph, getGraph, getGraphWithHashCheck,\n// } from '../../serverCon/crud_http';\n\nclass GraphServer extends GraphLoadSave {\n    set(config) {\n        const { serverID } = config;\n        super.set(config);\n        if (serverID) {\n            this.setServerID(serverID);\n            this.dispatcher({ type: T.IS_WORKFLOW_ON_SERVER, payload: Boolean(this.serverID) });\n        }\n    }\n    // Not being immplemented in version 1\n    // pushToServer() {\n    //     if (this.serverID) {\n    //         updateGraph(this.serverID, this.getGraphML()).then(() => {\n\n    //         });\n    //     } else {\n    //         postGraph(this.getGraphML()).then((serverID) => {\n    //             this.set({ serverID });\n    //             this.cy.emit('graph-modified');\n    //         });\n    //     }\n    // }\n\n    // forcePushToServer() {\n    //     if (this.serverID) {\n    //         forceUpdateGraph(this.serverID, this.getGraphML()).then(() => {\n\n    //         });\n    //     } else {\n    //         postGraph(this.getGraphML()).then((serverID) => {\n    //             this.set({ serverID });\n    //         });\n    //     }\n    // }\n\n    // forcePullFromServer() {\n    //     if (this.serverID) {\n    //         getGraph(this.serverID).then((graphXML) => {\n    //             this.setGraphML(graphXML);\n    //         });\n    //     } else {\n    //         // eslint-disable-next-line no-alert\n    //         alert('Not on server');\n    //     }\n    // }\n\n    // pullFromServer() {\n    //     if (this.actionArr.length === 0) { this.forcePullFromServer(); return; }\n    //     if (this.serverID) {\n    //         getGraphWithHashCheck(this.serverID, this.actionArr.at(-1).hash).then((graphXML) => {\n    //             this.setGraphML(graphXML);\n    //         }).catch(() => {\n\n    //         });\n    //     } else {\n    //         // eslint-disable-next-line no-alert\n    //         alert('Not on server');\n    //     }\n    // }\n\n    build() {\n        // TODO\n        Axios.post(`http://127.0.0.1:5000/build/${this.superState.uploadedDirName}?fetch=${this.superState.graphs[this.superState.curGraphIndex].fileName.split('.')[0]}`)\n            .then((res) => { // eslint-disable-next-line\n                alert(res.data['message'])\n            }).catch((err) => { // eslint-disable-next-line\n                alert(err);\n            });\n        if (this.serverID);\n    }\n\n    debug() {\n        // TODO\n        Axios.post(`http://127.0.0.1:5000/debug/${this.superState.graphs[this.superState.curGraphIndex].fileName.split('.')[0]}`)\n            .then((res) => { // eslint-disable-next-line\n                alert(res.data['message'])\n            }).catch((err) => { // eslint-disable-next-line\n                alert(err);\n            });\n        if (this.serverID);\n    }\n\n    run() {\n        // TODO\n        Axios.post(`http://127.0.0.1:5000/run/${this.superState.graphs[this.superState.curGraphIndex].fileName.split('.')[0]}`)\n            .then((res) => { // eslint-disable-next-line\n                alert(res.data['message'])\n            }).catch((err) => { // eslint-disable-next-line\n                alert(err);\n            });\n        if (this.serverID);\n    }\n\n    clear() {\n        // TODO\n        Axios.post(`http://127.0.0.1:5000/clear/${this.superState.graphs[this.superState.curGraphIndex].fileName.split('.')[0]}`)\n            .then((res) => { // eslint-disable-next-line\n                alert(res.data['message'])\n            }).catch((err) => { // eslint-disable-next-line\n                alert(err);\n            });\n        if (this.serverID);\n    }\n\n    stop() {\n        // TODO\n        Axios.post(`http://127.0.0.1:5000/stop/${this.superState.graphs[this.superState.curGraphIndex].fileName.split('.')[0]}`)\n            .then((res) => { // eslint-disable-next-line\n                alert(res.data['message'])\n            }).catch((err) => { // eslint-disable-next-line\n                alert(err);\n            });\n        if (this.serverID);\n    }\n\n    destroy() {\n        // TODO\n        Axios.delete(`http://127.0.0.1:5000/destroy/${this.superState.graphs[this.superState.curGraphIndex].fileName.split('.')[0]}`)\n            .then((res) => { // eslint-disable-next-line\n                alert(res.data['message'])\n            }).catch((err) => { // eslint-disable-next-line\n                alert(err);\n            });\n        if (this.serverID);\n    }\n\n    setCurStatus() {\n        super.setCurStatus();\n        this.dispatcher({ type: T.IS_WORKFLOW_ON_SERVER, payload: Boolean(this.serverID) });\n    }\n}\n\nexport default GraphServer;\n","import { saveAs } from 'file-saver';\nimport { toast } from 'react-toastify';\nimport localStorageManager from '../local-storage-manager';\nimport graphmlBuilder from '../graphml/builder';\nimport BendingDistanceWeight from '../calculations/bending-dist-weight';\nimport GraphUndoRedo from './4-undo-redo';\nimport graphMLParser from '../graphml/parser';\nimport { actionType as T } from '../../reducer';\n\nclass GraphLoadSave extends GraphUndoRedo {\n    autoSaveIntervalId\n\n    constructor(...args) {\n        super(...args);\n        this.autoSaveIntervalId = null;\n    }\n\n    registerEvents() {\n        super.registerEvents();\n        this.cy.on('add remove data dragfreeon', 'node[type=\"ordin\"]', () => this.saveLocalStorage());\n        this.cy.on('add remove data', 'edge[type=\"ordin\"]', () => this.saveLocalStorage());\n        this.cy.on('nodeediting.resizeend graph-modified', () => this.saveLocalStorage());\n    }\n\n    downloadImg(format) {\n        this.cy.emit('hide-bend');\n        this.cy.$('.eh-handle').remove();\n        if (format === 'PNG') saveAs(this.cy.png({ full: true }), `${this.getName()}-DHGWorkflow.png`);\n        if (format === 'JPG') saveAs(this.cy.jpg({ full: true }), `${this.getName()}-DHGWorkflow.jpg`);\n    }\n\n    shouldNodeBeSaved(nodeID) {\n        return this.getById(nodeID).data('type') === 'ordin';\n    }\n\n    shouldEdgeBeSaved(edgeID) {\n        return this.getById(edgeID).data('type') === 'ordin';\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getRealSourceId(nodeID) {\n        return nodeID;\n    }\n\n    static stringifyAction({ actionName, parameters }) {\n        return { actionName, parameters: window.btoa(JSON.stringify(parameters)) };\n    }\n\n    static parseAction({ actionName, parameters }) {\n        return { actionName, parameters: JSON.parse(window.atob(parameters)) };\n    }\n\n    jsonifyGraph() {\n        const graph = {\n            nodes: [],\n            edges: [],\n            actionHistory: [],\n            projectName: this.projectName,\n            id: this.id,\n            serverID: this.serverID,\n            fileName: null,\n            fileHandle: null,\n            authorName: this.authorName,\n        };\n        this.cy.nodes().forEach((node) => {\n            if (this.shouldNodeBeSaved(node.id())) {\n                const all = node.json();\n                const nodeJson = {\n                    label: all.data.label,\n                    id: all.data.id,\n                    position: all.position,\n                    style: {},\n                };\n                nodeJson.style = this.getStyle(node.id());\n                graph.nodes.push(nodeJson);\n            }\n        });\n        this.cy.edges().forEach((edge) => {\n            if (this.shouldEdgeBeSaved(edge.id())) {\n                const edgeJson = edge.json().data;\n                edgeJson.source = this.getRealSourceId(edge.source().id());\n                edgeJson.style = this.getStyle(edge.id());\n                edgeJson.bendData.bendPoint = BendingDistanceWeight.getCoordinate(\n                    edgeJson.bendData.bendWeight, edgeJson.bendData.bendDistance,\n                    edge.source().position(), edge.target().position(),\n                );\n                graph.edges.push(edgeJson);\n            }\n        });\n        graph.actionHistory = this.actionArr.map(({\n            tid, inverse, equivalent, hash,\n        }) => ({\n            tid,\n            inverse: GraphLoadSave.stringifyAction(inverse),\n            equivalent: GraphLoadSave.stringifyAction(equivalent),\n            hash,\n        }));\n        return graph;\n    }\n\n    getName() {\n        return `${this.projectName}`;\n    }\n\n    async saveToDisk() {\n        const str = graphmlBuilder(this.jsonifyGraph());\n        const bytes = new TextEncoder().encode(str);\n        const blob = new Blob([bytes], { type: 'application/json;charset=utf-8' });\n        if (navigator.userAgent.indexOf('Edg') !== -1 || navigator.userAgent.indexOf('Chrome') !== -1) {\n            const options = {\n                types: [\n                    {\n                        description: 'GraphMl Files',\n                        accept: {\n                            'text/graphml': ['.graphml'],\n                        },\n                    },\n                ],\n            };\n            const handle = await window.showSaveFilePicker(options);\n            const stream = await handle.createWritable();\n            await stream.write(blob);\n            await stream.close();\n        } else {\n            // eslint-disable-next-line no-alert\n            const fileName = prompt('Filename:');\n            saveAs(blob, `${fileName || `${this.getName()}-concore`}.graphml`);\n        }\n        toast.success('File saved Successfully');\n    }\n\n    async saveWithoutFileHandle() {\n        const { userAgent } = navigator;\n        if (userAgent.match(/firefox|fxios/i)) {\n            toast.info('Switch to Edge/Chrome!');\n            return;\n        }\n        const str = graphmlBuilder(this.jsonifyGraph());\n        const bytes = new TextEncoder().encode(str);\n        const blob = new Blob([bytes], { type: 'application/json;charset=utf-8' });\n        const options = {\n            types: [\n                {\n                    description: 'GraphMl Files',\n                    accept: {\n                        'text/graphml': ['.graphml'],\n                    },\n                },\n            ],\n        };\n        const handle = await window.showSaveFilePicker(options);\n        this.dispatcher({\n            type: T.SET_FILE_HANDLE,\n            payload: { curGraphIndex: this.superState.curGraphIndex, fileHandle: handle },\n        });\n        const stream = await handle.createWritable();\n        await stream.write(blob);\n        await stream.close();\n        toast.success('File saved Successfully');\n    }\n\n    saveToFolder() {\n        const str = graphmlBuilder(this.jsonifyGraph());\n        return str;\n    }\n\n    getGraphML() {\n        return graphmlBuilder(this.jsonifyGraph());\n    }\n\n    loadJson(content) {\n        content.nodes.forEach((node) => {\n            this.addNode(node.label, node.style, 'ordin', node.position, {}, node.id, 0);\n        });\n        content.edges.forEach((edge) => {\n            this.addEdge({ ...edge, sourceID: edge.source, targetID: edge.target }, 0);\n        });\n        content.actionHistory.forEach(({\n            inverse, equivalent, tid,\n        }) => {\n            this.addAction(GraphLoadSave.parseAction(inverse), GraphLoadSave.parseAction(equivalent), tid);\n        });\n        this.setProjectName(content.projectName);\n        this.setServerID(this.serverID || content.serverID);\n        this.setProjectAuthor(content.authorName);\n    }\n\n    saveLocalStorage() {\n        if (this.autoSaveIntervalId !== null) clearTimeout(this.autoSaveIntervalId);\n        this.autoSaveIntervalId = setTimeout(() => localStorageManager.save(this.id, this.jsonifyGraph()), 1000);\n    }\n\n    setGraphML(graphML) {\n        graphMLParser(graphML).then((graphObject) => {\n            localStorageManager.save(this.id, graphObject);\n            this.loadGraphFromLocalStorage();\n        });\n    }\n\n    resetLocalStorage() {\n        localStorageManager.clearGraph(this.id);\n    }\n\n    loadGraphFromLocalStorage() {\n        this.reset();\n        const graphContent = localStorageManager.get(this.id);\n        if (!graphContent) return false;\n        this.loadJson(graphContent);\n        return true;\n    }\n\n    serializeGraph() {\n        return window.btoa(JSON.stringify(this.jsonifyGraph()));\n    }\n}\n\nexport default GraphLoadSave;\n","import md5 from 'md5';\nimport GraphComponent from './3-component';\nimport GA from '../graph-actions';\nimport { actionType as T } from '../../reducer';\n\nclass GraphUndoRedo extends GraphComponent {\n    static methodsMapped\n\n    actionArr\n\n    curActionIndex\n\n    constructor(...props) {\n        super(...props);\n\n        this.methodsMapped = {\n            [GA.ADD_NODE]: (...args) => this.addNode(...args, 0),\n            [GA.ADD_EDGE]: (...args) => this.addEdge(...args, 0),\n            [GA.UPDATE_NODE]: (...args) => this.updateNode(...args, 0),\n            [GA.UPDATE_EDGE]: (...args) => this.updateEdge(...args, 0),\n            [GA.UPDATE_DATA]: (...args) => this.updateData(...args, 0),\n            [GA.DEL_NODE]: (...args) => this.deleteNode(...args, 0),\n            [GA.DEL_EDGE]: (...args) => this.deleteElem(...args, 0),\n            [GA.SET_POS]: (...args) => this.setPos(...args, 0),\n            [GA.SET_DIM]: (...args) => this.setDim(...args, 0),\n            [GA.SET_BENDW]: (...args) => this.setBendWightDist(...args),\n        };\n\n        this.actionArr = [];\n        this.curActionIndex = 0;\n    }\n\n    resetAllAction() {\n        this.actionArr = [];\n        this.curActionIndex = 0;\n    }\n\n    informUI() {\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n\n    performAction({ actionName, parameters }) {\n        const action = this.methodsMapped[actionName];\n        action(...parameters);\n    }\n\n    addPositionChange(id, prevPos, curPos) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_POS, parameters: [id, prevPos, curPos] },\n            { actionName: GA.SET_POS, parameters: [id, curPos, prevPos] }, tid,\n        );\n    }\n\n    addDimensionChange(id, prevDim, prevPos, curDim, curPos) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_DIM, parameters: [id, prevDim, prevPos] },\n            { actionName: GA.SET_DIM, parameters: [id, curDim, curPos] }, tid,\n        );\n    }\n\n    addBendChange(id, prevDW, curDW) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_BENDW, parameters: [id, prevDW] },\n            { actionName: GA.SET_BENDW, parameters: [id, curDW] }, tid,\n        );\n    }\n\n    static sequencify(obj) {\n        if (!(obj instanceof Object)) return obj;\n        let r = [];\n        if (obj instanceof Array) {\n            r = obj.map(GraphUndoRedo.sequencify);\n        } else {\n            Object.keys(obj).sort().forEach((k) => {\n                r.push(`:${k}:`);\n                r.push(GraphUndoRedo.sequencify(obj[k]));\n            });\n        }\n        return r;\n    }\n\n    addAction(inverse, equivalent, tid) {\n        if (tid === 0) return;\n        this.actionArr.splice(this.curActionIndex);\n\n        const actionIdentity = GraphUndoRedo.sequencify(equivalent).toString()\n            + GraphUndoRedo.sequencify(equivalent).toString()\n            + tid;\n        this.actionArr.push({\n            tid,\n            inverse,\n            equivalent,\n            hash: md5(\n                `${actionIdentity}|${this.actionArr.length ? this.actionArr.at(-1).hash : ''}`,\n            ),\n        });\n        this.curActionIndex += 1;\n        this.informUI();\n    }\n\n    undoSingleAction() {\n        if (this.curActionIndex !== 0) {\n            this.curActionIndex -= 1;\n            this.performAction(this.actionArr[this.curActionIndex].inverse);\n            this.informUI();\n        }\n    }\n\n    redoSingleAction() {\n        if (this.curActionIndex !== this.actionArr.length) {\n            this.performAction(this.actionArr[this.curActionIndex].equivalent);\n            this.curActionIndex += 1;\n            this.informUI();\n        }\n    }\n\n    undo() {\n        let curTid = null;\n        if (this.curActionIndex !== 0) curTid = this.actionArr[this.curActionIndex - 1].tid;\n        while (this.curActionIndex !== 0 && this.actionArr[this.curActionIndex - 1].tid === curTid) {\n            this.curActionIndex -= 1;\n            this.performAction(this.actionArr[this.curActionIndex].inverse);\n        }\n        this.informUI();\n    }\n\n    redo() {\n        let curTid = null;\n        if (this.curActionIndex !== this.actionArr.length) curTid = this.actionArr[this.curActionIndex].tid;\n        while (this.curActionIndex !== this.actionArr.length && this.actionArr[this.curActionIndex].tid === curTid) {\n            this.performAction(this.actionArr[this.curActionIndex].equivalent);\n            this.curActionIndex += 1;\n        }\n        this.informUI();\n    }\n\n    setCurStatus() {\n        super.setCurStatus();\n        this.informUI();\n    }\n\n    registerEvents() {\n        super.registerEvents();\n        this.cy.on('dragfree', 'node[type = \"ordin\"]', (e) => {\n            e.target.forEach((node) => {\n                this.addPositionChange(node.id(), node.scratch('position'), { ...node.position() });\n            });\n        });\n        this.cy.on('nodeediting.resizeend', (e, type, node) => {\n            this.addDimensionChange(\n                node.id(),\n                { height: node.scratch('height'), width: node.scratch('width') },\n                node.scratch('position'),\n                { height: node.data('style').height, width: node.data('style').width },\n                { ...node.position() },\n            );\n        });\n    }\n}\n\nexport default GraphUndoRedo;\n","const boundaryPoint = {\n    getEq(P1, P2) {\n        const m = (P1.y - P2.y) / (P1.x - P2.x);\n        const c = P1.y - m * P1.x;\n        return [m, c];\n    },\n    getX1X2(Cn, P, w, h) {\n        if (Cn.x === P.x) return [P.x, P.x];\n        const P2 = { x: P.x - Cn.x, y: P.y - Cn.y };\n        const [m, c] = this.getEq({ x: 0, y: 0 }, P2);\n        // (𝑎2𝑚2+𝑏2)𝑥2+2𝑎2𝑚𝑐𝑥+𝑎2(𝑐2–𝑏2)\n        const A = (w ** 2 * m ** 2 + h ** 2);\n        const B = 2 * w ** 2 * m * c;\n        const C = w ** 2 * (c ** 2 - h ** 2);\n        const D = B ** 2 - 4 * A * C;\n        const x1 = (-B + D ** 0.5) / (2 * A) + Cn.x;\n        const x2 = (-B - D ** 0.5) / (2 * A) + Cn.x;\n        return [x1, x2];\n    },\n    getY1Y2(C, P, w, h, x1, x2) {\n        if (x1 === x2) return [C.y + h, C.y - h];\n        const [m, c] = this.getEq(C, P);\n        return [m * x1 + c, m * x2 + c];\n    },\n    dist(A, B) {\n        return ((A.x - B.x) ** 2 + (A.y - B.y) ** 2) ** 0.5;\n    },\n    getClosestEllipse(C, P, w, h) {\n        const [x1, x2] = this.getX1X2(C, P, w, h);\n        const [y1, y2] = this.getY1Y2(C, P, w, h, x1, x2);\n        const [d1, d2] = [this.dist(P, { x: x1, y: y1 }), this.dist(P, { x: x2, y: y2 })];\n        if (d1 < d2) return { x: x1, y: y1 };\n        return { x: x2, y: y2 };\n    },\n    slope(x1, y1, x2, y2) {\n        return (x1 - x2) / (y1 - y2);\n    },\n\n    setSubQ(C, P, w, h) {\n        const [S1, S2] = [[C.x + w, C.y + h], [C.x + w, C.y - h]]\n            .map(([x, y]) => ((C.x - x) * (P.y - y) - (C.y - y) * (P.x - x)) > 0);\n        if (S1 && !S2) return 0;\n        if (!S1 && !S2) return 1;\n        if (!S1 && S2) return 2;\n        if (S1 && S2) return 3;\n        return -1;\n    },\n\n    getClosestRect(C, P, w, h) {\n        const [m, c] = this.getEq(P, C);\n        let D = [\n            [C.x + w, C.y],\n            [C.x, C.y + h],\n            [C.x - w, C.y],\n            [C.x, C.y - h],\n        ];\n        if (Math.abs(m) !== Infinity) {\n            D = [ // To point toward center\n                [C.x + w, m * (C.x + w) + c],\n                [(C.y + h - c) / m, C.y + h],\n                [C.x - w, m * (C.x - w) + c],\n                [(C.y - h - c) / m, C.y - h],\n            ];\n        }\n        const [x, y] = D[this.setSubQ(C, P, w, h)];\n        return { x, y };\n    },\n    get(C, P, w, h, type) {\n        if (type === 'rectangle') return boundaryPoint.getClosestRect(C, P, w, h);\n        return boundaryPoint.getClosestEllipse(C, P, w, h);\n    },\n\n};\n\nexport default boundaryPoint.get;\n","import TailoredGraphBuilder from './tailored-graph-builder';\n\nexport default TailoredGraphBuilder;\n","import CoreGraph from './graph-core';\nimport { actionType as T } from '../reducer';\nimport getBoundaryPoint from './calculations/boundary-point';\nimport GA from './graph-actions';\n\nclass TailoredGraph extends CoreGraph {\n    registerEvents() {\n        super.registerEvents();\n        this.cy.on('drag data moved', 'node[type=\"ordin\"]', (evt) => {\n            evt.target.connectedEdges().connectedNodes('node[type=\"special\"]').forEach((juncNode) => {\n                juncNode.position(TailoredGraph.calJuncNodePos(juncNode));\n            });\n        });\n        this.cy.on('bending', (evt) => {\n            const juncNode = evt.target.source();\n            juncNode.position(TailoredGraph.calJuncNodePos(juncNode));\n        });\n    }\n\n    static calJuncNodePos(juncNode) {\n        const parNode = juncNode.incomers('node')[0];\n        const meanNbrPosition = { x: 0, y: 0 };\n        const setOfPos = new Set();\n        juncNode.outgoers('edge[type=\"ordin\"]')\n            .forEach((edge) => setOfPos.add(JSON.stringify(TailoredGraph.getBendEdgePoint(edge))));\n        setOfPos.forEach((posStr) => {\n            const pos = JSON.parse(posStr);\n            meanNbrPosition.x += pos.x;\n            meanNbrPosition.y += pos.y;\n        });\n        if (setOfPos.size === 0) return juncNode.position();\n        meanNbrPosition.x /= setOfPos.size;\n        meanNbrPosition.y /= setOfPos.size;\n        return getBoundaryPoint(\n            parNode.position(), meanNbrPosition,\n            parNode.data('style').width / 2,\n            parNode.data('style').height / 2,\n            parNode.data('style').shape,\n        );\n    }\n\n    getRealNode(juncNodeId) {\n        return this.getById(juncNodeId).incomers().filter('node')[0];\n    }\n\n    addAutoMove(juncNode) {\n        juncNode.unselectify();\n        return this;\n    }\n\n    addEdgeWithJuncNode(edgeData, tid) {\n        const juncNode = this.getById(edgeData.sourceID);\n        const ed = super.addEdge({\n            ...edgeData,\n            label: juncNode.data('edgeLabel'),\n            style: juncNode.data('edgeStyle'),\n        }, tid);\n        juncNode.position(TailoredGraph.calJuncNodePos(juncNode));\n        return ed;\n    }\n\n    addEdgeWithoutJuncNode(edgeData, tid) {\n        const { sourceID, targetID, style } = edgeData;\n        const [sourceNode, targetNode] = [sourceID, targetID].map(this.getById.bind(this));\n        const sourceNodeStyle = sourceNode.data('style');\n        const juncNodePos = getBoundaryPoint(\n            sourceNode.position(),\n            targetNode.position(),\n            sourceNodeStyle.width / 2,\n            sourceNodeStyle.height / 2,\n            sourceNodeStyle.shape,\n        );\n        const juncNode = super.addNode('', { backgroundColor: style.backgroundColor },\n            'special', juncNodePos, { edgeLabel: edgeData.label, edgeStyle: style }, undefined, tid);\n        juncNode.ungrabify();\n        super.addEdge({\n            sourceID,\n            targetID: juncNode.id(),\n            style: {\n                ...style,\n                'target-arrow-shape': 'none',\n            },\n            type: 'special',\n        }, tid);\n        this.addAutoMove(juncNode, sourceNode);\n        return this.addEdgeWithJuncNode({ ...edgeData, sourceID: juncNode.id() }, tid);\n    }\n\n    addEdgeAction(id, edgeData, tid) {\n        this.addAction(\n            { actionName: GA.DEL_EDGE, parameters: [id] },\n            {\n                actionName: GA.ADD_EDGE,\n                parameters: [{ ...edgeData, sourceID: this.getRealSourceId(edgeData.sourceID), id }],\n            },\n            tid,\n        );\n    }\n\n    addEdge(edgeData, tidd = this.getTid()) {\n        const tid = 0;\n        const { sourceID, targetID, label } = edgeData;\n        const [sourceNode, targetNode] = [sourceID, targetID].map(this.getById.bind(this));\n        const juncNodes = sourceNode.outgoers('node').filter((node) => label && node.data('edgeLabel') === label);\n\n        let edge;\n        if (targetNode.data('type') !== 'ordin') return edge; // Don't Add Node\n        if (sourceNode.data('type') === 'special') edge = this.addEdgeWithJuncNode(edgeData, tid);\n        else if (juncNodes.length) edge = this.addEdgeWithJuncNode({ ...edgeData, sourceID: juncNodes[0].id() }, tid);\n        else if (label && label.length) edge = this.addEdgeWithoutJuncNode(edgeData, tid);\n        else {\n            this.dispatcher({\n                type: T.Model_Open_Create_Edge,\n                cb: (edgeLabel, edgeStyle) => {\n                    const message = this.validiateEdge(edgeLabel, edgeStyle, sourceID, targetID, null, 'New');\n                    if (message.ok) edge = this.addEdge({ ...edgeData, label: edgeLabel, style: edgeStyle }, tid);\n                    if (edge) this.addEdgeAction(edge.id(), { ...edgeData, label: edgeLabel, style: edgeStyle }, tidd);\n                    return message;\n                },\n            });\n        }\n        if (edge) this.addEdgeAction(edge.id(), edgeData, tidd);\n        return edge;\n    }\n\n    updateEdge(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        this.addAction(\n            {\n                actionName: GA.UPDATE_EDGE,\n                parameters: [id, this.getStyle(id), this.getById(id).data('label'), shouldUpdateLabel],\n            },\n            { actionName: GA.UPDATE_EDGE, parameters: [id, style, label, shouldUpdateLabel] },\n            tid,\n        );\n        const junctionNode = this.getById(id).source();\n        if (shouldUpdateLabel) this.updateData(junctionNode.data('id'), 'edgeLabel', label, 0);\n        this.updateData(junctionNode.data('id'), 'edgeStyle', style, 0);\n        this.updateNode(junctionNode.data('id'), { backgroundColor: style.backgroundColor }, '', false, 0);\n\n        junctionNode\n            .outgoers('edge')\n            .forEach((edge) => super.updateEdge(edge.data('id'), style, label, shouldUpdateLabel, 0));\n    }\n\n    deleteElem(id, tid = this.getTid()) {\n        const el = this.getById(id);\n        if (el.isNode()) {\n            if (el.removed()) return;\n            el.outgoers('node[type=\"special\"]')\n                .connectedEdges('edge[type=\"ordin\"]')\n                .forEach((edge) => this.deleteElem(edge.id(), tid));\n            el.connectedEdges('edge[type=\"ordin\"]')\n                .forEach((edge) => this.deleteElem(edge.id(), tid));\n\n            const node = this.getById(id);\n            this.addAction(\n                {\n                    actionName: GA.ADD_NODE,\n                    parameters: [\n                        node.data('label'), this.getStyle(node.id()), node.data('type'),\n                        node.position(), node.json().data, id,\n                    ],\n                },\n                { actionName: GA.DEL_NODE, parameters: [id] }, tid,\n            );\n            super.deleteNode(id, 0);\n        } else {\n            if (!this.getById(id).length || el.removed()) return;\n            const jsonEd = this.getById(id).json().data;\n            this.addAction(\n                {\n                    actionName: GA.ADD_EDGE,\n                    parameters: [{\n                        ...jsonEd, sourceID: this.getRealSourceId(jsonEd.source), targetID: jsonEd.target,\n                    }],\n                },\n                { actionName: GA.DEL_EDGE, parameters: [id] }, tid,\n            );\n            const junctionNode = el.source();\n            super.deleteEdge(id, 0);\n            if (junctionNode) if (junctionNode.outgoers().length === 0) this.deleteNode(junctionNode.id(), 0);\n        }\n    }\n\n    getRealSourceId(nodeID) {\n        if (this.getById(nodeID).data('type') === 'ordin') return nodeID;\n        if (this.getById(nodeID).incomers('node').length === 0) return nodeID;\n        return this.getById(nodeID).incomers('node')[0].id();\n    }\n\n    getEdgesBetweenNodes(n1, n2) {\n        const [c1, c2] = [n1, n2]\n            .map((n) => this.getById(this.getRealSourceId(n)))\n            .map((r) => r.outgoers('node[type=\"special\"]').union(r));\n        return c1.edgesWith(c2);\n    }\n\n    getNodesEdges() {\n        const nodes = this.cy.$('node[type=\"ordin\"]').map((node) => ({\n            label: node.data('label'),\n            style: node.data('style'),\n            id: node.data('id'),\n        }));\n        const edges = {};\n        this.cy.$('edge[type=\"ordin\"]').forEach((edge) => {\n            const label = edge.data('label');\n            const sourceLabel = this.getById(this.getRealSourceId(edge.source().id())).data('label');\n            const targetLabel = edge.target().data('label');\n            const style = edge.data('style');\n            const id = edge.data('id');\n            if (!edges[label]) {\n                edges[label] = {\n                    targetLabel: [targetLabel], sourceLabel, id, label, style,\n                };\n            } else edges[label].targetLabel.push(targetLabel);\n        });\n        return [nodes, Object.values(edges)];\n    }\n}\n\nexport default TailoredGraph;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { edgeValidator, nodeValidator } from './config/defaultValidators';\nimport MyGraph from './graph-builder';\nimport { actionType as T } from './reducer';\n\nfunction Graph({\n    el, superState, dispatcher, graphID, serverID, graphML, projectName, graphContainerRef, active, authorName,\n}) {\n    const [instance, setInstance] = useState(null);\n    const ref = useRef();\n    const setContainerDim = (element) => {\n        if (element) {\n            const elToAss = element;\n            elToAss.style.width = `${graphContainerRef.current.offsetWidth - 2}px`;\n            elToAss.style.height = `${graphContainerRef.current.offsetHeight - 2}px`;\n        }\n    };\n\n    const initialiseNewGraph = () => {\n        const myGraph = new MyGraph(\n            graphID, ref.current, dispatcher, superState, projectName, nodeValidator, edgeValidator, authorName,\n        );\n        if (graphID) myGraph.loadGraphFromLocalStorage();\n        if (serverID) {\n            myGraph.set({ serverID });\n            myGraph.forcePullFromServer();\n        }\n        if (graphML) myGraph.setGraphML(graphML);\n        myGraph.setCurStatus();\n        return myGraph;\n    };\n    // Remote server implementation - Not being used.\n    // useEffect(() => {\n    //     if (active && loaded && serverID) {\n    //         window.history.pushState(null, null, path.join(process.env.PUBLIC_URL, 's', serverID));\n    //     } else if (active && loaded && graphID) {\n    //         window.history.pushState(null, null, path.join(process.env.PUBLIC_URL, 'l', graphID));\n    //     }\n    // }, [active, serverID, loaded, graphID]);\n    useEffect(() => instance && instance.set({ superState }), [instance, superState]);\n    useEffect(() => active && instance && instance.setCurStatus(), [active && instance]);\n    useEffect(() => {\n        if (active && instance) dispatcher({ type: T.SET_CUR_INSTANCE, payload: instance });\n    }, [active && instance]);\n\n    useEffect(() => {\n        if (ref.current) {\n            setContainerDim(ref.current);\n            window.addEventListener('resize', () => setContainerDim(ref.current));\n            setInstance(initialiseNewGraph());\n        }\n    }, [ref]);\n\n    const { id } = el;\n\n    return (\n        <div\n            style={{ zIndex: 1, display: active ? 'block' : 'none' }}\n            key={id}\n            className=\"graph-element\"\n            ref={ref}\n        />\n    );\n}\nexport default Graph;\n","const nodeValidator = `(node, nodes, edges) => {\n    var regex = /^[A-za-z0-9]+[:[A-Za-z0-9.]+]|[^$]$/;\n    let message = { ok: true, err: null };\n    if (!regex.test(node.label)) {\n        message = {\n            ok: false,\n            err: 'Node with incorrect label.',\n        }\n        return message;\n    }\n    nodes.forEach((n) => {\n        if (n.id !== node.id && n.label.split(':')[0] === node.label.split(':')[0]) {\n            message = {\n                ok: false,\n                err: 'Node with same label exists.',\n            };\n        }\n    });\n    return message;\n    }`;\nconst edgeValidator = `(edge, nodes, edges) => {\nlet message = { ok: true, err: null };\nedges.forEach((e) => {\n    if (e.label === edge.label && e.sourceLabel !== edge.sourceLabel) {\n        message = {\n            ok: false,\n            err: 'Edge with same label exists.',\n        };\n    }\n});\nreturn message;\n}`;\n\n/* eslint-disable max-len */\nconst nodeValidatorFormat = `Takes **\\`node\\`** details under validation, existing **\\`nodes\\`**, existing **\\`edges\\`** and **\\`type\\`**\n\n**Node:** { label: String, style: Object, id: String | undefined },\n**Nodes:** [{ label: String, style: Object, id: String }],\n**Edges:** [{ label: String, sourceLabel: String, targetLabel: String, style: Object, id: String }],\n**Type:** \\`New\\` | \\`Update\\``;\n\nconst edgeValidatorFormat = `Takes **\\`edge\\`** details under validation, existing **\\`nodes\\`** and existing **\\`edges\\`** and **\\`type\\`**\n\n**Edge:** { label: String, sourceLabel: String, targetLabel: String, style: Object, id: String | undefined },\n**Nodes:** [{ label: String, style: Object, id: String }],\n**Edges:** [{ label: String, sourceLabel: String, targetLabel: String, style: Object, id: String }],\n**Type:** \\`New\\` | \\`Update\\``;\n/* eslint-enable max-len */\n\nexport {\n    nodeValidator, edgeValidator, nodeValidatorFormat, edgeValidatorFormat,\n};\n","import React, { useEffect } from 'react';\nimport ZoomComp from './component/ZoomSetter';\n\nimport { actionType as T } from './reducer';\nimport './graphWorkspace.css';\nimport localStorageManager from './graph-builder/local-storage-manager';\nimport TabBar from './component/TabBar';\nimport Graph from './GraphArea';\n\nconst GraphComp = (props) => {\n    const graphContainerRef = React.useRef();\n    const { dispatcher, superState } = props;\n    // const [loadedFromStorage, setLoadedFromStorage] = React.useState(false);\n\n    useEffect(() => {\n        const allSavedGs = localStorageManager.getAllGraphs().map((graphID) => ({\n            graphID,\n        }));\n        dispatcher({\n            type: T.ADD_GRAPH_BULK,\n            payload: allSavedGs,\n        });\n        // setLoadedFromStorage(true);\n    }, []);\n\n    // Remote server implementation - Not being used.\n    // useEffect(() => {\n    //     if (!loadedFromStorage) return;\n    //     const graphFromParams = Object.fromEntries(new URLSearchParams(window.location.search).entries()).g;\n    //     if (graphFromParams) {\n    //         const graphContent = JSON.parse(window.atob(graphFromParams));\n    //         const gid = new Date().getTime().toString();\n    //         localStorageManager.addToFront(gid);\n    //         localStorageManager.save(gid, graphContent);\n    //         window.history.replaceState({}, document.title, window.location.pathname);\n    //         dispatcher({ type: T.ADD_GRAPH, payload: { graphID: gid } });\n    //     }\n    //     const urlParms = window.location.pathname.split('/');\n    //     const serverIDIndex = urlParms.indexOf('s');\n    //     const localIDIndex = urlParms.indexOf('l');\n    //     if (serverIDIndex !== -1 && serverIDIndex + 1 < urlParms.length) {\n    //         const serverID = urlParms[serverIDIndex + 1];\n    //         dispatcher({ type: T.ADD_GRAPH, payload: { serverID } });\n    //     }\n    //     if (localIDIndex !== -1 && localIDIndex + 1 < urlParms.length) {\n    //         const graphID = urlParms[localIDIndex + 1];\n    //         dispatcher({ type: T.ADD_GRAPH, payload: { graphID } });\n    //     }\n    // }, [loadedFromStorage]);\n\n    return (\n        <div\n            style={{\n                flex: 1,\n                flexDirection: 'column',\n                display: 'flex',\n                width: '100%',\n            }}\n        >\n            <TabBar superState={superState} dispatcher={dispatcher} />\n            <div style={{ flex: 1, background: 'white' }} className=\"graph-container\" ref={graphContainerRef}>\n                {superState.graphs.map((el, i) => (\n                    <Graph\n                        el={el}\n                        i={i}\n                        superState={superState}\n                        graphContainerRef={graphContainerRef}\n                        dispatcher={dispatcher}\n                        key={el.graphID}\n                        active={i === superState.curGraphIndex}\n                        graphID={el.graphID}\n                        serverID={el.serverID}\n                        graphML={el.graphML}\n                        projectName={el.projectName}\n                        fileHandle={el.fileHandle}\n                        fileName={el.fileName}\n                        authorName={el.authorName}\n                    />\n                ))}\n                <ZoomComp dispatcher={dispatcher} superState={superState} />\n            </div>\n        </div>\n    );\n};\n\nexport default GraphComp;\n","import React, { useState, useEffect } from 'react';\nimport ReactModal from 'react-modal';\nimport './parent-modal.css';\n\nReactModal.setAppElement('#root');\n\nconst Modal = ({\n    closeModal, ModelOpen, title, children,\n}) => {\n    const [curClass, setCurClass] = useState('');\n    const [isOpen, setIsOpen] = useState(ModelOpen);\n    const [stid, setStid] = useState(null);\n    useEffect(() => {\n        if (ModelOpen === true) {\n            setIsOpen(true);\n            setCurClass('closing');\n            clearTimeout(stid);\n            setStid(setTimeout(() => {\n                setIsOpen(true);\n                setCurClass('');\n            }, 20));\n        } else {\n            setCurClass('closing');\n            clearTimeout(stid);\n            setStid(setTimeout(() => {\n                setIsOpen(false);\n            }, 400));\n        }\n    }, [ModelOpen]);\n\n    if (!isOpen) return '';\n    return (\n        <ReactModal\n            isOpen={isOpen}\n            contentLabel=\"onRequestClose Example\"\n            // onRequestClose={closeModal} // prevent modal from closing when clicked outside\n            className=\"Modal\"\n            overlayClassName={`Overlay ${curClass}`}\n        >\n            <div className={`modal-content ${curClass}`}>\n                <div className=\"modal-header\">\n                    <div className=\"modal-title h4\">{title}</div>\n                    <button type=\"button\" className=\"close\" onClick={closeModal}>\n                        {closeModal ? <span aria-hidden=\"true\">×</span> : ''}\n                        <span className=\"sr-only\">Close</span>\n                    </button>\n                </div>\n                <div className=\"modal-body\">\n                    {children}\n                </div>\n            </div>\n        </ReactModal>\n    );\n};\nexport default Modal;\n","import React, { useState, useEffect } from 'react';\nimport './graph-comp-details.css';\nimport ParentModal from './ParentModal';\n\nconst ModalComp = ({ closeModal, superState }) => {\n    const [data, setData] = useState({});\n    const [errorMessage, setErrorMessage] = useState('');\n    const { modalPayload, ModelOpen } = superState;\n    const {\n        cb, title, submitText, Children, defaultStyle, defaultLabel, labelAllowed,\n    } = modalPayload;\n\n    useEffect(() => {\n        setErrorMessage('');\n    }, [ModelOpen]);\n\n    useEffect(() => {\n        setData({ label: defaultLabel || '', style: defaultStyle });\n        setErrorMessage('');\n    }, [defaultLabel, defaultStyle]);\n\n    const submit = (e) => {\n        e.preventDefault();\n        const message = cb(data.label, data.style);\n        if (message.ok) {\n            setErrorMessage('');\n            setData({ label: defaultLabel || '', style: defaultStyle });\n            closeModal();\n        } else setErrorMessage(message.err);\n    };\n\n    return (\n        <ParentModal closeModal={closeModal} ModelOpen={ModelOpen} title={title}>\n            <form onSubmit={submit}>\n                <div className=\"modal-content-body\">\n                    <Children data={data} setData={setData} labelAllowed={labelAllowed} />\n                    {errorMessage ? <div className=\"err\">{errorMessage}</div> : <></>}\n                </div>\n                <div className=\"modal-footer\">\n                    <button type=\"submit\" className=\"btn btn-primary\">{submitText}</button>\n                </div>\n            </form>\n        </ParentModal>\n    );\n};\nexport default ModalComp;\n","/* eslint-disable no-alert */\nimport {\n    FaSave, FaUndo, FaRedo, FaTrash, FaFileImport, FaPlus, FaDownload, FaEdit, FaRegTimesCircle, FaHistory,\n    FaHammer, FaBug, FaBomb, FaToggleOn, FaThermometerEmpty,\n} from 'react-icons/fa';\n\nimport {\n    // FiChevronDown, FiChevronsDown, FiChevronsUp, FiChevronUp,\n    FiPlay, FiStopCircle, FiToggleLeft, FiTriangle,\n} from 'react-icons/fi';\n\nimport {\n    createNode, editElement, deleteElem, downloadImg, saveAction, saveGraphMLFile,\n    createFile, readFile, clearAll, undo, redo, viewHistory,\n    toggleServer, contribute,\n    // openSettingModal,\n} from './toolbarFunctions';\n\nconst toolbarList = (state, dispatcher) => [\n    {\n        type: 'action',\n        text: 'Node',\n        icon: FaPlus,\n        action: createNode,\n        active: state.curGraphInstance,\n        visibility: true,\n        hotkey: 'Ctrl+G',\n    },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'Create',\n        icon: FaFileImport,\n        action: createFile,\n        active: true,\n        visibility: true,\n    },\n    {\n        type: 'file-upload',\n        text: 'Open',\n        icon: FaFileImport,\n        action: readFile,\n        active: true,\n        visibility: true,\n        hotkey: 'Ctrl+O',\n    },\n    {\n        type: 'action',\n        text: 'Save',\n        icon: FaSave,\n        action: saveGraphMLFile,\n        active: state.curGraphInstance,\n        visibility: true,\n    },\n    {\n        type: 'action',\n        text: 'Save As',\n        icon: FaSave,\n        action: (s, d) => saveAction(s, d),\n        active: state.curGraphInstance,\n        visibility: true,\n    },\n    {\n        type: 'action',\n        text: 'Empty',\n        icon: FaThermometerEmpty,\n        action: clearAll,\n        active: state.curGraphInstance,\n        visibility: true,\n        hotkey: 'Ctrl+Backspace',\n    },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'Undo',\n        icon: FaUndo,\n        action: undo,\n        active: state.undoEnabled && state.curGraphInstance,\n        visibility: true,\n        hotkey: 'Ctrl+Z',\n    },\n    {\n        type: 'action',\n        text: 'Redo',\n        icon: FaRedo,\n        action: redo,\n        active: state.redoEnabled && state.curGraphInstance,\n        visibility: true,\n        hotkey: 'Ctrl+Shift+Z,Ctrl+Y',\n    },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'Edit',\n        icon: FaEdit,\n        action: editElement,\n        active: state.curGraphInstance && state.eleSelected,\n        visibility: true,\n        hotkey: 'Ctrl+E',\n    },\n    {\n        type: 'action',\n        text: 'Delete',\n        icon: FaTrash,\n        action: () => deleteElem(state, dispatcher),\n        active: state.eleSelected,\n        visibility: true,\n        hotkey: 'Delete,Backspace,Del,Clear',\n    },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'History',\n        icon: FaHistory,\n        action: viewHistory,\n        active: state.curGraphInstance,\n        visibility: true,\n    },\n    { type: 'vsep' },\n    // server buttons\n    {\n        type: 'action',\n        text: 'Server',\n        icon: state.isWorkflowOnServer ? FaToggleOn : FiToggleLeft,\n        action: () => toggleServer(state, dispatcher),\n        active: true,\n        visibility: true,\n    },\n    {\n        type: 'action',\n        text: 'Build',\n        icon: FaHammer,\n        action: () => state.curGraphInstance && state.curGraphInstance.build(),\n        active: state.isWorkflowOnServer,\n        visibility: state.isWorkflowOnServer,\n    },\n    {\n        type: 'action',\n        text: 'Debug',\n        icon: FaBug,\n        action: () => state.curGraphInstance && state.curGraphInstance.debug(),\n        active: state.isWorkflowOnServer,\n        visibility: state.isWorkflowOnServer,\n    },\n    {\n        type: 'action',\n        text: 'Run',\n        icon: FiPlay,\n        action: () => state.curGraphInstance && state.curGraphInstance.run(),\n        active: state.isWorkflowOnServer,\n        visibility: state.isWorkflowOnServer,\n    },\n    {\n        type: 'action',\n        text: 'Clear',\n        icon: FaRegTimesCircle,\n        action: () => state.curGraphInstance && state.curGraphInstance.clear(),\n        active: state.isWorkflowOnServer,\n        visibility: state.isWorkflowOnServer,\n    },\n    {\n        type: 'action',\n        text: 'Stop',\n        icon: FiStopCircle,\n        action: () => state.curGraphInstance && state.curGraphInstance.stop(),\n        active: state.isWorkflowOnServer,\n        visibility: state.isWorkflowOnServer,\n    },\n    {\n        type: 'action',\n        text: 'Destroy',\n        icon: FaBomb,\n        action: () => state.curGraphInstance && state.curGraphInstance.destroy(),\n        active: state.isWorkflowOnServer,\n        visibility: state.isWorkflowOnServer,\n    },\n\n    // Not being implemented in version 1\n    // {\n    //     type: 'action',\n    //     text: 'Push',\n    //     icon: FiChevronUp,\n    //     action: () => state.curGraphInstance && state.curGraphInstance.pushToServer(),\n    //     active: state.curGraphInstance && state.isWorkflowOnServer,\n    // },\n    // {\n    //     type: 'action',\n    //     text: 'Pull',\n    //     icon: FiChevronDown,\n    //     action: () => state.curGraphInstance && state.curGraphInstance.pullFromServer(),\n    //     active: state.curGraphInstance && state.isWorkflowOnServer,\n    // },\n    // {\n    //     type: 'action',\n    //     text: 'Force Push',\n    //     icon: FiChevronsUp,\n    //     action: () => state.curGraphInstance && state.curGraphInstance.forcePushToServer(),\n    //     active: state.curGraphInstance && state.isWorkflowOnServer,\n    // },\n    // {\n    //     type: 'action',\n    //     text: 'Force Pull',\n    //     icon: FiChevronsDown,\n    //     action: () => state.curGraphInstance && state.curGraphInstance.forcePullFromServer(),\n    //     active: state.curGraphInstance && state.isWorkflowOnServer,\n    // },\n    // { type: 'vsep' },\n    { type: 'space' },\n    // Not being implemented in version 1\n    // {\n    //     type: 'action',\n    //     text: 'Settings',\n    //     icon: FaRegSun,\n    //     action: openSettingModal,\n    //     active: true,\n    // },\n    {\n        type: 'action',\n        text: 'Contribute',\n        icon: FiTriangle,\n        action: contribute,\n        active: state.curGraphInstance || state.uploadedDirName,\n        visibility: true,\n    },\n    // {\n    //     type: 'action',\n    //     text: 'Share',\n    //     icon: FaShare,\n    //     action: openShareModal,\n    //     active: true,\n    //     visibility: true,\n    // },\n    {\n        type: state.curGraphInstance ? 'menu' : 'action',\n        text: 'Export',\n        icon: FaDownload,\n        action: (s, d) => [\n            { fn: () => downloadImg(s, d, 'JPG'), name: 'JPG' },\n            { fn: () => downloadImg(s, d, 'PNG'), name: 'PNG' },\n        ],\n        visibility: true,\n        active: state.curGraphInstance,\n    },\n    { type: 'vsep' },\n];\n\nexport default toolbarList;\n","import React from 'react';\nimport Switch from 'rc-switch';\nimport { Menu, MenuItem, MenuButton } from '@szhsin/react-menu';\n\nfunction DropDown({\n    Icon, text, action, active, visibility, tabIndex, hotkey,\n}) {\n    return (\n        <Menu menuButton={(\n            <MenuButton>\n                <ActionButton {...{\n                    Icon, text, action, active, visibility, tabIndex, hotkey,\n                }}\n                />\n            </MenuButton>\n        )}\n        >\n            {action().map(({ fn, name }) => <MenuItem onClick={fn} key={name}>{name}</MenuItem>)}\n        </Menu>\n    );\n}\n\nconst FileUploader = ({\n    Icon, text, active, visibility, tabIndex, hotkey, superState,\n}) => (\n    <ActionButton {...{\n        Icon, text, active, visibility, tabIndex, action: () => superState.fileRef.current.click(), hotkey,\n    }}\n    />\n);\n\nconst Switcher = ({\n    text, action, active, tabIndex,\n}) => (\n    <div\n        role=\"button\"\n        tabIndex={tabIndex}\n        className={`tool ${active ? 'active' : ''}`}\n        onClick={action}\n        onKeyDown={(ev) => ev.key === ' ' && action()}\n    >\n        <Switch\n            onChange={action}\n            checked={active}\n            className=\"react-switch\"\n        />\n        <div>\n            {text}\n        </div>\n    </div>\n);\n\nconst ActionButton = ({\n    Icon, text, action, active, visibility, tabIndex, hotkey,\n}) => (\n    <div\n        role=\"button\"\n        id={`action_${tabIndex}`}\n        tabIndex={tabIndex}\n        className={`tool ${active ? 'active' : ''}`}\n        onClick={() => (active && action())}\n        onKeyDown={(ev) => active && ev.key === ' ' && action()}\n        data-tip={hotkey ? hotkey.split(',')[0] : ''}\n        style={{ display: `${visibility ? '' : 'none'}` }}\n    >\n        <div className=\"icon\"><Icon size=\"20\" /></div>\n        <div style={{ fontSize: 14 }}>{text}</div>\n    </div>\n);\n\nconst TextBox = ({ children }) => (\n    <div className=\"tool\" style={{ width: 'auto' }}>\n        <div className=\"middle tool-text-only\" style={{ fontSize: 16, color: '#888', height: '100%' }}>\n            {children}\n        </div>\n    </div>\n);\n\nconst Vsep = () => <div className=\"Vsep sep\" />;\nconst Hsep = () => <div className=\"hsep sep\" />;\nconst Space = () => <div className=\"space\" />;\n\nexport {\n    ActionButton, Vsep, Hsep, Space, TextBox, Switcher, DropDown, FileUploader,\n};\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport hotkeys from 'hotkeys-js';\nimport toolbarList from '../toolbarActions/toolbarList';\nimport '@szhsin/react-menu/dist/index.css';\nimport './header.css';\nimport {\n    ActionButton, Vsep, Hsep, Space, TextBox, Switcher, DropDown, FileUploader,\n} from './HeaderComps';\nimport 'rc-switch/assets/index.css';\n// import ServerActions from './serverActions/ServerActions';\n\nconst setHotKeys = (actions) => {\n    let keys = '';\n    const map = {};\n    actions.forEach((action, i) => {\n        if (action.hotkey) {\n            action.hotkey.split(',').forEach((key) => {\n                [key, key.replace('Ctrl', 'Command')].forEach((k) => {\n                    keys += `${k},`;\n                    map[k] = document.getElementById(`action_${i + 1}`);\n                });\n            });\n        }\n    });\n    keys = keys.substring(0, keys.length - 1);\n    hotkeys(keys, (event, handler) => {\n        event.preventDefault();\n        map[handler.shortcut].click();\n    });\n};\n\nconst Header = ({ superState, dispatcher }) => {\n    const actions = toolbarList(superState, dispatcher);\n    React.useEffect(() => {\n        setHotKeys(actions, superState, dispatcher);\n    }, []);\n\n    return (\n        <header className=\"header\">\n            <section className=\"middle titlebar\">\n                {\n                    superState.curGraphInstance ? `${\n                        superState.curGraphInstance.projectName\n                    } - concore Editor` : 'untitled'\n                }\n            </section>\n            <section className=\"toolbar\">\n                {\n                    actions.map(({\n                        text, active, visibility, action, icon, type, hotkey,\n                    }, i) => {\n                        const props = {\n                            text,\n                            active,\n                            visibility,\n                            tabIndex: i + 1,\n                            key: text,\n                            action: (e) => action(superState, dispatcher, e),\n                            Icon: icon,\n                            hotkey,\n                        };\n                        switch (type) {\n                        case 'vsep': return <Vsep key={`${`v${i}`}`} />;\n                        case 'space': return <Space key={`${`s${i}`}`} />;\n                        case 'switch': return <Switcher {...props} />;\n                        case 'menu': return <DropDown {...props} />;\n                        case 'file-upload': return <FileUploader {...props} superState={superState} />;\n                        case 'action': return <ActionButton {...props} />;\n                        // case 'serverActions': return <ServerActions superState={superState} />;\n                        default: return <></>;\n                        }\n                    })\n                }\n            </section>\n            <Hsep />\n        </header>\n\n    );\n};\n\nexport {\n    Header, ActionButton, Vsep, Hsep, Space, TextBox,\n};\n","import React, { useEffect, useState, useCallback } from 'react';\nimport Modal from './ParentModal';\nimport './project-details.css';\nimport { actionType as T } from '../../reducer';\nimport localStorageManager from '../../graph-builder/local-storage-manager';\n\nconst ProjectDetails = ({ superState, dispatcher }) => {\n    const curGraph = superState.graphs[superState.curGraphIndex];\n    const [projectName, setProjectName] = useState('Untitled');\n    const [authorName, setAuthorName] = useState('Default');\n    // const [serverID, setServerID] = useState('');\n    const inputRef = useCallback((node) => node && node.focus(), []);\n    const { newGraphModal } = superState;\n    const editDetailsModal = superState.editDetailsModal || (curGraph && !curGraph.projectName);\n\n    useEffect(() => {\n        if (superState.editDetailsModal && curGraph) {\n            setProjectName(curGraph.projectName);\n            setAuthorName(curGraph.authorName);\n        } else {\n            setProjectName('');\n        }\n    }, [curGraph?.authorName, superState.editDetailsModal, curGraph]);\n\n    useEffect(() => {\n        if (curGraph?.authorName) {\n            setAuthorName(curGraph.authorName);\n        } else {\n            const authorNameE = localStorageManager.getAuthorName();\n            setAuthorName(authorNameE);\n        }\n    }, []);\n\n    const submit = (e) => {\n        e.preventDefault();\n        if (newGraphModal) dispatcher({ type: T.ADD_GRAPH, payload: { projectName, authorName } });\n        else if (editDetailsModal) {\n            superState.curGraphInstance.setProjectName(projectName);\n            superState.curGraphInstance.setProjectAuthor(authorName);\n            dispatcher({ type: T.SET_EDIT_DETAILS_MODAL, payload: false });\n        }\n        localStorageManager.saveAllgs();\n        localStorageManager.setAuthorName(authorName);\n    };\n\n    const openExisting = () => {\n        superState.fileRef.current.click();\n    };\n\n    const closeModal = () => {\n        if (superState.newGraphModal) dispatcher({ type: T.SET_NEW_GRAPH_MODAL, payload: false });\n        else if (superState.editDetailsModal) dispatcher({ type: T.SET_EDIT_DETAILS_MODAL, payload: false });\n    };\n    // const loadFromServer = () => {\n    //     dispatcher({ type: T.ADD_GRAPH, payload: { serverID } });\n    // };\n    const NewWorkflow = () => (\n        <>\n            {/* <div className=\"divider\" />\n            <input\n                placeholder=\"Enter the Server ID of Workflow\"\n                value={serverID}\n                onChange={(e) => setServerID(e.target.value)}\n                className=\"serverIDText\"\n            />\n            <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                onClick={loadFromServer}\n            >\n                Load From Server\n\n            </button> */}\n            <div className=\"divider\" />\n            <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                onClick={openExisting}\n            >\n                Open Existing From GraphML File\n\n            </button>\n        </>\n    );\n\n    return (\n        <Modal\n            ModelOpen={newGraphModal || editDetailsModal}\n            closeModal={superState.editDetailsModal || superState.newGraphModal ? closeModal : null}\n            title=\"Project Details\"\n        >\n            <form className=\"proj-details\" onSubmit={submit}>\n                <span>Workflow Name</span>\n                <input\n                    ref={inputRef}\n                    placeholder=\"Title of workflow\"\n                    required\n                    value={projectName}\n                    onChange={(e) => setProjectName(e.target.value)}\n                />\n                <span>Author</span>\n                <input\n                    placeholder=\"Author of workflow\"\n                    value={authorName}\n                    onChange={(e) => setAuthorName(e.target.value)}\n                    required\n                />\n                <div className=\"expand\">\n                    <button type=\"submit\" className=\"btn btn-primary\">Save</button>\n                </div>\n                <div className=\"expand\">\n                    {newGraphModal && <NewWorkflow />}\n                </div>\n            </form>\n        </Modal>\n    );\n};\n\nexport default ProjectDetails;\n","import React, { useEffect, useState } from 'react';\nimport Modal from './ParentModal';\nimport './shareModal.css';\nimport { actionType as T } from '../../reducer';\n\nconst ShareModal = ({ superState, dispatcher }) => {\n    const [serializedGraph, setSerializedGraph] = useState('');\n    const [copyText, setCopyText] = useState('Copy');\n    const cond = superState.shareModal && superState.curGraphInstance;\n    useEffect(() => {\n        if (cond) {\n            setSerializedGraph(superState.curGraphInstance.serializeGraph());\n            setCopyText('Copy');\n        }\n    }, [cond]);\n\n    const closeModal = () => {\n        dispatcher({ type: T.SET_SHARE_MODAL, payload: false });\n    };\n    const link = `${window.location.protocol}//${window.location.host}${window.location.pathname}?g=${serializedGraph}`;\n    const copy = () => {\n        navigator.clipboard.writeText(link).then(() => {\n            setCopyText('Copied!');\n            document.getElementsByClassName('preDiv')[0].focus();\n            document.getElementsByClassName('preDiv')[0].select();\n        });\n    };\n\n    return (\n        <Modal\n            ModelOpen={superState.shareModal}\n            title=\"Shareable Link\"\n            closeModal={closeModal}\n        >\n            <div className=\"share-modal\">\n                <input readOnly className=\"preDiv\" value={link} />\n                <button onClick={copy} type=\"button\" className=\"copyBtn\">{copyText}</button>\n            </div>\n\n        </Modal>\n    );\n};\n\nexport default ShareModal;\n","import React from 'react';\nimport './codeEdit.css';\n\nconst CodeEdit = ({\n    pre, post, value, onChange, height, docString,\n}) => {\n    const inputRef = React.createRef();\n    const parseMD = (s) => s.split('**').map((e, i) => {\n        if (i % 2) return <span key={e}><b>{e}</b></span>;\n        return <span key={e}>{e}</span>;\n    });\n    return (\n        <div\n            className=\"textField\"\n            onClick={() => inputRef.current.focus()}\n            onKeyDown={() => inputRef.current.focus()}\n            role=\"textbox\"\n            tabIndex={0}\n        >\n            {docString\n                ? (\n                    <div className=\"docStr\">\n                        {parseMD(docString)}\n                    </div>\n                ) : <div />}\n            <br />\n            {pre\n                ? (\n                    <textarea\n                        className=\"preTextField\"\n                        value={pre}\n                        readOnly\n                        spellCheck=\"false\"\n                    />\n                ) : <div />}\n            <textarea\n                className=\"mainTextField\"\n                spellCheck=\"false\"\n                {...{ value, onChange }}\n                data-gramm_editor=\"false\"\n                style={{ height, width: '90vw' }}\n                ref={inputRef}\n            />\n            {post\n                ? (\n                    <textarea\n                        className=\"postTextField\"\n                        readOnly\n                        value={post}\n                        spellCheck=\"false\"\n                    />\n                ) : <div />}\n        </div>\n    );\n};\n\nexport default CodeEdit;\n","import React, { useState, useEffect } from 'react';\nimport Modal from './ParentModal';\nimport './settings.css';\nimport { actionType as T } from '../../reducer';\nimport CodeEdit from '../CodeEdit';\nimport { nodeValidatorFormat, edgeValidatorFormat } from '../../config/defaultValidators';\n\nconst SettingsModal = ({ superState, dispatcher }) => {\n    const [nodeValidator, setNodeValidator] = useState('');\n    const [edgeValidator, setEdgeValidator] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n    useEffect(() => {\n        if (superState.curGraphInstance) {\n            setNodeValidator(superState.curGraphInstance.getNodeValidator());\n            setEdgeValidator(superState.curGraphInstance.getEdgeValidator());\n        }\n    }, [superState.curGraphInstance]);\n\n    const close = () => dispatcher({ type: T.SET_SETTING_MODAL, payload: false });\n    const submit = () => {\n        try {\n            superState.curGraphInstance.setEdgeNodeValidator({\n                nodeValidator: `(node, nodes, edges, type)=>{${nodeValidator}}`,\n                edgeValidator: `(edge, nodes, edges, type)=>{${edgeValidator}}`,\n            });\n            dispatcher({ type: T.SET_SETTING_MODAL, payload: false });\n            setErrorMessage('');\n        } catch (e) {\n            setErrorMessage(e.message);\n        }\n    };\n\n    return (\n        <Modal\n            ModelOpen={superState.settingsModal}\n            closeModal={close}\n            title=\"Settings\"\n        >\n            <div className=\"setting-container\">\n                <div>\n                    <h3>Node Validator</h3>\n                    <CodeEdit\n                        pre=\"function validateNode(node, nodes, edges, type) {\"\n                        post=\"}\"\n                        value={nodeValidator}\n                        onChange={(e) => setNodeValidator(e.target.value)}\n                        height={200}\n                        docString={nodeValidatorFormat}\n                    />\n                </div>\n                <div>\n                    <h3>Edge  Validator</h3>\n                    <CodeEdit\n                        pre=\"function validateEdge(edge, nodes, edges, type) {\"\n                        post=\"}\"\n                        value={edgeValidator}\n                        onChange={(e) => setEdgeValidator(e.target.value)}\n                        height={200}\n                        docString={edgeValidatorFormat}\n                    />\n                </div>\n                <div className=\"error\">{errorMessage}</div>\n\n                <div className=\"footer\">\n                    <button type=\"submit\" className=\"btn btn-primary\" onClick={submit}>Save</button>\n                </div>\n            </div>\n        </Modal>\n    );\n};\n\nexport default SettingsModal;\n","import React, { useEffect } from 'react';\nimport { FaFileImport } from 'react-icons/fa';\nimport './file-drag-drop.css';\nimport { actionType as T } from '../reducer';\nimport { readFile } from '../toolbarActions/toolbarFunctions';\n\nconst app = ({ superState, dispatcher }) => {\n    const fileRef = React.useRef();\n\n    useEffect(() => {\n        dispatcher({ type: T.SET_FILE_REF, payload: fileRef });\n        const p = document.getElementsByTagName('body')[0];\n        const c = document.getElementsByClassName('drag-drop-area')[0];\n        let cc = 0;\n        p.addEventListener('dragenter', (e) => {\n            e.preventDefault();\n            cc += 1;\n            if (cc === 1) c.classList.remove('hidden');\n        });\n        p.addEventListener('dragleave', (e) => {\n            e.preventDefault();\n            cc -= 1;\n            if (cc === 0) c.classList.add('hidden');\n        });\n\n        p.addEventListener('dragover', (e) => {\n            e.preventDefault();\n        });\n        ['dragend', 'dragexit', 'drop'].forEach((dragEvent) => {\n            p.addEventListener(dragEvent, (e) => {\n                e.preventDefault();\n                cc = 0;\n                c.classList.add('hidden');\n            });\n        });\n\n        p.addEventListener('drop', (e) => {\n            e.preventDefault();\n            fileRef.current.value = null;\n            if (e.dataTransfer.files.length === 1\n                && e.dataTransfer.files[0].name.split('.').slice(-1)[0] === 'graphml') {\n                readFile(superState, dispatcher, e.dataTransfer.files[0]);\n            }\n        });\n    }, []);\n    return (\n        <div className=\"drag-drop-area hidden\">\n            <div className=\"inner\">\n                <FaFileImport size={100} style={{ color: '#1e88e5' }} />\n                <div>\n                    <input\n                        type=\"file\"\n                        ref={fileRef}\n                        onClick={(e) => { e.target.value = null; }}\n                        style={{ display: 'none' }}\n                        accept=\".graphml\"\n                        onChange={(e) => readFile(superState, dispatcher, e)}\n                    />\n                    <span className=\"arrow\">&#10230;</span>\n                    <h1 className=\"text\">Drop the File anywhere to open</h1>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default app;\n","import React, { useEffect, useState } from 'react';\nimport Modal from './ParentModal';\nimport './settings.css';\nimport { actionType as T } from '../../reducer';\nimport GA from '../../graph-builder/graph-actions';\nimport './history.css';\n\nconst HistoryModal = ({ superState, dispatcher }) => {\n    const [curState, setcurState] = useState(0);\n    const [historyList, setHistoryList] = useState([]);\n    const [historyView, setHistoryView] = useState([]);\n    const actions = [\n        GA.ADD_NODE, GA.ADD_EDGE,\n        GA.UPDATE_NODE, GA.UPDATE_EDGE,\n        GA.DEL_NODE, GA.DEL_EDGE,\n        GA.SET_DIM, GA.SET_BENDW, GA.SET_POS,\n    ];\n    const mapActionToTrue = () => {\n        const res = {};\n        actions.forEach((action) => { res[action] = true; });\n        return res;\n    };\n    const [filterAction, setFilterAction] = useState(mapActionToTrue());\n\n    const getLabelFromID = (x) => {\n        if (superState.curGraphInstance) {\n            return superState.curGraphInstance.getLabelFromID(x);\n        }\n        return '';\n    };\n    useEffect(() => {\n        if (superState.curGraphInstance) {\n            setHistoryList([\n                ...superState.curGraphInstance.actionArr\n                    .slice().reverse().map((action, i) => ({ ...action, i })),\n            ]);\n            setcurState(\n                superState.curGraphInstance.actionArr.length\n                - superState.curGraphInstance.curActionIndex,\n            );\n        }\n    }, [superState.viewHistory, superState.graphs, superState.curGraphInstance, curState]);\n\n    const stringifyAction = (equivalent) => {\n        const par = equivalent.parameters;\n        switch (equivalent.actionName) {\n        case GA.ADD_NODE: return `Created new Node: ${par[0]}`;\n        case GA.ADD_EDGE: return `Created new Edge ${\n            getLabelFromID(par[0].id)\n        } between ${getLabelFromID(par[0].sourceID)} and ${getLabelFromID(par[0].targetID)}`;\n        case GA.UPDATE_NODE: return `Updated Label/Style for ${getLabelFromID(par[0])} node`;\n        case GA.UPDATE_EDGE: return `Updated Edge ${getLabelFromID(par[0])}`;\n        case GA.DEL_NODE: return `Deleted Node: ${getLabelFromID(par[0])}`;\n        case GA.DEL_EDGE: return `Deleted Edge: ${getLabelFromID(par[0])}`;\n        case GA.SET_POS: return `Moved node ${getLabelFromID(par[0])} on canvas`;\n        case GA.SET_DIM: return `Changed dimension of node ${getLabelFromID(par[0])}`;\n        case GA.SET_BENDW: return `Modified Bend Point of node ${getLabelFromID(par[0])}`;\n        default: return '';\n        }\n    };\n\n    const stringifyActionType = {\n        [GA.ADD_NODE]: 'NodeAddition:',\n        [GA.ADD_EDGE]: 'EdgeAddition',\n        [GA.UPDATE_NODE]: 'NodeUpdates',\n        [GA.UPDATE_EDGE]: 'EdgeUpdates',\n        [GA.DEL_NODE]: 'NodeDeletion',\n        [GA.DEL_EDGE]: 'EdgeDeletion',\n        [GA.SET_POS]: 'NodePosChange',\n        [GA.SET_DIM]: 'NodeDimensionChange',\n        [GA.SET_BENDW]: 'EdgeBend',\n    };\n\n    const restoreState = (index) => {\n        // eslint-disable-next-line no-alert\n        if (window.confirm('Are you sure to restore the selected state?')) {\n            let tempCurState = curState;\n            while (index > tempCurState) {\n                superState.curGraphInstance.undoSingleAction();\n                tempCurState += 1;\n            }\n            while (index < tempCurState) {\n                superState.curGraphInstance.redoSingleAction();\n                tempCurState -= 1;\n            }\n            setcurState(tempCurState);\n        }\n    };\n    const prefixTid = (tid, str, authorName, index, hash) => {\n        const DT = new Date(parseInt(tid, 10));\n        const date = DT.toLocaleDateString();\n        const time = DT.toLocaleTimeString();\n        const c = (\n            <>\n                <td>\n                    {\n                        index === curState ? '[Current]' : (\n                            <button className=\"a-link\" type=\"button\" onClick={() => restoreState(index)}>\n                                [Restore]\n                            </button>\n                        )\n                    }\n                </td>\n                <td>{`${date}-${time}`}</td>\n                <td>\n                    [\n                    <b>{`${authorName}`}</b>\n                    ]\n                </td>\n                <td style={{ fontWeight: 100 }}>{str}</td>\n                <td style={{ fontWeight: 100 }}>{hash}</td>\n            </>\n        );\n        // if (index === curState) return <u>{c}</u>;\n        return c;\n    };\n\n    const parseAction = ({\n        equivalent, tid, i, authorName, hash,\n    }) => prefixTid(\n        tid, stringifyAction(equivalent), authorName, i, hash,\n    );\n\n    useEffect(() => {\n        setHistoryView(historyList.filter((action) => filterAction[action.equivalent.actionName]).map(parseAction));\n    }, [filterAction, historyList]);\n\n    const close = () => dispatcher({ type: T.SET_HISTORY_MODAL, payload: false });\n    return (\n        <Modal\n            ModelOpen={superState.viewHistory}\n            closeModal={close}\n            title=\"History\"\n        >\n            <div className=\"hist-container\">\n                <fieldset>\n                    <legend>Filters</legend>\n                    {\n                        actions.map((action) => (\n                            <label htmlFor={action} className=\"filter_checkbox\" key={action}>\n                                <input\n                                    type=\"checkbox\"\n                                    name=\"filter\"\n                                    checked={filterAction[action]}\n                                    onChange={() => setFilterAction({\n                                        ...filterAction,\n                                        [action]: !filterAction[action],\n                                    })}\n                                />\n                                {stringifyActionType[action]}\n                            </label>\n                        ))\n                    }\n                </fieldset>\n                <div className=\"hist-list\">\n                    <table style={{ listStyleType: 'circle' }}>\n                        <tbody>\n                            {historyView.map((h, i) => (\n                                <tr\n                                    className={`hist-element ${i === curState ? 'active' : ''}`}\n                                    // eslint-disable-next-line react/no-array-index-key\n                                    key={i}\n                                >\n                                    {h}\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </Modal>\n    );\n};\n\nexport default HistoryModal;\n","/* eslint-disable object-shorthand */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable array-callback-return */\n/* eslint-disable no-param-reassign */\n/* eslint-disable react/state-in-constructor */\nimport React, { useEffect, useState } from 'react';\nimport FileBrowser, { FileRenderers, FolderRenderers } from 'react-keyed-file-browser';\nimport { readFile, readTextFile } from '../toolbarActions/toolbarFunctions';\nimport { actionType as T } from '../reducer';\nimport './fileBrowser.css';\n\nconst LocalFileBrowser = ({ superState, dispatcher }) => {\n    const fileRef = React.useRef();\n    const [dirButton, setDirButton] = useState(false);\n    const [fileState, setFileState] = useState([]);\n\n    useEffect(() => {\n        if (navigator.userAgent.indexOf('Edg') !== -1 || navigator.userAgent.indexOf('Chrome') !== -1) {\n            setDirButton(true);\n        }\n        dispatcher({ type: T.SET_FILE_REF, payload: fileRef });\n    }, []);\n\n    useEffect(() => {\n        // TODO - Loading file list from localStorage. Not supported by browsers.\n        // if(window.localStorage.getItem('fileList')) {\n        //     const allFiles = window.localStorage.getItem('fileList');\n        //     setFileState({ files: allFiles });\n        // }\n        window.localStorage.setItem('fileList', JSON.stringify(fileState));\n    }, [fileState]);\n\n    const handleSelectFile = (data) => {\n        const fileExtensions = ['jpeg', 'jpg', 'png', 'exe'];\n        if (fileExtensions.includes(data.fileObj.name.split('.').pop())) {\n            // eslint-disable-next-line no-alert\n            alert('Wrong file extension');\n            return;\n        }\n\n        if (data.fileObj.name.split('.').pop() === 'graphml') {\n            let foundi = -1;\n            superState.graphs.forEach((g, i) => {\n                if ((g.fileName === data.fileObj.name)) {\n                    foundi = i;\n                }\n            });\n            if (foundi !== -1) {\n                dispatcher({ type: T.CHANGE_TAB, payload: foundi });\n            } else {\n                readFile(superState, dispatcher, data.fileObj, data.fileHandle);\n            }\n        } else {\n            readTextFile(superState, dispatcher, data.fileObj, data.fileHandle);\n        }\n    };\n\n    const handleFileInDirs = async (topKey, value) => {\n        let topLevel = topKey;\n        let state = [];\n        // eslint-disable-next-line no-restricted-syntax\n        for await (const [key, valueSubDir] of value.entries()) {\n            if (valueSubDir.kind === 'file') {\n                const fileData = await valueSubDir.getFile();\n                state = state.concat([{\n                    key: `${topKey}/${value.name}/${key}`,\n                    modified: fileData.lastModified,\n                    size: fileData.size,\n                    fileObj: fileData,\n                    fileHandle: value,\n                }]);\n            } else if (valueSubDir.kind === 'directory') {\n                topLevel = `${topKey}/${value.name}`;\n                const res = await handleFileInDirs(topLevel, valueSubDir);\n                state = state.concat(res);\n            }\n        }\n        return state;\n    };\n\n    const newFeature = async () => {\n        const dirHandle = await window.showDirectoryPicker();\n        let state = [];\n        // eslint-disable-next-line no-restricted-syntax\n        for await (const [key, value] of dirHandle.entries()) {\n            if (value.kind === 'file') {\n                const fileData = await value.getFile();\n                state = state.concat([{\n                    key: `${dirHandle.name}/${key}`,\n                    modified: fileData.lastModified,\n                    size: fileData.size,\n                    fileObj: fileData,\n                    fileHandle: value,\n                }]);\n            } else if (value.kind === 'directory') {\n                const res = await handleFileInDirs(dirHandle.name, value);\n                state = state.concat(res);\n            }\n        }\n        setFileState([]);\n        setFileState(state);\n        dispatcher({ type: T.SET_DIR_NAME, payload: state[0].key.split('/')[0] });\n    };\n\n    const newFeatureFile = async () => {\n        const pickerOpts = {\n            types: [\n                {\n                    description: 'Graphml',\n                    accept: {\n                        'text/graphml': ['.graphml'],\n                    },\n                },\n            ],\n            excludeAcceptAllOption: true,\n            multiple: false,\n        };\n\n        const [fileHandle] = await window.showOpenFilePicker(pickerOpts);\n        const fileObj = await fileHandle.getFile();\n        readFile(superState, dispatcher, fileObj, fileHandle);\n    };\n\n    return (\n        <div>\n            {!dirButton && (\n                <label\n                    className=\"inputButton\"\n                    htmlFor=\"fileButton\"\n                >\n                    Upload Directory\n                    <input\n                        type=\"file\"\n                        accept=\".py, .m, .c, .cpp, .v, .sh\"\n                        id=\"fileButton\"\n                        style={{ display: 'none' }}\n                        onClick={(e) => { e.target.value = null; }}\n                        onChange={(e) => {\n                            setFileState([]);\n                            setFileState((state) => {\n                                for (let i = 0; i < e.target.files.length; i += 1) {\n                                    state = state.concat([{\n                                        key: e.target.files[i].webkitRelativePath,\n                                        modified: e.target.files[i].lastModified,\n                                        size: e.target.files[i].size,\n                                        fileObj: e.target.files[i],\n                                    }]);\n                                }\n                                return state;\n                            });\n                            window.localStorage.setItem('fileList', JSON.stringify(fileState));\n                        }}\n                        directory\n                        webkitdirectory=\"true\"\n                    />\n                </label>\n            ) }\n            {dirButton && (\n                <button\n                    type=\"button\"\n                    className=\"inputButton\"\n                    disabled={!dirButton}\n                    onClick={newFeature}\n                >\n                    Upload Directory\n                </button>\n            )}\n            {!dirButton\n                && (\n                    <input\n                        type=\"file\"\n                        ref={fileRef}\n                        onClick={(e) => { e.target.value = null; }}\n                        style={{ display: 'none' }}\n                        accept=\".graphml\"\n                        onChange={(e) => readFile(superState, dispatcher, e.target.files[0])}\n                    />\n                )}\n            {dirButton\n                && (\n                    <button\n                        type=\"button\"\n                        ref={fileRef}\n                        className=\"inputButton\"\n                        disabled={!dirButton}\n                        style={{ display: 'none' }}\n                        onClick={newFeatureFile}\n                        label=\"File Upload\"\n                    />\n                    // <input\n                    //     type=\"file\"\n                    //     ref={fileRef}\n                    //     onClick={(e) => { e.target.value = null; }}\n                    //     style={{ display: 'none' }}\n                    //     accept=\".graphml\"\n                    //     onChange={(e) => readFile(superState, dispatcher, e.target.files[0])}\n                    // />\n                )}\n            <h4>\n                Folder Name :\n                {' '}\n                {fileState[0] ? fileState[0].key.split('/')[0] : '' }\n            </h4>\n            <FileBrowser\n                files={fileState}\n                onSelectFile={handleSelectFile}\n                detailRenderer={() => null}\n                fileRenderer={FileRenderers.TableFile}\n                folderRenderer={FolderRenderers.TableFolder}\n            />\n        </div>\n    );\n};\nexport default LocalFileBrowser;\n","import React, { useState, useEffect } from 'react';\nimport Editor from 'react-simple-code-editor';\nimport { highlight, languages } from 'prismjs/components/prism-core';\nimport { saveAs } from 'file-saver';\nimport Modal from './ParentModal';\nimport './file-edit.css';\nimport 'prismjs/components/prism-bash';\nimport 'prismjs/components/prism-clike';\nimport 'prismjs/components/prism-c';\nimport 'prismjs/components/prism-cpp';\nimport 'prismjs/components/prism-matlab';\nimport 'prismjs/components/prism-verilog';\nimport 'prismjs/components/prism-python';\nimport 'prismjs/components/prism-javascript';\nimport 'prismjs/themes/prism.css';\nimport { actionType as T } from '../../reducer';\n\nconst FileEditModal = ({ superState, dispatcher }) => {\n    const [codeStuff, setCodeStuff] = useState('');\n    const [fileName, setFileName] = useState('');\n    const [dirButton, setDirButton] = useState(false);\n\n    useEffect(() => {\n        if (navigator.userAgent.indexOf('Edg') !== -1 || navigator.userAgent.indexOf('Chrome') !== -1) {\n            setDirButton(true);\n        }\n    }, []);\n\n    const close = () => {\n        dispatcher({ type: T.EDIT_TEXTFILE, payload: { show: false } });\n        setCodeStuff('');\n        setFileName('');\n    };\n\n    async function submit() {\n        if (superState.fileHandle) {\n            const stream = await superState.fileHandle.createWritable();\n            await stream.write(codeStuff);\n            await stream.close();\n        } else {\n            // eslint-disable-next-line no-alert\n            alert('Switch to Edge/Chrome!');\n        }\n        dispatcher({ type: T.EDIT_TEXTFILE, payload: { show: false } });\n    }\n\n    async function saveAsSubmit() {\n        const handle = await window.showSaveFilePicker();\n        const stream = await handle.createWritable();\n        await stream.write(codeStuff);\n        await stream.close();\n        // dispatcher({ type: T.EDIT_TEXTFILE, payload: { show: false } });\n    }\n\n    async function saveSubmit() {\n        // eslint-disable-next-line no-alert\n        const newFileName = prompt('Filename:');\n        const bytes = new TextEncoder().encode(codeStuff);\n        const blob = new Blob([bytes], { type: 'application/json;charset=utf-8' });\n        saveAs(blob, newFileName);\n        // dispatcher({ type: T.EDIT_TEXTFILE, payload: { show: false } });\n    }\n\n    useEffect(async () => {\n        if (superState.fileObj) {\n            setFileName(superState.fileObj.name);\n            const fr = new FileReader();\n            fr.onload = (x) => {\n                setCodeStuff(x.target.result);\n            };\n            if (superState.fileHandle) fr.readAsText(await superState.fileHandle.getFile());\n            else fr.readAsText(superState.fileObj);\n        }\n    }, [superState.fileObj]);\n\n    function highlightSyntax(code) {\n        const extensions = ['v', 'c', 'h', 'hpp', 'cpp', 'py', 'm', 'sh'];\n        const fileEx = fileName.split('.').pop();\n        if (extensions.includes(fileEx)) {\n            switch (fileEx) {\n            case 'v': return highlight(code, languages.verilog, 'verilog');\n            case 'c': return highlight(code, languages.c, 'c');\n            case 'h': return highlight(code, languages.c, 'c');\n            case 'hpp': return highlight(code, languages.c, 'c');\n            case 'cpp': return highlight(code, languages.cpp, 'cpp');\n            case 'py': return highlight(code, languages.python, 'python');\n            case 'm': return highlight(code, languages.matlab, 'matlab');\n            case 'sh': return highlight(code, languages.bash, 'bash');\n            default: return highlight(code, languages.plaintext);\n            }\n        }\n        return highlight(code, languages.plaintext);\n    }\n\n    return (\n        <Modal\n            ModelOpen={superState.textFileModal}\n            closeModal={close}\n            title={fileName}\n        >\n            <div>\n                <div className=\"save-bar\">\n                    {fileName\n                        && (\n                            <button type=\"submit\" className=\"btn btn-primary\" onClick={submit}>Save</button>\n                        )}\n                    {dirButton && (\n                        <button type=\"submit\" className=\"btn btn-primary\" onClick={saveAsSubmit}>Save As</button>\n                    )}\n                    {!dirButton && (\n                        <button type=\"submit\" className=\"btn btn-primary\" onClick={saveSubmit}>Save As</button>\n                    )}\n                </div>\n                <div className=\"setting-container\">\n                    <Editor\n                        value={codeStuff}\n                        onValueChange={(e) => setCodeStuff(e)}\n                        highlight={(code) => highlightSyntax(code)}\n                        padding={10}\n                        style={{\n                            fontFamily: '\"Arial\", \"Helvetica\", sans-serif',\n                            fontSize: 16,\n                            minHeight: '100vh',\n                            minWidth: '90vw',\n                            border: '1px solid black',\n                        }}\n                    />\n                </div>\n                <div className=\"save-bar\">\n                    {fileName\n                        && (\n                            <button type=\"submit\" className=\"btn btn-primary\" onClick={submit}>Save</button>\n                        )}\n                    {dirButton && (\n                        <button type=\"submit\" className=\"btn btn-primary\" onClick={saveAsSubmit}>Save As</button>\n                    )}\n                    {!dirButton && (\n                        <button type=\"submit\" className=\"btn btn-primary\" onClick={saveSubmit}>Save As</button>\n                    )}\n                </div>\n            </div>\n        </Modal>\n    );\n};\n\nexport default FileEditModal;\n","import React, { useState } from 'react';\nimport Axios from 'axios';\nimport Modal from './ParentModal';\nimport { actionType as T } from '../../reducer';\n\nconst ContributeModal = ({ superState, dispatcher }) => {\n    const closeModal = () => {\n        dispatcher({ type: T.SET_CONTRIBUTE_MODAL, payload: false });\n    };\n    const [study, setStudy] = useState('');\n    const [path, setPath] = useState('');\n    const [auth, setAuth] = useState('');\n    const [title, setTitle] = useState('');\n    const [desc, setDesc] = useState('');\n    const [branch, setBranch] = useState('');\n    const submit = (e) => {\n        e.preventDefault();\n        Axios.post(`http://127.0.0.1:5000/contribute?study=${study}&auth=${auth}&desc=${desc}&title=${title}&path=${path}&branch=${branch}`)\n            .then((res) => { // eslint-disable-next-line\n                alert(res.data);\n            }).catch((err) => { // eslint-disable-next-line\n                alert(err);\n            });\n    };\n    return (\n        <Modal\n            ModelOpen={superState.contributeModal}\n            title=\"Contribute\"\n            closeModal={closeModal}\n        >\n            <form className=\"proj-details\">\n                <span>Study Name</span>\n                <input\n                    placeholder=\"Study Name\"\n                    required\n                    value={study}\n                    onChange={(e) => setStudy(e.target.value)}\n                />\n                <span>Study Path</span>\n                <input\n                    placeholder=\"Please provide correct path of study\"\n                    required\n                    value={path}\n                    onChange={(e) => setPath(e.target.value)}\n                />\n                <span>Author Name</span>\n                <input\n                    placeholder=\"Author of Study\"\n                    value={auth}\n                    onChange={(e) => setAuth(e.target.value)}\n                    required\n                />\n                <span>Branch Name</span>\n                <input\n                    placeholder=\"Branch Name\"\n                    value={branch}\n                    onChange={(e) => setBranch(e.target.value)}\n                    required\n                />\n                <span>PR Title</span>\n                <input\n                    placeholder=\"PR Title\"\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                    required\n                />\n                <span>PR Description</span>\n                <input\n                    placeholder=\"PR Description\"\n                    value={desc}\n                    onChange={(e) => setDesc(e.target.value)}\n                    required\n                />\n                <div className=\"expand\">\n                    <button type=\"submit\" className=\"btn btn-primary\" onClick={submit}>Generate PR</button>\n                </div>\n            </form>\n        </Modal>\n    );\n};\nexport default ContributeModal;\n","import React, { useEffect, useReducer } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\nimport ReactTooltip from 'react-tooltip';\nimport GraphWorkspace from './GraphWorkspace';\nimport GraphCompDetails from './component/modals/GraphCompDetails';\nimport { Header } from './component/Header';\nimport { reducer, initialState, actionType as T } from './reducer';\nimport ProjectDetails from './component/modals/ProjectDetails';\nimport ShareModal from './component/modals/ShareModal';\nimport SettingsModal from './component/modals/Settings';\nimport FileDragDrop from './component/File-drag-drop';\nimport HistoryModal from './component/modals/History';\nimport LocalFileBrowser from './component/fileBrowser';\nimport FileEditModal from './component/modals/FileEdit';\nimport ContributeModal from './component/modals/Contribute';\n\nconst app = () => {\n    const [superState, dispatcher] = useReducer(reducer, initialState);\n    useEffect(() => {\n        const handleBeforeUnload = (e) => {\n            e.returnValue = 'Are you sure you want to leave this page?';\n            return 'Are you sure you want to leave this page?';\n        };\n        window.onbeforeunload = handleBeforeUnload;\n        return () => {\n            window.onbeforeunload = null;\n        };\n    }, []);\n    return (\n        <div className=\"container\">\n            <ProjectDetails superState={superState} dispatcher={dispatcher} />\n            <ShareModal superState={superState} dispatcher={dispatcher} />\n            <SettingsModal superState={superState} dispatcher={dispatcher} />\n            <HistoryModal superState={superState} dispatcher={dispatcher} />\n            <ContributeModal superState={superState} dispatcher={dispatcher} />\n            <FileEditModal superState={superState} dispatcher={dispatcher} />\n            <GraphCompDetails\n                closeModal={() => dispatcher({ type: T.Model_Close })}\n                superState={superState}\n            />\n            <FileDragDrop dispatcher={dispatcher} />\n            <Header superState={superState} dispatcher={dispatcher} />\n            <section className=\"body\" style={{ display: 'flex', overflow: 'hidden' }}>\n                <div style={{ display: 'flex', overflow: 'auto' }}>\n                    <LocalFileBrowser superState={superState} dispatcher={dispatcher} />\n                </div>\n                <div className=\"graph\" style={{ display: 'flex', overflow: 'hidden' }}>\n                    <GraphWorkspace dispatcher={dispatcher} superState={superState} />\n                </div>\n            </section>\n            <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"solid\" />\n            <ToastContainer position=\"top-right\" autoClose={5000} pauseOnHover={false} />\n        </div>\n    );\n};\n\nexport default app;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({\n            getCLS, getFID, getFCP, getLCP, getTTFB,\n        }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const BendingDistanceWeight = {\n\n    dist: (A, B) => (((A.x - B.x) ** 2 + (A.y - B.y) ** 2) ** 0.5),\n\n    rotate: (P, Q) => ({\n        x: P.x * Math.cos(Q) - P.y * Math.sin(Q),\n        y: P.x * Math.sin(Q) + P.y * Math.cos(Q),\n    }),\n\n    extraRad: (A, B) => (((A.x >= B.x && A.y > B.y) || (A.x >= B.x && A.y < B.y)) ? Math.PI : 0),\n\n    getRadian(tanQ, A, B) {\n        return (Math.atan(tanQ) - this.extraRad(A, B) + 2 * Math.PI) % (2 * Math.PI);\n    },\n\n    getCoordinate(w, d, A, B) {\n        const tanQ = (A.y - B.y) / (A.x - B.x);\n        const Q = this.getRadian(tanQ, A, B);\n        const D = this.dist(A, B) * w;\n        const P = { x: D, y: d };\n        const { x, y } = this.rotate(P, Q);\n        return { x: x + A.x, y: y + A.y };\n    },\n\n    getWeightDistance(p, A, B) {\n        const P = { x: p.x - A.x, y: p.y - A.y };\n        const tanQ = (A.y - B.y) / (A.x - B.x);\n        const Q = this.getRadian(tanQ, A, B);\n        const { x, y } = this.rotate(P, -Q);\n        const d = this.dist(A, B);\n        return { d: y, w: x / d };\n    },\n};\n\nexport default BendingDistanceWeight;\n","const style = [\n    {\n        selector: '*',\n        style: {\n            overlayOpacity: '0',\n        },\n    },\n    {\n        selector: 'node[type = \"ordin\"]',\n        style: {\n            content: 'data(label)',\n            zIndex: 100,\n            width: 'data(style.width)',\n            height: 'data(style.height)',\n            shape: 'data(style.shape)',\n            opacity: 'data(style.opacity)',\n            backgroundColor: 'data(style.backgroundColor)',\n            borderColor: 'data(style.borderColor)',\n            borderWidth: 'data(style.borderWidth)',\n            textValign: 'center',\n            textHalign: 'center',\n        },\n    },\n    {\n        selector: 'node[type=\"special\"]',\n        style: {\n            width: 8,\n            height: 8,\n            backgroundColor: 'data(style.backgroundColor)',\n            zIndex: 1000,\n        },\n    },\n\n    {\n        selector: 'edge',\n        style: {\n            curveStyle: 'bezier',\n            targetArrowShape: 'triangle',\n        },\n    },\n    {\n        selector: 'edge[type = \"ordin\"]',\n        style: {\n            width: 'data(style.thickness)',\n            lineColor: 'data(style.backgroundColor)',\n            targetArrowColor: 'data(style.backgroundColor)',\n            curveStyle: 'segments',\n            segmentDistances: 'data(bendData.bendDistance)',\n            segmentWeights: 'data(bendData.bendWeight)',\n            edgeDistances: 'node-position',\n            lineStyle: 'data(style.shape)',\n        },\n    },\n    {\n        selector: 'edge[label]',\n        style: {\n            label: 'data(label)',\n            edgeTextRotation: 'autorotate',\n            zIndex: 999,\n            textBackgroundOpacity: 1,\n            color: '#000',\n            textBackgroundColor: '#fff',\n            textBackgroundShape: 'roundrectangle',\n            textBorderColor: '#fff',\n            textBorderWidth: 2,\n            textBorderOpacity: 1,\n        },\n    },\n    {\n        selector: '.hidden',\n        style: {\n            display: 'none',\n        },\n    },\n    {\n        selector: '.eh-handle,node[type=\"bend\"]',\n        style: {\n            height: 25,\n            width: 25,\n            opacity: 0.4,\n            borderWidth: 5,\n            borderOpacity: 0.1,\n        },\n    },\n    {\n        selector: 'node[type=\"bend\"]',\n        style: {\n            backgroundColor: '#9575cd',\n        },\n    },\n    {\n        selector: '.eh-handle',\n        style: {\n            backgroundColor: '#f50057',\n        },\n    },\n    {\n        selector: ':selected',\n        style: {\n            overlayColor: '#000',\n            overlayOpacity: 0.1,\n            overlayPadding: 5,\n        },\n    },\n\n];\n\nexport default style;\n","import style from './cytoscape-style';\n\nconst options = {\n    style: [...style],\n    zoomingEnabled: true,\n    userZoomingEnabled: true,\n    minZoom: 0.25,\n    maxZoom: 5,\n};\n\nexport default options;\n","const zealit = require('zealit');\n\nconst actionType = {\n    $$typeof: '',\n    Model_Open_Create_Node: 'OpenModal_CreateNode',\n    Model_Open_Create_Edge: 'OpenModal_CreateEdge',\n    Model_Open_Update_Edge: 'OpenModal_UpdateEdge',\n    Model_Open_Update_Node: 'OpenModal_UpdateNode',\n    Model_Close: 'CloseModal',\n    ELE_UNSELECTED: 'ELE_UNSELECTED',\n    ELE_SELECTED: 'ELE_SELECTED',\n    TURN_DRAW: 'TURN_DRAW',\n    SET_ZOOM: 'SET_ZOOM',\n    SET_PROJECT_DETAILS: 'SET_PROJECT_DETAILS',\n    SET_UNDO: 'SET_UNDO',\n    SET_REDO: 'SET_REDO',\n    ADD_GRAPH_INSTANCE: 'ADD_GRAPH_INSTANCE',\n    ADD_GRAPH: 'ADD_GRAPH',\n    ADD_GRAPH_BULK: 'ADD_GRAPH_BULK',\n    CHANGE_TAB: 'CHANGE_TAB',\n    REMOVE_GRAPH: 'REMOVE_GRAPH',\n    NEW_GRAPH: 'NEW_GRAPH',\n    SET_SHARE_MODAL: 'SET_SHARE_MODAL',\n    SET_SETTING_MODAL: 'SET_SETTING_MODAL',\n    SET_FILE_REF: 'SET_FILE_REF',\n    SET_HISTORY_MODAL: 'SET_HISTORY_MODAL',\n    SET_CONTRIBUTE_MODAL: 'SET_CONTRIBUTE_MODAL',\n    SET_AUTHOR: 'SET_AUTHOR',\n    IS_WORKFLOW_ON_SERVER: 'IS_WORKFLOW_ON_SERVER',\n    SET_CUR_INSTANCE: 'SET_CUR_INSTANCE',\n    SET_ZOOM_LEVEL: 'SET_ZOOM_LEVEL',\n    SET_EDIT_DETAILS_MODAL: 'SET_EDIT_DETAILS_MODAL',\n    SET_NEW_GRAPH_MODAL: 'SET_NEW_GRAPH_MODAL',\n    EDIT_TEXTFILE: 'EDIT_TEXTFILE',\n    SET_FILE_HANDLE: 'SET_FILE_HANDLE',\n    SET_DIR_NAME: 'SET_DIR_NAME',\n};\n\nexport default zealit(actionType);\n","import React, {\n    useCallback, useEffect, useState, createRef,\n} from 'react';\nimport './nodeDetails.css';\n// import ColorBox from './ColorBox';\nimport localStorageManager from '../../graph-builder/local-storage-manager';\n\nconst NodeDetails = ({\n    data, setData, submit, labelAllowed,\n}) => {\n    const inputRef = useCallback((node) => node && node.focus(), []);\n    const textRef = createRef();\n    const [widthSet] = useState(false);\n    const [labelName, setLabelName] = useState('');\n    const [labelFile, setLabelFile] = useState('');\n    const indexOfFile = [];\n    indexOfFile.push(0);\n\n    const setStyle = (prop) => {\n        setData({ ...data, style: { ...data.style, ...prop } });\n    };\n\n    useEffect(() => {\n        if (!widthSet) {\n            setStyle({\n                width: Math.max(data.style.width, Math.min(500, textRef.current.offsetWidth + 20)),\n            });\n        }\n    }, [!widthSet && data.label]);\n\n    useEffect(() => {\n        setLabelName(data.label.split(':')[0]);\n    }, [data.label]);\n\n    return (\n        <div className=\"nodeform\" onSubmit={submit}>\n            <div className=\"parent-div\" style={{ height: data.style.height }}>\n                <div\n                    className=\"node-div\"\n                    style={{\n                        ...data.style,\n                        borderRadius: data.style.shape === 'ellipse' ? '100%' : 0,\n                    }}\n                >\n                    <span ref={textRef}>{labelAllowed ? data.label : ''}</span>\n\n                </div>\n            </div>\n            <div className=\"form\" style={{ padding: 20 }}>\n                {/* <div> Shape</div>\n                <div>\n                    <label htmlFor=\"rectangle\">\n                        <input\n                            type=\"radio\"\n                            name=\"shape\"\n                            value=\"rectangle\"\n                            checked={data.style.shape === 'rectangle'}\n                            onChange={() => setStyle({ shape: 'rectangle' })}\n                        />\n                        Rectangle\n                    </label>\n                </div>\n                <div>\n                    <label htmlFor=\"ellipse\">\n                        <input\n                            type=\"radio\"\n                            name=\"shape\"\n                            value=\"ellipse\"\n                            checked={data.style.shape === 'ellipse'}\n                            onChange={() => setStyle({ shape: 'ellipse' })}\n                        />\n                        Ellipse\n                    </label>\n                </div>\n                <div /> */}\n\n                {labelAllowed ? <div> Label</div> : ''}\n                {labelAllowed ? (\n                    <>\n                        <input\n                            className=\"nodeLabel\"\n                            ref={inputRef}\n                            type=\"text\"\n                            required\n                            label=\"Node Label\"\n                            placeholder=\"Enter Node Label\"\n                            value={data.label.split(':')[0]}\n                            onChange={(e) => {\n                                if (e.target.value.slice(-1) !== ':') {\n                                    setLabelName(`${e.target.value}:`);\n                                    setData({ ...data, label: `${e.target.value}:${labelFile}` });\n                                } else {\n                                    setLabelName(e.target.value);\n                                    setData({ ...data, label: e.target.value + labelFile });\n                                }\n                            }}\n                        />\n\n                        <input\n                            className=\"nodeLabelFile\"\n                            type=\"text\"\n                            label=\"Node Label file\"\n                            placeholder=\"Select file\"\n                            onChange={(e) => {\n                                setLabelFile(e.target.value.split('/').pop());\n                                if (labelName) {\n                                    let lname = labelName;\n                                    if (labelName.slice(-1) !== ':') {\n                                        setLabelName(`${labelName}:`);\n                                        lname += ':';\n                                    }\n                                    setData({ ...data, label: lname + e.target.value.split('/').pop() });\n                                } else setData({ ...data, label: `:${e.target.value.split('/').pop()}` });\n                            }}\n                            list=\"files\"\n                        />\n                        <datalist id=\"files\">\n                            {\n                                localStorageManager.getFileList()\n                                    // eslint-disable-next-line max-len, prefer-arrow-callback\n                                    ? JSON.parse(localStorageManager.getFileList())\n                                        .map((item) => {\n                                            const list = [];\n                                            const acceptedTypes = ['.v', '.c', '.cpp', '.py', '.m', '.sh'];\n                                            let index;\n                                            // eslint-disable-next-line max-len\n                                            if ((acceptedTypes.some((substring) => item.key.toString().includes(substring)))) {\n                                                list.push(item.key.toString());\n                                                indexOfFile.push(indexOfFile[indexOfFile.length - 1] + 1);\n                                                index = indexOfFile[indexOfFile.length - 1] + 1;\n                                                // eslint-disable-next-line jsx-a11y/control-has-associated-label\n                                                return <option value={list} key={index} />;\n                                            }\n                                            return null;\n                                        })\n                                    : ''\n                            }\n                        </datalist>\n                    </>\n                ) : ''}\n                {/* <div> Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style.width}\n                    onChange={(e) => {\n                        setWidthSet(true);\n                        setStyle({\n                            width: Math.min(500, e.target.value),\n                        });\n                    }}\n                /> */}\n\n                {/* <div> Height</div>\n                <input\n                    type=\"number\"\n                    value={data.style.height}\n                    onChange={(e) => setStyle({ height: Math.min(200, e.target.value) })}\n                /> */}\n\n                {/* <div> Background Color</div>\n                <ColorBox\n                    color={data.style.backgroundColor}\n                    setColor={(color) => setStyle({ backgroundColor: color })}\n                    type=\"light\"\n                /> */}\n\n                {/* <div> Border Color</div>\n                <ColorBox\n                    color={data.style.borderColor}\n                    setColor={(color) => setStyle({ borderColor: color })}\n                    type=\"dark\"\n                /> */}\n\n                {/* <div> Border Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style.borderWidth}\n                    onChange={(e) => setStyle({ borderWidth: Math.min(30, e.target.value) })}\n                /> */}\n                {/* <div> Opacity</div>\n                <input\n                    type=\"number\"\n                    step=\".01\"\n                    value={data.style.opacity}\n                    onChange={(e) => setStyle({ opacity: Math.min(1, Math.max(0, e.target.value)) })}\n                /> */}\n            </div>\n        </div>\n    );\n};\n\nexport default NodeDetails;\n","import React, { useCallback } from 'react';\n// import ColorBox from './ColorBox';\nimport './edgeDetails.css';\n\nconst Triangle = ({ size, color }) => {\n    const s = parseInt(size, 10) * 5;\n    const EqTriangle = {\n        borderLeft: `${0.8666 * s}px solid ${color}`,\n        borderBottom: `${s / 2}px solid transparent`,\n        borderTop: `${s / 2}px solid transparent`,\n        marginLeft: -1,\n    };\n    return (\n        <div style={EqTriangle} />\n    );\n};\n\nconst EdgeDetails = ({\n    data, setData, submit, labelAllowed,\n}) => {\n    // const setStyle = (prop) => setData({ ...data, style: { ...data.style, ...prop } });\n    const inputRef = useCallback((node) => node && node.focus(), []);\n    // const RadioBtn = ({ name, shape }) => (\n    //     <label htmlFor=\"ellipse\">\n    //         <input\n    //             type=\"radio\"\n    //             name=\"shape\"\n    //             value={shape}\n    //             checked={data.style.shape === shape}\n    //             onChange={() => setStyle({ shape })}\n    //         />\n    //         {name}\n    //     </label>\n    // );\n\n    return (\n        <div className=\"edgeform\" onSubmit={submit}>\n            <div className=\"par-div\">\n                <div\n                    className=\"edge-div\"\n                    style={{\n                        borderBottomWidth: data.style.thickness,\n                        borderBottomColor: data.style.backgroundColor,\n                        borderBottomStyle: data.style.shape,\n                    }}\n                />\n                <Triangle size={data.style.thickness} color={data.style.backgroundColor} />\n                <div className=\"label\">{data.label}</div>\n            </div>\n            <div className=\"form\">\n                {labelAllowed ? <div> Label</div> : ''}\n                {labelAllowed ? (\n                    <input\n                        ref={inputRef}\n                        className=\"span-rest edgeLabel\"\n                        type=\"text\"\n                        required\n                        label=\"Edge Label\"\n                        value={data.label}\n                        placeholder=\"Enter Edge Label\"\n                        onChange={(e) => setData({ ...data, label: `${e.target.value}` })}\n                    />\n                ) : ''}\n                {/* <div> Shape</div>\n                <div className=\"span-rest hascheckbox\">\n                    <div><RadioBtn name=\"Solid\" shape=\"solid\" /></div>\n                    <div><RadioBtn name=\"Dotted\" shape=\"dotted\" /></div>\n                    <div><RadioBtn name=\"Dashed\" shape=\"dashed\" /></div>\n                </div>\n                <div> Thickness</div>\n                <input\n                    type=\"number\"\n                    value={data.style.thickness}\n                    onChange={(e) => setStyle({ thickness: Math.max(0, Math.min(20, e.target.value)) })}\n                />\n                <div> Background Color</div>\n                <ColorBox\n                    color={data.style.backgroundColor}\n                    setColor={(color) => setStyle({ backgroundColor: color })}\n                    type=\"dark\"\n                /> */}\n            </div>\n        </div>\n    );\n};\n\nexport default EdgeDetails;\n","const NodeStyle = {\n    width: 100,\n    height: 50,\n    shape: 'rectangle',\n    opacity: 1,\n    backgroundColor: '#ffcc00',\n    borderColor: '#000',\n    borderWidth: 1,\n};\n\nconst EdgeStyle = {\n    thickness: 1,\n    backgroundColor: null,\n    shape: 'solid',\n};\n\nexport { NodeStyle, EdgeStyle };\n","const initialState = {\n    ModelOpen: false,\n    modalPayload: {\n        cb: () => {},\n        title: '',\n        submitText: '',\n        Children: '',\n        defaultStyle: {},\n        defaultLabel: '',\n        labelAllowed: null,\n    },\n    shareModal: false,\n    settingsModal: false,\n    editDetailsModal: false,\n    newGraphModal: false,\n    contributeModal: false,\n\n    eleSelected: false,\n    drawModeOn: true,\n    undoEnabled: false,\n    redoEnabled: false,\n    graphs: [],\n    curGraphIndex: 0,\n    viewHistory: false,\n    isWorkflowOnServer: false,\n    curGraphInstance: null,\n    zoomLevel: 100,\n    uploadedDirName: null,\n};\n\nconst initialGraphState = {\n    projectName: '',\n    graphID: null,\n    serverID: null,\n    graphML: null,\n    authorName: '',\n    component: null,\n    instance: null,\n    id: null,\n    fileHandle: null,\n    fileName: null,\n};\n\nexport { initialState, initialGraphState };\n","import T from './actionType';\nimport NodeDetails from '../component/modals/NodeDetails';\nimport EdgeDetails from '../component/modals/EdgeDetails';\nimport { NodeStyle, EdgeStyle } from '../config/defaultStyles';\nimport { initialGraphState } from './initialState';\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n    case T.Model_Open_Create_Node:\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Create Node',\n                submitText: 'Create Node',\n                Children: NodeDetails,\n                defaultStyle: NodeStyle,\n                defaultLabel: '',\n                labelAllowed: true,\n                cb: action.cb,\n            },\n        };\n    case T.Model_Open_Create_Edge:\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Create Edge',\n                submitText: 'Create Edge',\n                Children: EdgeDetails,\n                defaultStyle: EdgeStyle,\n                defaultLabel: '',\n                labelAllowed: true,\n                cb: action.cb,\n            },\n        };\n    case T.Model_Open_Update_Node: {\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Edit Node',\n                submitText: 'Edit Node',\n                Children: NodeDetails,\n                defaultStyle: action.style,\n                defaultLabel: action.label,\n                labelAllowed: action.labelAllowed,\n                cb: action.cb,\n            },\n        };\n    }\n    case T.Model_Open_Update_Edge: {\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Edit Edge',\n                submitText: 'Edit Edge',\n                Children: EdgeDetails,\n                defaultStyle: action.style,\n                defaultLabel: action.label,\n                labelAllowed: action.labelAllowed,\n                cb: action.cb,\n            },\n        };\n    }\n    case T.Model_Close: return { ...state, ModelOpen: false };\n    case T.ELE_SELECTED: return { ...state, eleSelected: true, eleSelectedPayload: action.payload };\n    case T.ELE_UNSELECTED: return { ...state, eleSelected: false };\n    case T.TURN_DRAW: return { ...state, drawModeOn: action.payload };\n\n    case T.SET_UNDO: return { ...state, undoEnabled: action.payload };\n    case T.SET_REDO: return { ...state, redoEnabled: action.payload };\n\n    case T.ADD_GRAPH: {\n        let foundi = -1;\n        const graphID = action.payload.graphID || new Date().getTime().toString();\n        state.graphs.forEach((g, i) => {\n            if ((g.graphID && g.graphID === graphID) || (g.serverID && g.serverID === action.payload.serverID)) {\n                foundi = i;\n            }\n        });\n        if (foundi !== -1) {\n            return { ...state, newGraphModal: false, curGraphIndex: foundi };\n        }\n        return {\n            ...state,\n            newGraphModal: false,\n            curGraphIndex: state.graphs.length,\n            graphs: [\n                ...state.graphs,\n                {\n                    ...initialGraphState,\n                    projectName: action.payload.projectName,\n                    graphID,\n                    serverID: action.payload.serverID,\n                    graphML: action.payload.graphML,\n                    fileHandle: action.payload.fileHandle || null,\n                    fileName: action.payload.fileName,\n                    authorName: action.payload.authorName || '',\n                },\n            ],\n        };\n    }\n    case T.ADD_GRAPH_BULK: {\n        return { ...state, graphs: [...state.graphs, ...action.payload] };\n    }\n    case T.SET_CUR_INSTANCE: {\n        return { ...state, curGraphInstance: action.payload };\n    }\n    case T.CHANGE_TAB: return { ...state, curGraphIndex: action.payload };\n\n    case T.NEW_GRAPH: return { ...state, newGraphModal: true };\n    case T.REMOVE_GRAPH: return {\n        ...state,\n        graphs: state.graphs.filter((e, i) => i !== action.payload),\n        curGraphIndex: state.curGraphIndex < action.payload\n            ? state.curGraphIndex\n            : Math.max(0, state.curGraphIndex - 1),\n    };\n\n    case T.SET_PROJECT_DETAILS: {\n        const newState = { ...state };\n        newState.graphs = newState.graphs.map((g) => (\n            g.graphID === action.payload.graphID ? { ...g, [action.payload.type]: action.payload.value }\n                : g\n        ));\n        return { ...newState };\n    }\n\n    case T.SET_SHARE_MODAL: {\n        return { ...state, shareModal: action.payload };\n    }\n\n    case T.SET_SETTING_MODAL: {\n        return { ...state, settingsModal: action.payload };\n    }\n\n    case T.SET_FILE_REF: {\n        return { ...state, fileRef: action.payload };\n    }\n\n    case T.SET_FILE_HANDLE: {\n        const newState = { ...state };\n        newState.graphs = newState.graphs.map((g, index) => (\n            index === action.payload.curGraphIndex ? { ...g, fileHandle: action.payload.fileHandle }\n                : g\n        ));\n        return { ...newState };\n    }\n\n    case T.SET_DIR_NAME: {\n        return { ...state, uploadedDirName: action.payload };\n    }\n\n    case T.SET_HISTORY_MODAL: {\n        return { ...state, viewHistory: action.payload };\n    }\n\n    case T.SET_AUTHOR: {\n        const newState = { ...state };\n        newState.graphs = newState.graphs.map((g) => (\n            g.graphID === action.payload.graphID ? { ...g, [action.payload.type]: action.payload.value } : g\n        ));\n        return { ...newState };\n    }\n\n    case T.IS_WORKFLOW_ON_SERVER: {\n        return { ...state, isWorkflowOnServer: action.payload };\n    }\n    case T.SET_ZOOM_LEVEL: {\n        return { ...state, zoomLevel: action.payload };\n    }\n    case T.SET_EDIT_DETAILS_MODAL: {\n        return { ...state, editDetailsModal: action.payload };\n    }\n    case T.SET_NEW_GRAPH_MODAL: {\n        return { ...state, newGraphModal: action.payload };\n    }\n    case T.SET_CONTRIBUTE_MODAL: {\n        return { ...state, contributeModal: action.payload };\n    }\n\n    case T.EDIT_TEXTFILE: {\n        return {\n            ...state,\n            textFileModal: action.payload.show,\n            fileObj: action.payload.fileObj,\n            fileHandle: action.payload.fileHandle,\n        };\n    }\n\n    default:\n        return state;\n    }\n};\nexport default reducer;\n"],"sourceRoot":""}