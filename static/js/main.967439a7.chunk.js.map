{"version":3,"sources":["reducer/actionType.js","component/modals/NodeDetails.jsx","component/modals/EdgeDetails.jsx","config/defaultStyles.js","reducer/initialState.js","reducer/reducer.js","graph-builder/graph-core/3-component.js","graph-builder/graph-core/2-canvas.js","graph-builder/graph-core/1-core.js","graph-builder/local-storage-manager.js","component/ZoomSetter.jsx","toolbarActions/toolbarFunctions.js","component/TabBar.jsx","graph-builder/graphml/builder/nodeML.js","graph-builder/graphml/builder/graphML.js","graph-builder/graphml/builder/edgeML.js","graph-builder/graphml/builder/index.js","graph-builder/graph-core/4-undo-redo.js","graph-builder/graphml/parser/PropFromArr.js","graph-builder/graphml/parser/parseProperties.js","graph-builder/graphml/parser/index.js","graph-builder/graph-core/index.js","graph-builder/graph-core/6-server.js","graph-builder/graph-core/5-load-save.js","graph-builder/calculations/boundary-point.js","graph-builder/index.js","graph-builder/tailored-graph-builder.js","GraphArea.jsx","config/defaultValidators.js","GraphWorkspace.jsx","component/modals/ParentModal.jsx","component/modals/GraphCompDetails.jsx","toolbarActions/toolbarList.js","component/HeaderComps.jsx","component/Header.jsx","component/modals/ProjectDetails.jsx","component/modals/ShareModal.jsx","component/CodeEdit.jsx","component/modals/Settings.jsx","component/File-drag-drop.jsx","component/modals/History.jsx","component/fileBrowser.jsx","component/modals/FileEdit.jsx","App.jsx","serviceWorkerRegistration.js","reportWebVitals.js","index.jsx","graph-builder/calculations/bending-dist-weight.js","config/cytoscape-style.js","config/cytoscape-options.js","graph-builder/graph-actions.js"],"names":["zealit","require","$$typeof","Model_Open_Create_Node","Model_Open_Create_Edge","Model_Open_Update_Edge","Model_Open_Update_Node","Model_Close","ELE_UNSELECTED","ELE_SELECTED","TURN_DRAW","SET_ZOOM","SET_PROJECT_DETAILS","SET_UNDO","SET_REDO","ADD_GRAPH_INSTANCE","ADD_GRAPH","ADD_GRAPH_BULK","CHANGE_TAB","REMOVE_GRAPH","NEW_GRAPH","SET_SHARE_MODAL","SET_SETTING_MODAL","SET_FILE_REF","SET_HISTORY_MODAL","SET_AUTHOR","IS_WORKFLOW_ON_SERVER","SET_CUR_INSTANCE","SET_ZOOM_LEVEL","SET_EDIT_DETAILS_MODAL","SET_NEW_GRAPH_MODAL","EDIT_TEXTFILE","NodeDetails","data","setData","submit","labelAllowed","inputRef","useCallback","node","focus","textRef","createRef","useState","widthSet","labelName","setLabelName","labelFile","setLabelFile","indexOfFile","push","useEffect","prop","width","Math","max","style","min","current","offsetWidth","label","split","className","onSubmit","height","borderRadius","shape","ref","padding","type","required","placeholder","value","onChange","e","target","slice","pop","lname","list","id","localStorageManager","getFileList","JSON","parse","map","item","index","some","substring","key","toString","includes","length","Triangle","size","color","s","parseInt","EqTriangle","borderLeft","borderBottom","borderTop","marginLeft","EdgeDetails","borderBottomWidth","thickness","borderBottomColor","backgroundColor","borderBottomStyle","NodeStyle","opacity","borderColor","borderWidth","EdgeStyle","initialState","ModelOpen","modalPayload","cb","title","submitText","Children","defaultStyle","defaultLabel","shareModal","settingsModal","editDetailsModal","newGraphModal","eleSelected","drawModeOn","undoEnabled","redoEnabled","graphs","curGraphIndex","viewHistory","authorName","isWorkflowOnServer","curGraphInstance","zoomLevel","initialGraphState","projectName","graphID","serverID","graphML","component","instance","fileHandle","fileName","reducer","state","action","T","eleSelectedPayload","payload","foundi","Date","getTime","forEach","g","i","filter","newState","fileRef","textFileModal","show","fileObj","GraphComponent","args","nodeValidator","edgeValidator","setEdgeNodeValidator","getTid","allNodes","this","cy","$","start","x","y","found","nodePos","position","getPos","tid","add","group","addAction","actionName","GA","DEL_NODE","parameters","ADD_NODE","sourceID","targetID","getById","edgesWith","edges","getEdgesBetweenNodes","dists","Set","edge","bendDistance","d","has","bendWeight","bendPoint","BendingDistanceWeight","getWeightDistance","w","getBendingD","edgeData","bendData","parseBendinDW","source","DEL_EDGE","ADD_EDGE","addEdgeWithLabel","dispatcher","edgeLabel","edgeStyle","message","validiateEdge","ok","shouldUpdateLabel","UPDATE_NODE","getStyle","UPDATE_EDGE","val","UPDATE_DATA","connectedEdges","deleteEdge","json","remove","removed","jsonEd","isNode","deleteNode","pos","emit","dim","setPos","indexOf","lastIndexOf","a","b","trim","eval","sourceLabel","getRealSourceId","targetLabel","comp","validator","getNodesEdges","nodes","undefined","err","validiateComp","GraphCanvas","reset","removeListener","setZoomUI","on","round","zoom","fit","v","elements","window","confirm","el","deleteElem","actionArr","element","superState","cytoscape","use","edgehandles","nodeEditing","Konva","gridGuide","cyOptions","container","bendNode","classes","registerEvents","initizialize","resizeToContentCueEnabled","setWidth","setHeight","isNoResizeMode","isNoControlsMode","snapToGridOnRelease","zoomDash","panGrid","preview","handlePosition","handleNodes","complete","c","addEdge","getElementById","shouldEmit","els","every","isEdge","ids","selectDeselectEventHandler","scratch","addClass","evt","ev","hasClass","CoreGraph","getBendEdgePoint","DW","addBendChange","removeClass","resetAllComp","resetAllAction","parseFloat","getCoordinate","ALL_GRAPHS","btoa","AUTHOR_NAME","allgs","localStorage","getItem","setItem","stringify","atob","saveAllgs","Array","from","addEmptyIfNot","get","save","graphContent","addGraph","serializedJson","delete","removeItem","getAllGraphs","addToFront","Garr","unshift","getAuthorName","setAuthorName","clearGraph","minZoom","GraphOption","maxZoom","marks","ZoomComp","myGraph","zoomValue","role","tabIndex","onClick","resetZoom","onKeyDown","fitZoom","setZoom","included","getGraphFun","createNode","setState","validiateNode","addNode","editElement","retMessage","updateNode","getLabel","updateEdge","downloadImg","format","saveGraphMLFile","graph","createWritable","stream","write","saveToFolder","close","saveWithoutFileHandle","alert","readFile","file","fr","FileReader","name","onload","result","getFile","readAsText","createFile","newProject","clearAll","undo","redo","openShareModal","TabBar","closeTab","stopPropagation","editCur","React","hotkeys","event","preventDefault","document","click","querySelector","bind","data-tip","data-for","place","effect","nodeML","posX","posY","actionHistory","graphml","xmlns","for","edgedefault","edgeML","lineColor","lineWidth","configuration","sx","sy","tx","ty","builder","G","edg","X","xml2js","Builder","buildObject","GraphUndoRedo","props","methodsMapped","updateData","SET_POS","SET_DIM","setDim","SET_BENDW","setBendWightDist","curActionIndex","prevPos","curPos","prevDim","curDim","prevDW","curDW","inverse","equivalent","splice","actionIdentity","sequencify","hash","md5","at","informUI","performAction","curTid","addPositionChange","addDimensionChange","obj","Object","r","keys","sort","k","PropFromArr","arr","flatenArr","flatArr","constructor","o","p","t","propFromArr","property","any","S","A","F","mapByDefault","def","parseNode","parseProps","parseEdge","parseActionML","parser","graphMlCnt","Promise","resolve","Parser","parseString","grahMLObj","grahML","parseDetails","parseActionHistory","GraphServer","config","setServerID","Boolean","Axios","post","then","res","catch","autoSaveIntervalId","saveLocalStorage","saveAs","png","full","getName","jpg","nodeID","edgeID","shouldNodeBeSaved","all","nodeJson","shouldEdgeBeSaved","edgeJson","GraphLoadSave","stringifyAction","str","graphmlBuilder","jsonifyGraph","bytes","TextEncoder","encode","blob","Blob","navigator","userAgent","options","types","description","accept","showSaveFilePicker","handle","prompt","content","parseAction","setProjectName","clearTimeout","setTimeout","graphMLParser","graphObject","loadGraphFromLocalStorage","loadJson","boundaryPoint","getEq","P1","P2","m","getX1X2","Cn","P","h","B","C","D","getY1Y2","x1","x2","dist","getClosestEllipse","y1","y2","slope","setSubQ","S1","S2","getClosestRect","abs","Infinity","TailoredGraphBuilder","connectedNodes","juncNode","TailoredGraph","calJuncNodePos","juncNodeId","incomers","unselectify","ed","sourceNode","targetNode","sourceNodeStyle","juncNodePos","getBoundaryPoint","ungrabify","addAutoMove","addEdgeWithJuncNode","tidd","juncNodes","outgoers","addEdgeWithoutJuncNode","addEdgeAction","junctionNode","n1","n2","n","union","c1","c2","values","parNode","meanNbrPosition","setOfPos","posStr","Graph","graphContainerRef","active","setInstance","useRef","setContainerDim","elToAss","offsetHeight","set","setCurStatus","addEventListener","MyGraph","forcePullFromServer","setGraphML","initialiseNewGraph","zIndex","display","GraphComp","allSavedGs","flex","flexDirection","background","ReactModal","setAppElement","Modal","closeModal","children","curClass","setCurClass","isOpen","setIsOpen","stid","setStid","contentLabel","overlayClassName","aria-hidden","ModalComp","errorMessage","setErrorMessage","ParentModal","toolbarList","text","icon","FaPlus","visibility","hotkey","FaFileImport","FaSave","saveToDisk","saveAction","FaThermometerEmpty","FaUndo","FaRedo","FaEdit","FaTrash","FaHistory","FaToggleOn","FiToggleLeft","toggleServer","FaHammer","build","FaBug","debug","FiPlay","run","FaRegTimesCircle","clear","FiStopCircle","stop","FaBomb","destroy","FiTriangle","open","FaShare","FaDownload","fn","DropDown","Icon","menuButton","FileUploader","Switcher","checked","ActionButton","fontSize","Vsep","Hsep","Space","Header","actions","replace","handler","shortcut","setHotKeys","ProjectDetails","curGraph","setProjAuthorName","authorNameE","openExisting","NewWorkflow","ShareModal","serializedGraph","setSerializedGraph","copyText","setCopyText","cond","serializeGraph","link","location","protocol","host","pathname","readOnly","clipboard","writeText","getElementsByClassName","select","CodeEdit","pre","docString","spellCheck","data-gramm_editor","SettingsModal","setNodeValidator","setEdgeValidator","getNodeValidator","getEdgeValidator","app","getElementsByTagName","cc","classList","dragEvent","dataTransfer","files","HistoryModal","curState","setcurState","historyList","setHistoryList","historyView","setHistoryView","mapActionToTrue","filterAction","setFilterAction","getLabelFromID","reverse","stringifyActionType","prefixTid","DT","date","toLocaleDateString","time","toLocaleTimeString","tempCurState","undoSingleAction","redoSingleAction","restoreState","fontWeight","par","htmlFor","listStyleType","LocalFileBrowser","dirButton","setDirButton","fileState","setFileState","handleFileInDirs","topKey","topLevel","entries","valueSubDir","kind","fileData","concat","modified","lastModified","newFeature","showDirectoryPicker","dirHandle","newFeatureFile","pickerOpts","excludeAcceptAllOption","multiple","showOpenFilePicker","webkitRelativePath","directory","webkitdirectory","disabled","onSelectFile","detailRenderer","fileRenderer","FileRenderers","TableFile","folderRenderer","FolderRenderers","TableFolder","FileEditModal","codeStuff","setCodeStuff","setFileName","saveAsSubmit","saveSubmit","newFileName","onValueChange","highlight","code","fileEx","languages","verilog","cpp","python","matlab","bash","plaintext","highlightSyntax","fontFamily","minHeight","minWidth","border","useReducer","Settings","History","FileEdit","GraphCompDetails","overflow","GraphWorkspace","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","error","console","rotate","Q","cos","sin","extraRad","PI","getRadian","tanQ","atan","selector","overlayOpacity","textValign","textHalign","curveStyle","targetArrowShape","targetArrowColor","segmentDistances","segmentWeights","edgeDistances","lineStyle","edgeTextRotation","textBackgroundOpacity","textBackgroundColor","textBackgroundShape","textBorderColor","textBorderWidth","textBorderOpacity","borderOpacity","overlayColor","overlayPadding","zoomingEnabled","userZoomingEnabled"],"mappings":"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","file":"static/js/main.967439a7.chunk.js","sourcesContent":["const zealit = require('zealit');\n\nconst actionType = {\n    $$typeof: '',\n    Model_Open_Create_Node: 'OpenModal_CreateNode',\n    Model_Open_Create_Edge: 'OpenModal_CreateEdge',\n    Model_Open_Update_Edge: 'OpenModal_UpdateEdge',\n    Model_Open_Update_Node: 'OpenModal_UpdateNode',\n    Model_Close: 'CloseModal',\n    ELE_UNSELECTED: 'ELE_UNSELECTED',\n    ELE_SELECTED: 'ELE_SELECTED',\n    TURN_DRAW: 'TURN_DRAW',\n    SET_ZOOM: 'SET_ZOOM',\n    SET_PROJECT_DETAILS: 'SET_PROJECT_DETAILS',\n    SET_UNDO: 'SET_UNDO',\n    SET_REDO: 'SET_REDO',\n    ADD_GRAPH_INSTANCE: 'ADD_GRAPH_INSTANCE',\n    ADD_GRAPH: 'ADD_GRAPH',\n    ADD_GRAPH_BULK: 'ADD_GRAPH_BULK',\n    CHANGE_TAB: 'CHANGE_TAB',\n    REMOVE_GRAPH: 'REMOVE_GRAPH',\n    NEW_GRAPH: 'NEW_GRAPH',\n    SET_SHARE_MODAL: 'SET_SHARE_MODAL',\n    SET_SETTING_MODAL: 'SET_SETTING_MODAL',\n    SET_FILE_REF: 'SET_FILE_REF',\n    SET_HISTORY_MODAL: 'SET_HISTORY_MODAL',\n    SET_AUTHOR: 'SET_AUTHOR',\n    IS_WORKFLOW_ON_SERVER: 'IS_WORKFLOW_ON_SERVER',\n    SET_CUR_INSTANCE: 'SET_CUR_INSTANCE',\n    SET_ZOOM_LEVEL: 'SET_ZOOM_LEVEL',\n    SET_EDIT_DETAILS_MODAL: 'SET_EDIT_DETAILS_MODAL',\n    SET_NEW_GRAPH_MODAL: 'SET_NEW_GRAPH_MODAL',\n    EDIT_TEXTFILE: 'EDIT_TEXTFILE',\n};\n\nexport default zealit(actionType);\n","import React, {\n    useCallback, useEffect, useState, createRef,\n} from 'react';\nimport './nodeDetails.css';\n// import ColorBox from './ColorBox';\nimport localStorageManager from '../../graph-builder/local-storage-manager';\n\nconst NodeDetails = ({\n    data, setData, submit, labelAllowed,\n}) => {\n    const inputRef = useCallback((node) => node && node.focus(), []);\n    const textRef = createRef();\n    const [widthSet] = useState(false);\n    const [labelName, setLabelName] = useState('');\n    const [labelFile, setLabelFile] = useState('');\n    const indexOfFile = [];\n    indexOfFile.push(0);\n\n    const setStyle = (prop) => {\n        setData({ ...data, style: { ...data.style, ...prop } });\n    };\n\n    useEffect(() => {\n        if (!widthSet) {\n            setStyle({\n                width: Math.max(data.style.width, Math.min(500, textRef.current.offsetWidth + 20)),\n            });\n        }\n    }, [!widthSet && data.label]);\n\n    useEffect(() => {\n        setLabelName(data.label.split(':')[0]);\n    }, [data.label]);\n\n    return (\n        <div className=\"nodeform\" onSubmit={submit}>\n            <div className=\"parent-div\" style={{ height: data.style.height }}>\n                <div\n                    className=\"node-div\"\n                    style={{\n                        ...data.style,\n                        borderRadius: data.style.shape === 'ellipse' ? '100%' : 0,\n                    }}\n                >\n                    <span ref={textRef}>{labelAllowed ? data.label : ''}</span>\n\n                </div>\n            </div>\n            <div className=\"form\" style={{ padding: 20 }}>\n                {/* <div> Shape</div>\n                <div>\n                    <label htmlFor=\"rectangle\">\n                        <input\n                            type=\"radio\"\n                            name=\"shape\"\n                            value=\"rectangle\"\n                            checked={data.style.shape === 'rectangle'}\n                            onChange={() => setStyle({ shape: 'rectangle' })}\n                        />\n                        Rectangle\n                    </label>\n                </div>\n                <div>\n                    <label htmlFor=\"ellipse\">\n                        <input\n                            type=\"radio\"\n                            name=\"shape\"\n                            value=\"ellipse\"\n                            checked={data.style.shape === 'ellipse'}\n                            onChange={() => setStyle({ shape: 'ellipse' })}\n                        />\n                        Ellipse\n                    </label>\n                </div>\n                <div /> */}\n\n                {labelAllowed ? <div> Label</div> : ''}\n                {labelAllowed ? (\n                    <>\n                        <input\n                            className=\"nodeLabel\"\n                            ref={inputRef}\n                            type=\"text\"\n                            required\n                            label=\"Node Label\"\n                            placeholder=\"Enter Node Label\"\n                            value={data.label.split(':')[0]}\n                            onChange={(e) => {\n                                if (e.target.value.slice(-1) !== ':') {\n                                    setLabelName(`${e.target.value}:`);\n                                    setData({ ...data, label: `${e.target.value}:${labelFile}` });\n                                } else {\n                                    setLabelName(e.target.value);\n                                    setData({ ...data, label: e.target.value + labelFile });\n                                }\n                            }}\n                        />\n\n                        <input\n                            className=\"nodeLabelFile\"\n                            type=\"text\"\n                            label=\"Node Label file\"\n                            placeholder=\"Select file\"\n                            onChange={(e) => {\n                                setLabelFile(e.target.value.split('/').pop());\n                                if (labelName) {\n                                    let lname = labelName;\n                                    if (labelName.slice(-1) !== ':') {\n                                        setLabelName(`${labelName}:`);\n                                        lname += ':';\n                                    }\n                                    setData({ ...data, label: lname + e.target.value.split('/').pop() });\n                                } else setData({ ...data, label: `:${e.target.value.split('/').pop()}` });\n                            }}\n                            list=\"files\"\n                        />\n                        <datalist id=\"files\">\n                            {\n                                localStorageManager.getFileList()\n                                    // eslint-disable-next-line max-len, prefer-arrow-callback\n                                    ? JSON.parse(localStorageManager.getFileList())\n                                        .map((item) => {\n                                            const list = [];\n                                            const acceptedTypes = ['.v', '.c', '.cpp', '.py', '.m', '.sh'];\n                                            let index;\n                                            // eslint-disable-next-line max-len\n                                            if ((acceptedTypes.some((substring) => item.key.toString().includes(substring)))) {\n                                                list.push(item.key.toString());\n                                                indexOfFile.push(indexOfFile[indexOfFile.length - 1] + 1);\n                                                index = indexOfFile[indexOfFile.length - 1] + 1;\n                                                // eslint-disable-next-line jsx-a11y/control-has-associated-label\n                                                return <option value={list} key={index} />;\n                                            }\n                                            return null;\n                                        })\n                                    : ''\n                            }\n                        </datalist>\n                    </>\n                ) : ''}\n                {/* <div> Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style.width}\n                    onChange={(e) => {\n                        setWidthSet(true);\n                        setStyle({\n                            width: Math.min(500, e.target.value),\n                        });\n                    }}\n                /> */}\n\n                {/* <div> Height</div>\n                <input\n                    type=\"number\"\n                    value={data.style.height}\n                    onChange={(e) => setStyle({ height: Math.min(200, e.target.value) })}\n                /> */}\n\n                {/* <div> Background Color</div>\n                <ColorBox\n                    color={data.style.backgroundColor}\n                    setColor={(color) => setStyle({ backgroundColor: color })}\n                    type=\"light\"\n                /> */}\n\n                {/* <div> Border Color</div>\n                <ColorBox\n                    color={data.style.borderColor}\n                    setColor={(color) => setStyle({ borderColor: color })}\n                    type=\"dark\"\n                /> */}\n\n                {/* <div> Border Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style.borderWidth}\n                    onChange={(e) => setStyle({ borderWidth: Math.min(30, e.target.value) })}\n                /> */}\n                {/* <div> Opacity</div>\n                <input\n                    type=\"number\"\n                    step=\".01\"\n                    value={data.style.opacity}\n                    onChange={(e) => setStyle({ opacity: Math.min(1, Math.max(0, e.target.value)) })}\n                /> */}\n            </div>\n        </div>\n    );\n};\n\nexport default NodeDetails;\n","import React, { useCallback } from 'react';\n// import ColorBox from './ColorBox';\nimport './edgeDetails.css';\n\nconst Triangle = ({ size, color }) => {\n    const s = parseInt(size, 10) * 5;\n    const EqTriangle = {\n        borderLeft: `${0.8666 * s}px solid ${color}`,\n        borderBottom: `${s / 2}px solid transparent`,\n        borderTop: `${s / 2}px solid transparent`,\n        marginLeft: -1,\n    };\n    return (\n        <div style={EqTriangle} />\n    );\n};\n\nconst EdgeDetails = ({\n    data, setData, submit, labelAllowed,\n}) => {\n    // const setStyle = (prop) => setData({ ...data, style: { ...data.style, ...prop } });\n    const inputRef = useCallback((node) => node && node.focus(), []);\n    // const RadioBtn = ({ name, shape }) => (\n    //     <label htmlFor=\"ellipse\">\n    //         <input\n    //             type=\"radio\"\n    //             name=\"shape\"\n    //             value={shape}\n    //             checked={data.style.shape === shape}\n    //             onChange={() => setStyle({ shape })}\n    //         />\n    //         {name}\n    //     </label>\n    // );\n\n    return (\n        <div className=\"edgeform\" onSubmit={submit}>\n            <div className=\"par-div\">\n                <div\n                    className=\"edge-div\"\n                    style={{\n                        borderBottomWidth: data.style.thickness,\n                        borderBottomColor: data.style.backgroundColor,\n                        borderBottomStyle: data.style.shape,\n                    }}\n                />\n                <Triangle size={data.style.thickness} color={data.style.backgroundColor} />\n                <div className=\"label\">{data.label}</div>\n            </div>\n            <div className=\"form\">\n                {labelAllowed ? <div> Label</div> : ''}\n                {labelAllowed ? (\n                    <input\n                        ref={inputRef}\n                        className=\"span-rest edgeLabel\"\n                        type=\"text\"\n                        required\n                        label=\"Edge Label\"\n                        value={data.label}\n                        placeholder=\"Enter Edge Label\"\n                        onChange={(e) => setData({ ...data, label: `${e.target.value}` })}\n                    />\n                ) : ''}\n                {/* <div> Shape</div>\n                <div className=\"span-rest hascheckbox\">\n                    <div><RadioBtn name=\"Solid\" shape=\"solid\" /></div>\n                    <div><RadioBtn name=\"Dotted\" shape=\"dotted\" /></div>\n                    <div><RadioBtn name=\"Dashed\" shape=\"dashed\" /></div>\n                </div>\n                <div> Thickness</div>\n                <input\n                    type=\"number\"\n                    value={data.style.thickness}\n                    onChange={(e) => setStyle({ thickness: Math.max(0, Math.min(20, e.target.value)) })}\n                />\n                <div> Background Color</div>\n                <ColorBox\n                    color={data.style.backgroundColor}\n                    setColor={(color) => setStyle({ backgroundColor: color })}\n                    type=\"dark\"\n                /> */}\n            </div>\n        </div>\n    );\n};\n\nexport default EdgeDetails;\n","const NodeStyle = {\n    width: 100,\n    height: 50,\n    shape: 'rectangle',\n    opacity: 1,\n    backgroundColor: '#ffcc00',\n    borderColor: '#000',\n    borderWidth: 1,\n};\n\nconst EdgeStyle = {\n    thickness: 1,\n    backgroundColor: null,\n    shape: 'solid',\n};\n\nexport { NodeStyle, EdgeStyle };\n","const initialState = {\n    ModelOpen: false,\n    modalPayload: {\n        cb: () => {},\n        title: '',\n        submitText: '',\n        Children: '',\n        defaultStyle: {},\n        defaultLabel: '',\n        labelAllowed: null,\n    },\n    shareModal: false,\n    settingsModal: false,\n    editDetailsModal: false,\n    newGraphModal: false,\n\n    eleSelected: false,\n    drawModeOn: true,\n    undoEnabled: false,\n    redoEnabled: false,\n    graphs: [],\n    curGraphIndex: 0,\n    viewHistory: false,\n    authorName: '',\n    isWorkflowOnServer: false,\n    curGraphInstance: null,\n    zoomLevel: 100,\n};\n\nconst initialGraphState = {\n    projectName: '',\n    graphID: null,\n    serverID: null,\n    graphML: null,\n\n    component: null,\n    instance: null,\n    id: null,\n    fileHandle: null,\n    fileName: null,\n};\n\nexport { initialState, initialGraphState };\n","import T from './actionType';\nimport NodeDetails from '../component/modals/NodeDetails';\nimport EdgeDetails from '../component/modals/EdgeDetails';\nimport { NodeStyle, EdgeStyle } from '../config/defaultStyles';\nimport { initialGraphState } from './initialState';\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n    case T.Model_Open_Create_Node:\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Create Node',\n                submitText: 'Create Node',\n                Children: NodeDetails,\n                defaultStyle: NodeStyle,\n                defaultLabel: '',\n                labelAllowed: true,\n                cb: action.cb,\n            },\n        };\n    case T.Model_Open_Create_Edge:\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Create Edge',\n                submitText: 'Create Edge',\n                Children: EdgeDetails,\n                defaultStyle: EdgeStyle,\n                defaultLabel: '',\n                labelAllowed: true,\n                cb: action.cb,\n            },\n        };\n    case T.Model_Open_Update_Node: {\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Edit Node',\n                submitText: 'Edit Node',\n                Children: NodeDetails,\n                defaultStyle: action.style,\n                defaultLabel: action.label,\n                labelAllowed: action.labelAllowed,\n                cb: action.cb,\n            },\n        };\n    }\n    case T.Model_Open_Update_Edge: {\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Edit Edge',\n                submitText: 'Edit Edge',\n                Children: EdgeDetails,\n                defaultStyle: action.style,\n                defaultLabel: action.label,\n                labelAllowed: action.labelAllowed,\n                cb: action.cb,\n            },\n        };\n    }\n    case T.Model_Close: return { ...state, ModelOpen: false };\n    case T.ELE_SELECTED: return { ...state, eleSelected: true, eleSelectedPayload: action.payload };\n    case T.ELE_UNSELECTED: return { ...state, eleSelected: false };\n    case T.TURN_DRAW: return { ...state, drawModeOn: action.payload };\n\n    case T.SET_UNDO: return { ...state, undoEnabled: action.payload };\n    case T.SET_REDO: return { ...state, redoEnabled: action.payload };\n\n    case T.ADD_GRAPH: {\n        let foundi = -1;\n        const graphID = action.payload.graphID || new Date().getTime().toString();\n        state.graphs.forEach((g, i) => {\n            if ((g.graphID && g.graphID === graphID) || (g.serverID && g.serverID === action.payload.serverID)) {\n                foundi = i;\n            }\n        });\n        if (foundi !== -1) {\n            return { ...state, newGraphModal: false, curGraphIndex: foundi };\n        }\n        return {\n            ...state,\n            newGraphModal: false,\n            curGraphIndex: state.graphs.length,\n            graphs: [\n                ...state.graphs,\n                {\n                    ...initialGraphState,\n                    projectName: action.payload.projectName,\n                    graphID,\n                    serverID: action.payload.serverID,\n                    graphML: action.payload.graphML,\n                    fileHandle: action.payload.fileHandle || null,\n                    fileName: action.payload.fileName,\n                },\n            ],\n        };\n    }\n    case T.ADD_GRAPH_BULK: {\n        return { ...state, graphs: [...state.graphs, ...action.payload] };\n    }\n    case T.SET_CUR_INSTANCE: {\n        return { ...state, curGraphInstance: action.payload };\n    }\n    case T.CHANGE_TAB: return { ...state, curGraphIndex: action.payload };\n\n    case T.NEW_GRAPH: return { ...state, newGraphModal: true };\n    case T.REMOVE_GRAPH: return {\n        ...state,\n        graphs: state.graphs.filter((e, i) => i !== action.payload),\n        curGraphIndex: state.curGraphIndex < action.payload\n            ? state.curGraphIndex\n            : Math.max(0, state.curGraphIndex - 1),\n    };\n\n    case T.SET_PROJECT_DETAILS: {\n        const newState = { ...state };\n        newState.graphs = newState.graphs.map((g) => (\n            g.graphID === action.payload.graphID ? { ...g, [action.payload.type]: action.payload.value }\n                : g\n        ));\n        return { ...newState };\n    }\n\n    case T.SET_SHARE_MODAL: {\n        return { ...state, shareModal: action.payload };\n    }\n\n    case T.SET_SETTING_MODAL: {\n        return { ...state, settingsModal: action.payload };\n    }\n\n    case T.SET_FILE_REF: {\n        return { ...state, fileRef: action.payload };\n    }\n\n    case T.SET_HISTORY_MODAL: {\n        return { ...state, viewHistory: action.payload };\n    }\n\n    case T.SET_AUTHOR: {\n        return { ...state, authorName: action.payload };\n    }\n\n    case T.IS_WORKFLOW_ON_SERVER: {\n        return { ...state, isWorkflowOnServer: action.payload };\n    }\n    case T.SET_ZOOM_LEVEL: {\n        return { ...state, zoomLevel: action.payload };\n    }\n    case T.SET_EDIT_DETAILS_MODAL: {\n        return { ...state, editDetailsModal: action.payload };\n    }\n    case T.SET_NEW_GRAPH_MODAL: {\n        return { ...state, newGraphModal: action.payload };\n    }\n\n    case T.EDIT_TEXTFILE: {\n        return {\n            ...state,\n            textFileModal: action.payload.show,\n            fileObj: action.payload.fileObj,\n            fileHandle: action.payload.fileHandle,\n        };\n    }\n\n    default:\n        return state;\n    }\n};\nexport default reducer;\n","import BendingDistanceWeight from '../calculations/bending-dist-weight';\nimport GA from '../graph-actions';\nimport { actionType as T } from '../../reducer';\nimport GraphCanvas from './2-canvas';\n\nclass GraphComponent extends GraphCanvas {\n    getTid;\n\n    nodeValidator;\n\n    edgeValidator;\n\n    addAction;\n\n    getRealSourceId;\n\n    constructor(...args) {\n        super(...args);\n        const [,,,,, nodeValidator, edgeValidator] = args;\n        this.setEdgeNodeValidator({ nodeValidator, edgeValidator });\n        this.getTid = () => new Date().getTime();\n    }\n\n    getPos() {\n        const allNodes = this.cy.$('node');\n        const start = { x: 100, y: 100 };\n        let found = true;\n        while (found) {\n            found = false;\n            for (let i = 0; i < allNodes.length; i += 1) {\n                const nodePos = allNodes[i].position();\n                found = found || (nodePos.x === start.x && nodePos.y === start.y);\n            }\n            if (found) {\n                start.x += 10;\n                start.y += 10;\n            }\n        }\n        return start;\n    }\n\n    addNode(label, style, type = 'ordin', position = this.getPos(),\n        data = {}, id, tid = this.getTid()) {\n        const node = this.cy.add({\n            group: 'nodes',\n            data: {\n                ...data, id, label, type, style,\n            },\n            position,\n        });\n        this.addAction(\n            { actionName: GA.DEL_NODE, parameters: [node.id()] },\n            {\n                actionName: GA.ADD_NODE,\n                parameters: [label, style, type, position, data, node.id()],\n            },\n            tid,\n        );\n        return node;\n    }\n\n    getEdgesBetweenNodes(sourceID, targetID) {\n        return this.getById(sourceID).edgesWith(this.getById(targetID));\n    }\n\n    getBendingD(sourceID, targetID) {\n        const edges = this.getEdgesBetweenNodes(sourceID, targetID);\n        const dists = new Set();\n        edges.forEach((edge) => {\n            if (targetID === edge.target().id()) dists.add(edge.data('bendData').bendDistance);\n            else dists.add(-edge.data('bendData').bendDistance);\n        });\n        for (let d = 0; ;d += 20) {\n            if (!dists.has(d)) return d;\n            if (!dists.has(-d)) return -d;\n        }\n    }\n\n    parseBendinDW({\n        sourceID, targetID, type, bendWeight, bendDistance, bendPoint,\n    }) {\n        if (type !== 'ordin') return { bendDistance: 0, bendWeight: 0 };\n        if (bendDistance && bendWeight) return { bendDistance, bendWeight };\n        if (bendPoint) {\n            const { x, y } = bendPoint;\n            const { d, w } = BendingDistanceWeight.getWeightDistance(\n                { x, y }, this.getById(sourceID).position(), this.getById(targetID).position(),\n            );\n            return { bendDistance: d, bendWeight: w };\n        }\n        return { bendDistance: this.getBendingD(sourceID, targetID), bendWeight: 0.5 };\n    }\n\n    addEdgeWithLabel(edgeData, tid = this.getTid()) {\n        const { type = 'ordin' } = edgeData;\n        const bendData = this.parseBendinDW({ ...edgeData, ...edgeData.bendData });\n        const edge = this.cy.add({\n            group: 'edges',\n            data: {\n                ...edgeData, source: edgeData.sourceID, target: edgeData.targetID, type, bendData,\n            },\n        });\n        this.addAction(\n            { actionName: GA.DEL_EDGE, parameters: [edge.id()] },\n            { actionName: GA.ADD_EDGE, parameters: [{ ...edgeData, id: edge.id() }] },\n            tid,\n        );\n\n        return edge;\n    }\n\n    addEdge(edgeData, tid = this.getTid()) {\n        if ((edgeData.type && edgeData.type !== 'ordin') || edgeData.label) {\n            return this.addEdgeWithLabel({ ...edgeData, type: edgeData.type || 'ordin' }, tid);\n        }\n        this.dispatcher({\n            type: T.Model_Open_Create_Edge,\n            cb: (edgeLabel, edgeStyle) => {\n                const message = this.validiateEdge(edgeLabel, edgeStyle,\n                    edgeData.targetID, edgeData.targetID, null, 'New');\n                if (message.ok) this.addEdgeWithLabel({ ...edgeData, type: edgeData.type || 'ordin' }, tid);\n                return message;\n            },\n        });\n        return undefined;\n    }\n\n    getStyle(id) {\n        return this.getById(id).data('style');\n    }\n\n    getLabel(id) {\n        return this.getById(id).data('label') || this.getById(id).data('label');\n    }\n\n    updateNode(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        this.addAction(\n            {\n                actionName: GA.UPDATE_NODE,\n                parameters: [id, this.getStyle(id), this.getById(id).data('label'), shouldUpdateLabel],\n            },\n            { actionName: GA.UPDATE_NODE, parameters: [id, style, label, shouldUpdateLabel] },\n            tid,\n        );\n        if (shouldUpdateLabel) this.getById(id).data('label', label);\n        this.getById(id).data('style', style);\n    }\n\n    updateEdge(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        this.addAction(\n            {\n                actionName: GA.UPDATE_EDGE,\n                parameters: [id, this.getStyle(id), this.getById(id).data('label'), shouldUpdateLabel],\n            },\n            { actionName: GA.UPDATE_EDGE, parameters: [id, style, label, shouldUpdateLabel] },\n            tid,\n        );\n        if (shouldUpdateLabel) this.getById(id).data('label', label);\n        this.getById(id).data('style', style);\n    }\n\n    updateData(id, key, val, tid = this.getTid()) {\n        this.addAction(\n            { actionName: GA.UPDATE_DATA, parameters: [id, key, this.getById(id).data(key)] },\n            { actionName: GA.UPDATE_DATA, parameters: [id, key, val] }, tid,\n        );\n        this.getById(id).data(key, val);\n        return this;\n    }\n\n    deleteNode(id, tid = this.getTid()) {\n        const node = this.getById(id);\n        node.connectedEdges('[type=\"ordin\"]').forEach((edge) => this.deleteEdge(edge.id(), tid));\n        node.connectedEdges().forEach((edge) => this.deleteEdge(edge.id(), tid));\n        this.addAction(\n            {\n                actionName: GA.ADD_NODE,\n                parameters: [\n                    node.data('label'), this.getStyle(node.id()), node.data('type'),\n                    node.position(), node.json().data, id,\n                ],\n            },\n            { actionName: GA.DEL_NODE, parameters: [id] }, tid,\n        );\n        node.remove();\n    }\n\n    deleteEdge(id, tid = this.getTid()) {\n        if (this.getById(id).length === 0 || this.getById(id).removed()) return;\n        const jsonEd = this.getById(id).json();\n        this.addAction(\n            {\n                actionName: GA.ADD_EDGE,\n                parameters: [{\n                    ...jsonEd.data, sourceID: jsonEd.data.source, targetID: jsonEd.data.target,\n                }],\n            },\n            { actionName: GA.DEL_EDGE, parameters: [id] }, tid,\n        );\n        this.getById(id).remove();\n    }\n\n    deleteElem(id, tid = this.getTid()) {\n        if (this.getById(id).isNode()) return this.deleteNode(id, tid);\n        return this.deleteEdge(id, tid);\n    }\n\n    setPos(id, pos) {\n        this.getById(id).position(pos);\n        this.getById(id).emit('moved');\n    }\n\n    setDim(id, dim, pos) {\n        const style = this.getById(id).data('style');\n        this.getById(id).data('style', { ...style, height: dim.height, width: dim.width });\n        this.setPos(id, pos);\n    }\n\n    getNodeValidator() {\n        const [a, b] = [this.nodeValidator.toString().indexOf('{'), this.nodeValidator.toString().lastIndexOf('}')];\n        return this.nodeValidator.toString().slice(a + 1, b).trim();\n    }\n\n    getEdgeValidator() {\n        const [a, b] = [this.edgeValidator.toString().indexOf('{'), this.edgeValidator.toString().lastIndexOf('}')];\n        return this.edgeValidator.toString().slice(a + 1, b).trim();\n    }\n\n    setEdgeNodeValidator({ nodeValidator, edgeValidator }) {\n        // eslint-disable-next-line no-eval\n        this.nodeValidator = eval(nodeValidator);\n        // eslint-disable-next-line no-eval\n        this.edgeValidator = eval(edgeValidator);\n    }\n\n    getNodesEdges() {\n        const nodes = this.cy.$('node[type=\"ordin\"]').map((node) => ({\n            label: node.data('label'),\n            style: node.data('style'),\n            id: node.data('id'),\n        }));\n        const edges = this.cy.$('edge[type=\"ordin\"]').map((edge) => ({\n            label: edge.data('label'),\n            sourceLabel: this.getById(this.getRealSourceId(edge.source().id())).data('label'),\n            targetLabel: edge.target().data('label'),\n            style: edge.data('style'),\n            id: edge.data('id'),\n        }));\n        return [nodes, edges];\n    }\n\n    validiateComp(comp, validator, type) {\n        const [nodes, edges] = this.getNodesEdges();\n        try {\n            const message = validator(comp, nodes, edges, type);\n            if (message && message.ok !== undefined && message.err !== undefined) return message;\n            return { ok: false, err: 'Invalid return format from the defined validator.' };\n        } catch (e) {\n            return { ok: false, err: `Error raised at validator: ${e.message}` };\n        }\n    }\n\n    validiateNode(label, style, id, type) {\n        if (id) {\n            const node = this.getById(id);\n            return this.validiateComp({\n                label: label || node.data('label'),\n                style: style || node.data('style'),\n                id,\n            }, this.nodeValidator, type);\n        }\n        return this.validiateComp({ label, style, id }, this.nodeValidator, type);\n    }\n\n    validiateEdge(label, style, sourceID, targetID, id, type) {\n        if (id) {\n            const edge = this.getById(id);\n            return this.validiateComp({\n                label: label || edge.data('label'),\n                style: style || edge.data('style'),\n                sourceLabel: this.getById(this.getRealSourceId(edge.source().id())).data('label'),\n                targetLabel: edge.target().data('label'),\n                id,\n            }, this.edgeValidator, type);\n        }\n        return this.validiateComp({\n            label,\n            style,\n            sourceLabel: this.getById(this.getRealSourceId(sourceID)).data('label'),\n            targetLabel: this.getById(targetID).data('label'),\n            id,\n        }, this.edgeValidator, type);\n    }\n}\n\nexport default GraphComponent;\n","// import GraphUndoRedo from './graph-undo-redo';\nimport Core from './1-core';\nimport { actionType as T } from '../../reducer';\n\nclass GraphCanvas extends Core {\n    setZoomUI;\n\n    resetZoom() {\n        this.cy.reset();\n    }\n\n    setOnZoom(cb) {\n        this.cy.removeListener('zoom');\n        this.setZoomUI = cb;\n        this.cy.on('zoom', (e) => cb(Math.round(100 * e.target.zoom())));\n    }\n\n    fitZoom() {\n        this.cy.fit();\n    }\n\n    setZoom(v) {\n        this.cy.zoom(v / 100);\n    }\n\n    getZoom() {\n        return Math.round(this.cy.zoom() * 100);\n    }\n\n    clearAll() {\n        if (this.cy.elements().length === 0) return true;\n        // eslint-disable-next-line no-alert\n        if (!window.confirm('Do want to clear all elements?')) return false;\n        this.cy.elements().forEach((el) => this.deleteElem(el.id(), 0));\n        this.actionArr = [];\n        this.cy.emit('graph-modified');\n        return true;\n    }\n\n    resetAllComp() {\n        this.cy.elements().remove();\n    }\n\n    setCurStatus() {\n        super.setCurStatus();\n        this.dispatcher({ type: T.SET_ZOOM_LEVEL, payload: Math.round(this.cy.zoom() * 100) });\n    }\n}\n\nexport default GraphCanvas;\n","import cytoscape from 'cytoscape';\nimport edgehandles from 'cytoscape-edgehandles';\nimport gridGuide from 'cytoscape-grid-guide';\nimport Konva from 'konva';\nimport nodeEditing from 'cytoscape-node-editing';\nimport $ from 'jquery';\nimport cyOptions from '../../config/cytoscape-options';\nimport BendingDistanceWeight from '../calculations/bending-dist-weight';\nimport { actionType as T } from '../../reducer';\n\nclass CoreGraph {\n    dispatcher;\n\n    superState;\n\n    id;\n\n    projectName;\n\n    cy;\n\n    bendNode;\n\n    constructor(id, element, dispatcher, superState, projectName) {\n        if (dispatcher) this.dispatcher = dispatcher;\n        if (superState) this.superState = superState;\n        if (typeof cytoscape('core', 'edgehandles') !== 'function') {\n            cytoscape.use(edgehandles);\n        }\n        if (typeof cytoscape('core', 'nodeEditing') !== 'function') {\n            nodeEditing(cytoscape, $, Konva);\n        }\n        if (typeof cytoscape('core', 'gridGuide') !== 'function') {\n            gridGuide(cytoscape);\n        }\n        // if (cy) this.cy = cy;\n        this.cy = cytoscape({ ...cyOptions, container: element });\n        this.id = id;\n        this.projectName = projectName;\n        this.cy.emit('graph-modified');\n        this.bendNode = this.cy.add(\n            { group: 'nodes', data: { type: 'bend' }, classes: ['hidden'] },\n        );\n        this.registerEvents();\n        this.cy.emit('graph-modified');\n        this.initizialize();\n    }\n\n    initizialize() {\n        this.cy.nodeEditing({\n            resizeToContentCueEnabled: () => false,\n            setWidth(node, width) {\n                node.data('style', { ...node.data('style'), width });\n            },\n            setHeight(node, height) {\n                node.data('style', { ...node.data('style'), height });\n            },\n            isNoResizeMode(node) { return node.data('type') !== 'ordin'; },\n            isNoControlsMode(node) { return node.data('type') !== 'ordin'; },\n        });\n\n        this.cy.gridGuide({\n            snapToGridOnRelease: false,\n            zoomDash: true,\n            panGrid: true,\n        });\n        this.cy.edgehandles({\n            preview: false,\n            handlePosition() {\n                return 'none';\n            },\n            handleNodes: 'node[type = \"ordin\"],node[type = \"special\"]',\n            complete: (a, b, c) => { c.remove(); this.addEdge({ sourceID: a.id(), targetID: b.id() }); },\n        });\n    }\n\n    getById(x) {\n        return this.cy.getElementById(x);\n    }\n\n    getLabelFromID(x) {\n        return this.getById(x).data('label') || '**Deleted El**';\n    }\n\n    set({\n        cy, dispatcher, superState, projectName,\n    }) {\n        if (dispatcher) this.dispatcher = dispatcher;\n        if (superState) this.superState = superState;\n        if (cy) this.cy = cy;\n        if (projectName) this.projectName = projectName;\n    }\n\n    setProjectName(projectName, shouldEmit = true) {\n        this.projectName = projectName;\n        if (shouldEmit) {\n            this.dispatcher({\n                type: T.SET_PROJECT_DETAILS,\n                payload: {\n                    value: projectName,\n                    graphID: this.id,\n                    type: 'projectName',\n                },\n            });\n        }\n        this.cy.emit('graph-modified');\n    }\n\n    setServerID(serverID, shouldEmit = true) {\n        this.serverID = serverID;\n        if (shouldEmit) {\n            this.dispatcher({\n                type: T.SET_PROJECT_DETAILS,\n                payload: {\n                    value: serverID,\n                    graphID: this.id,\n                    type: 'serverID',\n                },\n            });\n        }\n        this.cy.emit('graph-modified');\n    }\n\n    selectDeselectEventHandler() {\n        const els = this.cy.$(':selected');\n        if (els.length === 0) { return this.dispatcher({ type: T.ELE_UNSELECTED }); }\n        let type;\n        if (els.every((e) => e.isNode())) type = 'NODE';\n        else if (els.every((e) => e.isEdge())) type = 'EDGE';\n        else type = 'MIX';\n        const ids = els.map((e) => e.data('id'));\n        return this.dispatcher({\n            type: T.ELE_SELECTED,\n            payload: {\n                ids, type,\n            },\n        });\n    }\n\n    registerEvents() {\n        this.cy.on('select unselect', () => this.selectDeselectEventHandler());\n        this.cy.on('grab', 'node[type = \"ordin\"]', (e) => {\n            e.target.forEach((node) => {\n                node.scratch('position', { ...node.position() });\n            });\n        });\n\n        this.cy.on('nodeediting.resizestart', (e, type, node) => {\n            node.scratch('height', node.data('style').height);\n            node.scratch('width', node.data('style').width);\n            node.scratch('position', { ...node.position() });\n        });\n\n        this.cy.on('hide-bend remove', () => {\n            this.bendNode.removeListener('drag grab dragfree'); this.bendNode.addClass('hidden');\n        });\n\n        this.cy.on('grabon', (evt) => (evt.target[0].data('type') !== 'bend' ? this.cy.emit('hide-bend') : 0));\n        this.cy.on('freeon', (evt) => (evt.target[0].data('type') !== 'bend' ? this.cy.emit('show-bend') : 0));\n\n        this.cy.on('click tap', (ev) => {\n            if (ev.target === this.cy) {\n                this.cy.emit('hide-bend');\n                this.cy.$('.eh-handle').remove();\n            }\n        });\n        this.cy.on('select unselect show-bend', () => {\n            const el = this.cy.$(':selected');\n            if (el.length !== 1 || !el[0].isEdge()) this.cy.emit('hide-bend');\n            return el.emit('bend-edge');\n        });\n        this.cy.on('mouseover', 'edge', (ev) => {\n            ev.target.emit('bend-edge');\n        });\n\n        this.cy.on('bend-edge', 'edge', (ev) => {\n            if (!this.bendNode.hasClass('hidden')) this.cy.emit('hide-bend');\n            const el = ev.target;\n            this.bendNode.position(CoreGraph.getBendEdgePoint(el));\n            this.bendNode.on('drag', () => {\n                const DW = BendingDistanceWeight.getWeightDistance(\n                    this.bendNode.position(), el.source().position(), el.target().position(),\n                );\n                el.data('bendData', { bendDistance: DW.d, bendWeight: DW.w });\n                ev.target.emit('bending');\n            });\n            this.bendNode.on('grab', () => {\n                const node = el;\n                node.scratch('bendDistWeight', el.data('bendData'));\n            });\n            this.bendNode.on('dragfree', () => {\n                const node = el;\n                this.addBendChange(node.id(), node.scratch('bendDistWeight'), el.data('bendData'));\n            });\n            this.bendNode.removeClass('hidden');\n        });\n    }\n\n    setBendWightDist(id, DW) {\n        this.getById(id).data('bendData', DW);\n    }\n\n    static getBendEdgePoint(el) {\n        const { bendWeight, bendDistance } = el.data('bendData');\n        const w = parseFloat(bendWeight);\n        const d = parseFloat(bendDistance);\n        return BendingDistanceWeight.getCoordinate(w, d, el.source().position(), el.target().position());\n    }\n\n    setCurStatus() {\n        this.selectDeselectEventHandler();\n    }\n\n    reset() {\n        this.resetAllComp();\n        this.resetAllAction();\n    }\n}\n\nexport default CoreGraph;\n","const getSet = (ALL_GRAPHS) => {\n    if (!window.localStorage.getItem(ALL_GRAPHS)) {\n        window.localStorage.setItem(ALL_GRAPHS, window.btoa(JSON.stringify([])));\n    }\n    return new Set(JSON.parse(window.atob(window.localStorage.getItem(ALL_GRAPHS))));\n};\n\nconst localStorageManager = {\n    ALL_GRAPHS: window.btoa('ALL_GRAPHS'),\n    AUTHOR_NAME: window.btoa('AUTHOR_NAME'),\n\n    allgs: getSet(window.btoa('ALL_GRAPHS')),\n\n    saveAllgs() {\n        window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify(Array.from(this.allgs))));\n    },\n\n    addEmptyIfNot() {\n        if (!window.localStorage.getItem(this.ALL_GRAPHS)) {\n            window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify([])));\n        }\n    },\n\n    get(id) {\n        if (window.localStorage.getItem(id) === null) return null;\n        return JSON.parse(window.atob(window.localStorage.getItem(id)));\n    },\n    save(id, graphContent) {\n        this.addGraph(id);\n        const serializedJson = JSON.stringify(graphContent);\n        window.localStorage.setItem(id, window.btoa(serializedJson));\n    },\n    remove(id) {\n        if (this.allgs.delete(id)) this.saveAllgs();\n        localStorage.removeItem(id);\n    },\n    addGraph(id) {\n        if (this.allgs.has(id)) return;\n        this.allgs.add(id);\n        this.saveAllgs();\n    },\n    getAllGraphs() {\n        return JSON.parse(window.atob(window.localStorage.getItem(this.ALL_GRAPHS)));\n    },\n    addToFront(id) {\n        if (this.allgs.has(id)) return;\n        this.allgs.add(id);\n        const Garr = JSON.parse(window.atob(window.localStorage.getItem(this.ALL_GRAPHS)));\n        Garr.unshift(id);\n        window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify(Garr)));\n    },\n    getAuthorName() {\n        return localStorage.getItem(this.AUTHOR_NAME) || '';\n    },\n    setAuthorName(authorName) {\n        localStorage.setItem(this.AUTHOR_NAME, authorName);\n    },\n    clearGraph(id) {\n        window.localStorage.removeItem(id);\n    },\n    getFileList() {\n        return localStorage.getItem('fileList') || '';\n    },\n};\nexport default localStorageManager;\n","import Slider from 'rc-slider';\nimport React from 'react';\nimport { BiReset, BiRectangle } from 'react-icons/bi';\nimport 'rc-slider/assets/index.css';\nimport './zoomSetter.css';\nimport GraphOption from '../config/cytoscape-options';\nimport { actionType as T } from '../reducer';\n\nconst { minZoom, maxZoom } = GraphOption;\nconst marks = {};\n\nconst ZoomComp = ({ superState, dispatcher }) => {\n    const myGraph = superState.curGraphInstance;\n    if (!myGraph) return <></>;\n    const zoomValue = superState.zoomLevel;\n    return (\n        <div>\n            <div className=\"zoom-comp\">\n                <div\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"zoom-box zoom-btn\"\n                    onClick={() => myGraph.resetZoom()}\n                    onKeyDown={(ev) => ev.key === ' ' && (myGraph.resetZoom())}\n                >\n                    <BiReset />\n\n                </div>\n                <div\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"zoom-box zoom-btn\"\n                    onClick={() => myGraph.fitZoom()}\n                    onKeyDown={(ev) => ev.key === ' ' && (myGraph.resetZoom())}\n                >\n                    <BiRectangle />\n\n                </div>\n                <div className=\"zoom-box zoom-value\">\n                    {zoomValue}\n                    %\n                </div>\n                <div className=\"slider\">\n                    <Slider\n                        min={100 * minZoom}\n                        max={100 * maxZoom}\n                        marks={marks}\n                        onChange={\n                            (value) => {\n                                myGraph.setZoom(value);\n                                dispatcher({ type: T.SET_ZOOM_LEVEL, payload: value });\n                            }\n                        }\n                        included={false}\n                        value={zoomValue}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ZoomComp;\n","import { actionType as T } from '../reducer';\n\nconst getGraphFun = (superState) => superState.curGraphInstance;\n\nconst createNode = (state, setState) => {\n    setState({\n        type: T.Model_Open_Create_Node,\n        cb: (label, style) => {\n            const message = getGraphFun(state).validiateNode(label, style, null, 'New');\n            if (message.ok) getGraphFun(state).addNode(label, style);\n            return message;\n        },\n    });\n};\n\nconst editElement = (state, setState) => {\n    const shouldUpdateLabel = state.eleSelectedPayload.ids.length === 1;\n    const tid = new Date().getTime();\n    if (state.eleSelectedPayload.type === 'NODE') {\n        setState({\n            type: T.Model_Open_Update_Node,\n            cb: (label, style) => {\n                const retMessage = { ok: true, err: null };\n                state.eleSelectedPayload.ids.forEach((id) => {\n                    const message = getGraphFun(state).validiateNode(\n                        shouldUpdateLabel ? label : null, style, id, 'Update',\n                    );\n                    retMessage.ok = retMessage.ok && message.ok;\n                    retMessage.err = retMessage.err || message.err;\n                });\n                if (retMessage.ok) {\n                    state.eleSelectedPayload.ids.forEach(\n                        (id) => getGraphFun(state).updateNode(id, style, label, shouldUpdateLabel, tid),\n                    );\n                }\n                return retMessage;\n            },\n            labelAllowed: shouldUpdateLabel,\n            label: getGraphFun(state).getLabel(state.eleSelectedPayload.ids[0]),\n            style: getGraphFun(state).getStyle(state.eleSelectedPayload.ids[0]),\n        });\n    }\n    if (state.eleSelectedPayload.type === 'EDGE') {\n        setState({\n            type: T.Model_Open_Update_Edge,\n            cb: (label, style) => {\n                const retMessage = { ok: true, err: null };\n                state.eleSelectedPayload.ids.forEach((id) => {\n                    const message = getGraphFun(state).validiateEdge(\n                        shouldUpdateLabel ? label : null, style, null, null, id, 'Update',\n                    );\n                    retMessage.ok = retMessage.ok && message.ok;\n                    retMessage.err = retMessage.err || message.err;\n                });\n                if (retMessage.ok) {\n                    state.eleSelectedPayload.ids.forEach(\n                        (id) => getGraphFun(state).updateEdge(id, style, label, shouldUpdateLabel, tid),\n                    );\n                }\n                return retMessage;\n            },\n            labelAllowed: shouldUpdateLabel,\n            label: getGraphFun(state).getLabel(state.eleSelectedPayload.ids[0]),\n            style: getGraphFun(state).getStyle(state.eleSelectedPayload.ids[0]),\n        });\n    }\n};\n\nconst deleteElem = (state) => {\n    const tid = new Date().getTime();\n    state.eleSelectedPayload.ids.forEach((id) => getGraphFun(state).deleteElem(id, tid));\n    // eslint-disable-next-line\n    state.eleSelectedPayload.type = 'MIX';\n};\n\nconst downloadImg = (state, setState, format) => {\n    getGraphFun(state).downloadImg(format);\n};\n\nconst saveAction = (state) => {\n    getGraphFun(state).saveToDisk();\n};\n\nasync function saveGraphMLFile(state) {\n    if (state.curGraphInstance) {\n        const graph = state.graphs[state.curGraphIndex];\n        if (graph.fileHandle) {\n            const stream = await graph.fileHandle.createWritable();\n            await stream.write(getGraphFun(state).saveToFolder());\n            await stream.close();\n        } else if (graph.fileHandle === null) {\n            getGraphFun(state).saveWithoutFileHandle();\n        } else {\n            // eslint-disable-next-line no-alert\n            alert('Switch to Edge/Chrome!');\n        }\n    } else {\n        // eslint-disable-next-line no-alert\n        alert('Switch to Edge/Chrome!');\n    }\n}\n\nconst readFile = async (state, setState, file, fileHandle) => {\n    if (file) {\n        const fr = new FileReader();\n        const projectName = file.name;\n        if (file.name.split('.').pop() === 'graphml') {\n            fr.onload = (x) => {\n                setState({\n                    type: T.ADD_GRAPH,\n                    payload: {\n                        projectName, graphML: x.target.result, fileHandle, fileName: file.name,\n                    },\n                });\n            };\n            if (fileHandle) fr.readAsText(await fileHandle.getFile());\n            else fr.readAsText(file);\n        }\n    }\n};\n\nconst readTextFile = (state, setState, file, fileHandle) => {\n    if (file) {\n        setState({\n            type: T.EDIT_TEXTFILE,\n            payload: { show: true, fileObj: file, fileHandle },\n        });\n    }\n};\n\nconst createFile = (state, setState) => {\n    setState({\n        type: T.EDIT_TEXTFILE,\n        payload: { show: true },\n    });\n};\n\nconst newProject = (state, setState) => {\n    setState({ type: T.NEW_GRAPH });\n};\n\nconst clearAll = (state) => {\n    getGraphFun(state).clearAll();\n};\n\nconst editDetails = (state, setState) => {\n    setState({\n        type: T.SET_EDIT_DETAILS_MODAL,\n        payload: true,\n    });\n};\n\nconst undo = (state) => {\n    if (getGraphFun(state)) getGraphFun(state).undo();\n};\nconst redo = (state) => {\n    getGraphFun(state).redo();\n};\n\nconst openShareModal = (state, setState) => {\n    setState({ type: T.SET_SHARE_MODAL, payload: true });\n};\n\nconst openSettingModal = (state, setState) => {\n    setState({ type: T.SET_SETTING_MODAL, payload: true });\n};\n\nconst viewHistory = (state, setState) => {\n    setState({ type: T.SET_HISTORY_MODAL, payload: true });\n};\n\nconst toggleServer = (state, dispatcher) => {\n    if (state.isWorkflowOnServer) {\n        dispatcher({ type: T.IS_WORKFLOW_ON_SERVER, payload: false });\n    } else {\n        dispatcher({ type: T.IS_WORKFLOW_ON_SERVER, payload: true });\n    }\n};\n\nexport {\n    createNode, editElement, deleteElem, downloadImg, saveAction, saveGraphMLFile,\n    createFile, readFile, readTextFile, newProject, clearAll, editDetails, undo, redo,\n    openShareModal, openSettingModal, viewHistory,\n    toggleServer,\n};\n","import React from 'react';\nimport {\n    MdEdit, MdClose, MdAdd,\n} from 'react-icons/md';\nimport hotkeys from 'hotkeys-js';\nimport ReactTooltip from 'react-tooltip';\nimport localStorageManager from '../graph-builder/local-storage-manager';\nimport { actionType as T } from '../reducer';\nimport { newProject, editDetails } from '../toolbarActions/toolbarFunctions';\nimport './tabBar.css';\n\nconst TabBar = ({ superState, dispatcher }) => {\n    const closeTab = (i, e) => {\n        e.stopPropagation();\n        // eslint-disable-next-line no-alert\n        if (!window.confirm('Do you confirm to close the tab? This action is irreversable.')) return;\n        localStorageManager.remove(superState.graphs[i] ? superState.graphs[i].graphID : null);\n        dispatcher({ type: T.REMOVE_GRAPH, payload: i });\n        if (!superState.curGraphIndex) {\n            dispatcher({ type: T.SET_CUR_INSTANCE, payload: null });\n        }\n    };\n    const editCur = (e) => {\n        e.stopPropagation();\n        editDetails(superState, dispatcher);\n    };\n    React.useEffect(() => {\n        hotkeys('ctrl+shift+m,command+shift+m', (event) => {\n            event.preventDefault();\n            document.getElementById('new_graph').click();\n        });\n        hotkeys('ctrl+shift+e,command+shift+e', (event) => {\n            event.preventDefault();\n            const el = document.querySelector('.tab.tab-graph.selected > .tab-act.edit');\n            if (el) el.click();\n        });\n        hotkeys('ctrl+shift+l,command+shift+l', (event) => {\n            event.preventDefault();\n            const el = document.querySelector('.tab.tab-graph.selected > .tab-act.close');\n            if (el) el.click();\n        });\n    }, []);\n\n    return (\n        <div className=\"tab-par\">\n            <button\n                className=\"tab\"\n                onClick={newProject.bind(this, superState, dispatcher)}\n                type=\"button\"\n                id=\"new_graph\"\n                data-tip=\"New Workflow Tab (Ctrl + Shift + M)\"\n            >\n                <MdAdd size={25} />\n            </button>\n            {superState.graphs.map((el, i) => (\n                <div\n                    key={el.graphID}\n                    className={`tab tab-graph ${superState.curGraphIndex === i ? 'selected' : 'none'}`}\n                    onClick={() => dispatcher({ type: T.CHANGE_TAB, payload: i })}\n                    onKeyDown={(ev) => ev.key === ' ' && dispatcher({ type: T.CHANGE_TAB, payload: i })}\n                    role=\"button\"\n                    tabIndex={0}\n                    id={`tab_${i}`}\n                >\n                    <span className=\"tab-text\">\n                        {el.fileName || el.projectName}\n                    </span>\n\n                    {superState.curGraphIndex === i ? (\n                        <button\n                            className=\"tab-act edit\"\n                            onClick={editCur}\n                            type=\"button\"\n                            data-tip=\"Edit Workflow Details (Ctrl + Shift + E)\"\n                            data-for=\"header-tab\"\n                        >\n                            <MdEdit size={16} />\n                        </button>\n                    ) : <></>}\n                    <button\n                        className=\"tab-act close\"\n                        onClick={closeTab.bind(this, i)}\n                        type=\"button\"\n                        data-tip=\"Close current Workflow (Ctrl + Shift + L)\"\n                        data-for=\"header-tab\"\n                    >\n                        <MdClose size={20} />\n                    </button>\n                    <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"solid\" id=\"header-tab\" />\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default TabBar;\n","const nodeML = ({\n  label, id, posX, posY, width, height, opacity, shape, backgroundColor, borderColor, borderWidth,\n}) => ({\n  $: {\n    id,\n  },\n  data: [\n    {\n      $: {\n        key: 'd6',\n      },\n      'y:ShapeNode': [\n        {\n          'y:Geometry': [\n            {\n              $: {\n                height,\n                width,\n                x: posX,\n                y: posY,\n              },\n            },\n          ],\n          'y:Fill': [\n            {\n              $: {\n                color: backgroundColor,\n                opacity,\n              },\n            },\n          ],\n          'y:BorderStyle': [\n            {\n              $: {\n                color: borderColor,\n                width: borderWidth,\n              },\n            },\n          ],\n          'y:NodeLabel': [label],\n          'y:Shape': [\n            {\n              $: {\n                type: shape,\n              },\n            },\n          ],\n        },\n      ],\n    },\n  ],\n});\n\nexport default nodeML;\n","const graphML = ({\n  nodes, edges, id, projectName, actionHistory, serverID, fileHandle, fileName,\n}) => ({\n  graphml: {\n    $: {\n      xmlns: 'http://graphml.graphdrawing.org/xmlns',\n      'xmlns:xsi': 'http://www.w3.org/2001/XMLSchema-instance',\n      'xsi:schemaLocation': 'http://graphml.graphdrawing.org/xmlns http://www.yworks.com/xml/schema/graphml/1.1/ygraphml.xsd',\n      'xmlns:y': 'http://www.yworks.com/xml/graphml',\n    },\n    key: [\n      {\n        $: {\n          for: 'node',\n          id: 'd6',\n          'yfiles.type': 'nodegraphics',\n        },\n      },\n      {\n        $: {\n          for: 'edge',\n          id: 'd10',\n          'yfiles.type': 'edgegraphics',\n        },\n      },\n    ],\n    graph: [\n      {\n        $: {\n          edgedefault: 'directed',\n          id,\n          projectName,\n          serverID,\n          fileHandle,\n          fileName,\n        },\n        node: nodes,\n        edge: edges,\n        actionHistory,\n      },\n    ],\n  },\n});\n\nexport default graphML;\n","const edgeML = ({\n  id, label, source, target, lineColor, lineWidth, bendPoint, type,\n}) => ({\n  $: {\n    id,\n    source,\n    target,\n  },\n  data: [\n    {\n      $: {\n        key: 'd10',\n      },\n      'y:GenericEdge': [\n        {\n          $: {\n            configuration: 'com.yworks.bpmn.Connection',\n          },\n          'y:LineStyle': [\n            {\n              $: {\n                color: lineColor,\n                width: lineWidth,\n                type,\n              },\n            },\n          ],\n          'y:Arrows': [\n            {\n              $: {\n                source: 'none',\n                target: 'delta',\n              },\n            },\n          ],\n          'y:EdgeLabel': [label],\n          'y:Path': [\n            {\n              $: {\n                sx: '0.0',\n                sy: '0.0',\n                tx: '0.0',\n                ty: '0.0',\n              },\n              'y:Point': [\n                { $: bendPoint },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n  ],\n});\n\nexport default edgeML;\n","import xml2js from 'xml2js';\nimport nodeML from './nodeML';\nimport graphML from './graphML';\nimport edgeML from './edgeML';\n\nconst builder = (G) => {\n    const nodes = G.nodes.map((node) => (nodeML({\n        label: node.label,\n        id: node.id,\n        posX: node.position.x,\n        posY: node.position.y,\n        ...node.style,\n    })));\n    const edges = G.edges.map((edg, i) => edgeML({\n        id: i,\n        label: edg.label,\n        source: edg.source,\n        target: edg.target,\n        lineColor: edg.style.backgroundColor,\n        lineWidth: edg.style.thickness,\n        bendPoint: edg.bendData.bendPoint,\n        type: edg.style.shape,\n    }));\n    const X = graphML({\n        nodes,\n        edges,\n        projectName: G.projectName,\n        id: G.id,\n        actionHistory: G.actionHistory,\n        serverID: G.serverID,\n        fileHandle: G.fileHandle,\n        fileName: G.fileName,\n    });\n    const xml = new xml2js.Builder().buildObject(X);\n    return xml;\n};\nexport default builder;\n","import md5 from 'md5';\nimport GraphComponent from './3-component';\nimport GA from '../graph-actions';\nimport { actionType as T } from '../../reducer';\n\nclass GraphUndoRedo extends GraphComponent {\n    static methodsMapped\n\n    actionArr\n\n    curActionIndex\n\n    constructor(...props) {\n        super(...props);\n\n        this.methodsMapped = {\n            [GA.ADD_NODE]: (...args) => this.addNode(...args, 0),\n            [GA.ADD_EDGE]: (...args) => this.addEdge(...args, 0),\n            [GA.UPDATE_NODE]: (...args) => this.updateNode(...args, 0),\n            [GA.UPDATE_EDGE]: (...args) => this.updateEdge(...args, 0),\n            [GA.UPDATE_DATA]: (...args) => this.updateData(...args, 0),\n            [GA.DEL_NODE]: (...args) => this.deleteNode(...args, 0),\n            [GA.DEL_EDGE]: (...args) => this.deleteElem(...args, 0),\n            [GA.SET_POS]: (...args) => this.setPos(...args, 0),\n            [GA.SET_DIM]: (...args) => this.setDim(...args, 0),\n            [GA.SET_BENDW]: (...args) => this.setBendWightDist(...args),\n        };\n\n        this.actionArr = [];\n        this.curActionIndex = 0;\n    }\n\n    resetAllAction() {\n        this.actionArr = [];\n        this.curActionIndex = 0;\n    }\n\n    informUI() {\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n\n    performAction({ actionName, parameters }) {\n        const action = this.methodsMapped[actionName];\n        action(...parameters);\n    }\n\n    addPositionChange(id, prevPos, curPos) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_POS, parameters: [id, prevPos, curPos] },\n            { actionName: GA.SET_POS, parameters: [id, curPos, prevPos] }, tid,\n        );\n    }\n\n    addDimensionChange(id, prevDim, prevPos, curDim, curPos) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_DIM, parameters: [id, prevDim, prevPos] },\n            { actionName: GA.SET_DIM, parameters: [id, curDim, curPos] }, tid,\n        );\n    }\n\n    addBendChange(id, prevDW, curDW) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_BENDW, parameters: [id, prevDW] },\n            { actionName: GA.SET_BENDW, parameters: [id, curDW] }, tid,\n        );\n    }\n\n    static sequencify(obj) {\n        if (!(obj instanceof Object)) return obj;\n        let r = [];\n        if (obj instanceof Array) {\n            r = obj.map(GraphUndoRedo.sequencify);\n        } else {\n            Object.keys(obj).sort().forEach((k) => {\n                r.push(`:${k}:`);\n                r.push(GraphUndoRedo.sequencify(obj[k]));\n            });\n        }\n        return r;\n    }\n\n    addAction(inverse, equivalent, tid, authorName = this.superState.authorName) {\n        if (tid === 0) return;\n        this.actionArr.splice(this.curActionIndex);\n\n        const actionIdentity = GraphUndoRedo.sequencify(equivalent).toString()\n            + GraphUndoRedo.sequencify(equivalent).toString()\n            + tid\n            + authorName;\n        this.actionArr.push({\n            tid,\n            inverse,\n            equivalent,\n            authorName,\n            hash: md5(\n                `${actionIdentity}|${this.actionArr.length ? this.actionArr.at(-1).hash : ''}`,\n            ),\n        });\n        this.curActionIndex += 1;\n        this.informUI();\n    }\n\n    undoSingleAction() {\n        if (this.curActionIndex !== 0) {\n            this.curActionIndex -= 1;\n            this.performAction(this.actionArr[this.curActionIndex].inverse);\n            this.informUI();\n        }\n    }\n\n    redoSingleAction() {\n        if (this.curActionIndex !== this.actionArr.length) {\n            this.performAction(this.actionArr[this.curActionIndex].equivalent);\n            this.curActionIndex += 1;\n            this.informUI();\n        }\n    }\n\n    undo() {\n        let curTid = null;\n        if (this.curActionIndex !== 0) curTid = this.actionArr[this.curActionIndex - 1].tid;\n        while (this.curActionIndex !== 0 && this.actionArr[this.curActionIndex - 1].tid === curTid) {\n            this.curActionIndex -= 1;\n            this.performAction(this.actionArr[this.curActionIndex].inverse);\n        }\n        this.informUI();\n    }\n\n    redo() {\n        let curTid = null;\n        if (this.curActionIndex !== this.actionArr.length) curTid = this.actionArr[this.curActionIndex].tid;\n        while (this.curActionIndex !== this.actionArr.length && this.actionArr[this.curActionIndex].tid === curTid) {\n            this.performAction(this.actionArr[this.curActionIndex].equivalent);\n            this.curActionIndex += 1;\n        }\n        this.informUI();\n    }\n\n    setCurStatus() {\n        super.setCurStatus();\n        this.informUI();\n    }\n\n    registerEvents() {\n        super.registerEvents();\n        this.cy.on('dragfree', 'node[type = \"ordin\"]', (e) => {\n            e.target.forEach((node) => {\n                this.addPositionChange(node.id(), node.scratch('position'), { ...node.position() });\n            });\n        });\n        this.cy.on('nodeediting.resizeend', (e, type, node) => {\n            this.addDimensionChange(\n                node.id(),\n                { height: node.scratch('height'), width: node.scratch('width') },\n                node.scratch('position'),\n                { height: node.data('style').height, width: node.data('style').width },\n                { ...node.position() },\n            );\n        });\n    }\n}\n\nexport default GraphUndoRedo;\n","class PropFromArr {\n    constructor(obj) {\n        this.arr = [obj];\n        this.flatenArr();\n    }\n\n    flatenArr() {\n        const flatArr = [];\n        for (let i = 0; i < this.arr.length; i += 1) {\n            if (this.arr[i].constructor === Array) this.arr[i].forEach((o) => this.arr.push(o));\n            else flatArr.push(this.arr[i]);\n        }\n        this.arr = flatArr;\n    }\n\n    G(p) {\n        return new PropFromArr(this.arr.map((o) => o[p]).filter((o) => o));\n    }\n\n    S(p) {\n        this.arr = this.arr.map((o) => o[p]).filter((o) => o);\n        this.flatenArr();\n        return this;\n    }\n\n    any() {\n        const arr = [];\n        this.arr.forEach((obj) => {\n            Object.keys(obj).forEach((key) => {\n                arr.push(obj[key]);\n            });\n        });\n        this.arr = arr;\n        this.flatenArr();\n        return this;\n    }\n\n    parseProps(s, t) {\n        const propFromArr = new PropFromArr(this.arr);\n        s.split('.').forEach(\n            (property) => (property === '*' ? propFromArr.any() : propFromArr.S(property)),\n        );\n        if (t === 1) return propFromArr.A();\n        if (t === 2) return propFromArr;\n        return propFromArr.F();\n    }\n\n    A() { return this.arr; }\n\n    F() { return this.arr[0]; }\n}\nexport default PropFromArr;\n","import PropFromArr from './PropFromArr';\n\nconst mapByDefault = (x, arr, def) => {\n    if (arr.includes(x)) return x;\n    return def;\n};\n\nconst parseNode = (node) => {\n    const p = new PropFromArr(node).parseProps('data.y:ShapeNode', 2);\n    return {\n        label: p.parseProps('y:NodeLabel._') || p.parseProps('y:NodeLabel'),\n        id: new PropFromArr(node).parseProps('$.id'),\n        position: {\n            x: parseFloat(p.parseProps('y:Geometry.$.x')),\n            y: parseFloat(p.parseProps('y:Geometry.$.y')),\n        },\n        style: {\n            width: parseFloat(p.parseProps('y:Geometry.$.width')),\n            height: parseFloat(p.parseProps('y:Geometry.$.height')),\n            opacity: parseInt(p.parseProps('y:Fill.$.opacity'), 10) || 1,\n            shape: mapByDefault(p.parseProps('y:Shape.$.type'), ['rectangle', 'ellipse'], 'rectangle'),\n            backgroundColor: p.parseProps('y:Fill.$.color'),\n            borderColor: p.parseProps('y:BorderStyle.$.color'),\n            borderWidth: parseInt(p.parseProps('y:BorderStyle.$.width'), 10),\n        },\n    };\n};\n\nconst parseEdge = (edge) => ({\n    label: new PropFromArr(edge).parseProps('data.*.y:EdgeLabel._')\n             || new PropFromArr(edge).parseProps('data.*.y:EdgeLabel'),\n    source: new PropFromArr(edge).parseProps('$.source'),\n    target: new PropFromArr(edge).parseProps('$.target'),\n    style: {\n        backgroundColor: new PropFromArr(edge).parseProps('data.*.y:LineStyle.$.color'),\n        thickness: parseFloat(new PropFromArr(edge).parseProps('data.*.y:LineStyle.$.width')),\n        shape: mapByDefault(new PropFromArr(edge).parseProps('data.*.y:LineStyle.$.type'),\n            ['dashed', 'dotted'], 'solid'),\n    },\n    bendData: {\n        bendPoint: new PropFromArr(edge).parseProps('data.*.y:Path.y:Point.$'),\n    },\n});\n\nconst parseActionML = (({ actionName, parameters }) => ({ actionName: actionName[0], parameters: parameters[0] }));\n\nconst parseActionHistory = (grahML) => grahML.parseProps('graphml.graph.actionHistory', 1)\n    .map(({\n        authorName, equivalent, inverse, tid,\n    }) => ({\n        authorName: authorName[0],\n        equivalent: parseActionML(equivalent[0]),\n        inverse: parseActionML(inverse[0]),\n        tid: tid[0],\n    }));\n\nconst parseDetails = (grahML) => grahML.parseProps('graphml.graph.$');\n\nexport {\n    parseNode, parseEdge, parseDetails, parseActionHistory,\n};\n","import xml2js from 'xml2js';\nimport PropFromArr from './PropFromArr';\nimport {\n    parseNode, parseEdge, parseDetails, parseActionHistory,\n} from './parseProperties';\n\nconst parser = (graphMlCnt) => new Promise((resolve) => {\n    new xml2js.Parser().parseString(graphMlCnt, (err, grahMLObj) => {\n        const grahML = new PropFromArr(grahMLObj);\n        const nodes = grahML.parseProps('graphml.graph.node', 1).map(parseNode);\n        const edges = grahML.parseProps('graphml.graph.edge', 1).map(parseEdge);\n        const { id, projectName, serverID } = parseDetails(grahML);\n        const actionHistory = parseActionHistory(grahML);\n        resolve({\n            id, projectName, edges, nodes, actionHistory, serverID,\n        });\n    });\n});\nexport default parser;\n","import GraphServer from './6-server';\n\nexport default GraphServer;\n","import Axios from 'axios';\nimport { actionType as T } from '../../reducer';\nimport GraphLoadSave from './5-load-save';\n// import {\n//     postGraph, updateGraph, forceUpdateGraph, getGraph, getGraphWithHashCheck,\n// } from '../../serverCon/crud_http';\n\nclass GraphServer extends GraphLoadSave {\n    set(config) {\n        const { serverID } = config;\n        super.set(config);\n        if (serverID) {\n            this.setServerID(serverID);\n            this.dispatcher({ type: T.IS_WORKFLOW_ON_SERVER, payload: Boolean(this.serverID) });\n        }\n    }\n    // Not being immplemented in version 1\n    // pushToServer() {\n    //     if (this.serverID) {\n    //         updateGraph(this.serverID, this.getGraphML()).then(() => {\n\n    //         });\n    //     } else {\n    //         postGraph(this.getGraphML()).then((serverID) => {\n    //             this.set({ serverID });\n    //             this.cy.emit('graph-modified');\n    //         });\n    //     }\n    // }\n\n    // forcePushToServer() {\n    //     if (this.serverID) {\n    //         forceUpdateGraph(this.serverID, this.getGraphML()).then(() => {\n\n    //         });\n    //     } else {\n    //         postGraph(this.getGraphML()).then((serverID) => {\n    //             this.set({ serverID });\n    //         });\n    //     }\n    // }\n\n    // forcePullFromServer() {\n    //     if (this.serverID) {\n    //         getGraph(this.serverID).then((graphXML) => {\n    //             this.setGraphML(graphXML);\n    //         });\n    //     } else {\n    //         // eslint-disable-next-line no-alert\n    //         alert('Not on server');\n    //     }\n    // }\n\n    // pullFromServer() {\n    //     if (this.actionArr.length === 0) { this.forcePullFromServer(); return; }\n    //     if (this.serverID) {\n    //         getGraphWithHashCheck(this.serverID, this.actionArr.at(-1).hash).then((graphXML) => {\n    //             this.setGraphML(graphXML);\n    //         }).catch(() => {\n\n    //         });\n    //     } else {\n    //         // eslint-disable-next-line no-alert\n    //         alert('Not on server');\n    //     }\n    // }\n\n    build() {\n        // TODO\n        Axios.post('http://127.0.0.1:5000/build/demo?fetch=sample&apikey=xyz')\n            .then((res) => { // eslint-disable-next-line\n                alert(res.data['message'])\n            }).catch((err) => { // eslint-disable-next-line\n                alert(err);\n            });\n        if (this.serverID);\n    }\n\n    debug() {\n        // TODO\n        Axios.post('http://127.0.0.1:5000/debug/demo')\n            .then((res) => { // eslint-disable-next-line\n                alert(res.data['message'])\n            }).catch((err) => { // eslint-disable-next-line\n                alert(err);\n            });\n        if (this.serverID);\n    }\n\n    run() {\n        // TODO\n        Axios.post('http://127.0.0.1:5000/run/demo')\n            .then((res) => { // eslint-disable-next-line\n                alert(res.data['message'])\n            }).catch((err) => { // eslint-disable-next-line\n                alert(err);\n            });\n        if (this.serverID);\n    }\n\n    clear() {\n        // TODO\n        Axios.post('http://127.0.0.1:5000/clear/demo')\n            .then((res) => { // eslint-disable-next-line\n                alert(res.data['message'])\n            }).catch((err) => { // eslint-disable-next-line\n                alert(err);\n            });\n        if (this.serverID);\n    }\n\n    stop() {\n        // TODO\n        Axios.post('http://127.0.0.1:5000/stop/demo')\n            .then((res) => { // eslint-disable-next-line\n                alert(res.data['message'])\n            }).catch((err) => { // eslint-disable-next-line\n                alert(err);\n            });\n        if (this.serverID);\n    }\n\n    destroy() {\n        // TODO\n        Axios.delete('http://127.0.0.1:5000/destroy/demo')\n            .then((res) => { // eslint-disable-next-line\n                alert(res.data['message'])\n            }).catch((err) => { // eslint-disable-next-line\n                alert(err);\n            });\n        if (this.serverID);\n    }\n\n    setCurStatus() {\n        super.setCurStatus();\n        this.dispatcher({ type: T.IS_WORKFLOW_ON_SERVER, payload: Boolean(this.serverID) });\n    }\n}\n\nexport default GraphServer;\n","import { saveAs } from 'file-saver';\nimport localStorageManager from '../local-storage-manager';\nimport graphmlBuilder from '../graphml/builder';\nimport BendingDistanceWeight from '../calculations/bending-dist-weight';\nimport GraphUndoRedo from './4-undo-redo';\nimport graphMLParser from '../graphml/parser';\n\nclass GraphLoadSave extends GraphUndoRedo {\n    autoSaveIntervalId\n\n    constructor(...args) {\n        super(...args);\n        this.autoSaveIntervalId = null;\n    }\n\n    registerEvents() {\n        super.registerEvents();\n        this.cy.on('add remove data dragfreeon', 'node[type=\"ordin\"]', () => this.saveLocalStorage());\n        this.cy.on('add remove data', 'edge[type=\"ordin\"]', () => this.saveLocalStorage());\n        this.cy.on('nodeediting.resizeend graph-modified', () => this.saveLocalStorage());\n    }\n\n    downloadImg(format) {\n        this.cy.emit('hide-bend');\n        this.cy.$('.eh-handle').remove();\n        if (format === 'PNG') saveAs(this.cy.png({ full: true }), `${this.getName()}-DHGWorkflow.png`);\n        if (format === 'JPG') saveAs(this.cy.jpg({ full: true }), `${this.getName()}-DHGWorkflow.jpg`);\n    }\n\n    shouldNodeBeSaved(nodeID) {\n        return this.getById(nodeID).data('type') === 'ordin';\n    }\n\n    shouldEdgeBeSaved(edgeID) {\n        return this.getById(edgeID).data('type') === 'ordin';\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getRealSourceId(nodeID) {\n        return nodeID;\n    }\n\n    static stringifyAction({ actionName, parameters }) {\n        return { actionName, parameters: window.btoa(JSON.stringify(parameters)) };\n    }\n\n    static parseAction({ actionName, parameters }) {\n        return { actionName, parameters: JSON.parse(window.atob(parameters)) };\n    }\n\n    jsonifyGraph() {\n        const graph = {\n            nodes: [],\n            edges: [],\n            actionHistory: [],\n            projectName: this.projectName,\n            id: this.id,\n            serverID: this.serverID,\n            fileName: null,\n            fileHandle: null,\n        };\n        this.cy.nodes().forEach((node) => {\n            if (this.shouldNodeBeSaved(node.id())) {\n                const all = node.json();\n                const nodeJson = {\n                    label: all.data.label,\n                    id: all.data.id,\n                    position: all.position,\n                    style: {},\n                };\n                nodeJson.style = this.getStyle(node.id());\n                graph.nodes.push(nodeJson);\n            }\n        });\n        this.cy.edges().forEach((edge) => {\n            if (this.shouldEdgeBeSaved(edge.id())) {\n                const edgeJson = edge.json().data;\n                edgeJson.source = this.getRealSourceId(edge.source().id());\n                edgeJson.style = this.getStyle(edge.id());\n                edgeJson.bendData.bendPoint = BendingDistanceWeight.getCoordinate(\n                    edgeJson.bendData.bendWeight, edgeJson.bendData.bendDistance,\n                    edge.source().position(), edge.target().position(),\n                );\n                graph.edges.push(edgeJson);\n            }\n        });\n        graph.actionHistory = this.actionArr.map(({\n            tid, inverse, equivalent, authorName, hash,\n        }) => ({\n            tid,\n            authorName,\n            inverse: GraphLoadSave.stringifyAction(inverse),\n            equivalent: GraphLoadSave.stringifyAction(equivalent),\n            hash,\n        }));\n        return graph;\n    }\n\n    getName() {\n        return `${this.projectName}`;\n    }\n\n    async saveToDisk() {\n        const str = graphmlBuilder(this.jsonifyGraph());\n        const bytes = new TextEncoder().encode(str);\n        const blob = new Blob([bytes], { type: 'application/json;charset=utf-8' });\n        if (navigator.userAgent.indexOf('Edg') !== -1 || navigator.userAgent.indexOf('Chrome') !== -1) {\n            const options = {\n                types: [\n                    {\n                        description: 'GraphMl Files',\n                        accept: {\n                            'text/graphml': ['.graphml'],\n                        },\n                    },\n                ],\n            };\n            const handle = await window.showSaveFilePicker(options);\n            const stream = await handle.createWritable();\n            await stream.write(blob);\n            await stream.close();\n        } else {\n            // eslint-disable-next-line no-alert\n            const fileName = prompt('Filename:');\n            saveAs(blob, `${fileName || `${this.getName()}-concore`}.graphml`);\n        }\n    }\n\n    async saveWithoutFileHandle() {\n        const str = graphmlBuilder(this.jsonifyGraph());\n        const bytes = new TextEncoder().encode(str);\n        const blob = new Blob([bytes], { type: 'application/json;charset=utf-8' });\n        const options = {\n            types: [\n                {\n                    description: 'GraphMl Files',\n                    accept: {\n                        'text/graphml': ['.graphml'],\n                    },\n                },\n            ],\n        };\n        const handle = await window.showSaveFilePicker(options);\n        const stream = await handle.createWritable();\n        await stream.write(blob);\n        await stream.close();\n    }\n\n    saveToFolder() {\n        const str = graphmlBuilder(this.jsonifyGraph());\n        return str;\n    }\n\n    getGraphML() {\n        return graphmlBuilder(this.jsonifyGraph());\n    }\n\n    loadJson(content) {\n        content.nodes.forEach((node) => {\n            this.addNode(node.label, node.style, 'ordin', node.position, {}, node.id, 0);\n        });\n        content.edges.forEach((edge) => {\n            this.addEdge({ ...edge, sourceID: edge.source, targetID: edge.target }, 0);\n        });\n        content.actionHistory.forEach(({\n            inverse, equivalent, tid, authorName,\n        }) => {\n            this.addAction(GraphLoadSave.parseAction(inverse), GraphLoadSave.parseAction(equivalent), tid, authorName);\n        });\n        this.setProjectName(content.projectName);\n        this.setServerID(this.serverID || content.serverID);\n    }\n\n    saveLocalStorage() {\n        if (this.autoSaveIntervalId !== null) clearTimeout(this.autoSaveIntervalId);\n        this.autoSaveIntervalId = setTimeout(() => localStorageManager.save(this.id, this.jsonifyGraph()), 1000);\n    }\n\n    setGraphML(graphML) {\n        graphMLParser(graphML).then((graphObject) => {\n            localStorageManager.save(this.id, graphObject);\n            this.loadGraphFromLocalStorage();\n        });\n    }\n\n    resetLocalStorage() {\n        localStorageManager.clearGraph(this.id);\n    }\n\n    loadGraphFromLocalStorage() {\n        this.reset();\n        const graphContent = localStorageManager.get(this.id);\n        if (!graphContent) return false;\n        this.loadJson(graphContent);\n        return true;\n    }\n\n    serializeGraph() {\n        return window.btoa(JSON.stringify(this.jsonifyGraph()));\n    }\n}\n\nexport default GraphLoadSave;\n","const boundaryPoint = {\n    getEq(P1, P2) {\n        const m = (P1.y - P2.y) / (P1.x - P2.x);\n        const c = P1.y - m * P1.x;\n        return [m, c];\n    },\n    getX1X2(Cn, P, w, h) {\n        if (Cn.x === P.x) return [P.x, P.x];\n        const P2 = { x: P.x - Cn.x, y: P.y - Cn.y };\n        const [m, c] = this.getEq({ x: 0, y: 0 }, P2);\n        // (𝑎2𝑚2+𝑏2)𝑥2+2𝑎2𝑚𝑐𝑥+𝑎2(𝑐2–𝑏2)\n        const A = (w ** 2 * m ** 2 + h ** 2);\n        const B = 2 * w ** 2 * m * c;\n        const C = w ** 2 * (c ** 2 - h ** 2);\n        const D = B ** 2 - 4 * A * C;\n        const x1 = (-B + D ** 0.5) / (2 * A) + Cn.x;\n        const x2 = (-B - D ** 0.5) / (2 * A) + Cn.x;\n        return [x1, x2];\n    },\n    getY1Y2(C, P, w, h, x1, x2) {\n        if (x1 === x2) return [C.y + h, C.y - h];\n        const [m, c] = this.getEq(C, P);\n        return [m * x1 + c, m * x2 + c];\n    },\n    dist(A, B) {\n        return ((A.x - B.x) ** 2 + (A.y - B.y) ** 2) ** 0.5;\n    },\n    getClosestEllipse(C, P, w, h) {\n        const [x1, x2] = this.getX1X2(C, P, w, h);\n        const [y1, y2] = this.getY1Y2(C, P, w, h, x1, x2);\n        const [d1, d2] = [this.dist(P, { x: x1, y: y1 }), this.dist(P, { x: x2, y: y2 })];\n        if (d1 < d2) return { x: x1, y: y1 };\n        return { x: x2, y: y2 };\n    },\n    slope(x1, y1, x2, y2) {\n        return (x1 - x2) / (y1 - y2);\n    },\n\n    setSubQ(C, P, w, h) {\n        const [S1, S2] = [[C.x + w, C.y + h], [C.x + w, C.y - h]]\n            .map(([x, y]) => ((C.x - x) * (P.y - y) - (C.y - y) * (P.x - x)) > 0);\n        if (S1 && !S2) return 0;\n        if (!S1 && !S2) return 1;\n        if (!S1 && S2) return 2;\n        if (S1 && S2) return 3;\n        return -1;\n    },\n\n    getClosestRect(C, P, w, h) {\n        const [m, c] = this.getEq(P, C);\n        let D = [\n            [C.x + w, C.y],\n            [C.x, C.y + h],\n            [C.x - w, C.y],\n            [C.x, C.y - h],\n        ];\n        if (Math.abs(m) !== Infinity) {\n            D = [ // To point toward center\n                [C.x + w, m * (C.x + w) + c],\n                [(C.y + h - c) / m, C.y + h],\n                [C.x - w, m * (C.x - w) + c],\n                [(C.y - h - c) / m, C.y - h],\n            ];\n        }\n        const [x, y] = D[this.setSubQ(C, P, w, h)];\n        return { x, y };\n    },\n    get(C, P, w, h, type) {\n        if (type === 'rectangle') return boundaryPoint.getClosestRect(C, P, w, h);\n        return boundaryPoint.getClosestEllipse(C, P, w, h);\n    },\n\n};\n\nexport default boundaryPoint.get;\n","import TailoredGraphBuilder from './tailored-graph-builder';\n\nexport default TailoredGraphBuilder;\n","import CoreGraph from './graph-core';\nimport { actionType as T } from '../reducer';\nimport getBoundaryPoint from './calculations/boundary-point';\nimport GA from './graph-actions';\n\nclass TailoredGraph extends CoreGraph {\n    registerEvents() {\n        super.registerEvents();\n        this.cy.on('drag data moved', 'node[type=\"ordin\"]', (evt) => {\n            evt.target.connectedEdges().connectedNodes('node[type=\"special\"]').forEach((juncNode) => {\n                juncNode.position(TailoredGraph.calJuncNodePos(juncNode));\n            });\n        });\n        this.cy.on('bending', (evt) => {\n            const juncNode = evt.target.source();\n            juncNode.position(TailoredGraph.calJuncNodePos(juncNode));\n        });\n    }\n\n    static calJuncNodePos(juncNode) {\n        const parNode = juncNode.incomers('node')[0];\n        const meanNbrPosition = { x: 0, y: 0 };\n        const setOfPos = new Set();\n        juncNode.outgoers('edge[type=\"ordin\"]')\n            .forEach((edge) => setOfPos.add(JSON.stringify(TailoredGraph.getBendEdgePoint(edge))));\n        setOfPos.forEach((posStr) => {\n            const pos = JSON.parse(posStr);\n            meanNbrPosition.x += pos.x;\n            meanNbrPosition.y += pos.y;\n        });\n        if (setOfPos.size === 0) return juncNode.position();\n        meanNbrPosition.x /= setOfPos.size;\n        meanNbrPosition.y /= setOfPos.size;\n        return getBoundaryPoint(\n            parNode.position(), meanNbrPosition,\n            parNode.data('style').width / 2,\n            parNode.data('style').height / 2,\n            parNode.data('style').shape,\n        );\n    }\n\n    getRealNode(juncNodeId) {\n        return this.getById(juncNodeId).incomers().filter('node')[0];\n    }\n\n    addAutoMove(juncNode) {\n        juncNode.unselectify();\n        return this;\n    }\n\n    addEdgeWithJuncNode(edgeData, tid) {\n        const juncNode = this.getById(edgeData.sourceID);\n        const ed = super.addEdge({\n            ...edgeData,\n            label: juncNode.data('edgeLabel'),\n            style: juncNode.data('edgeStyle'),\n        }, tid);\n        juncNode.position(TailoredGraph.calJuncNodePos(juncNode));\n        return ed;\n    }\n\n    addEdgeWithoutJuncNode(edgeData, tid) {\n        const { sourceID, targetID, style } = edgeData;\n        const [sourceNode, targetNode] = [sourceID, targetID].map(this.getById.bind(this));\n        const sourceNodeStyle = sourceNode.data('style');\n        const juncNodePos = getBoundaryPoint(\n            sourceNode.position(),\n            targetNode.position(),\n            sourceNodeStyle.width / 2,\n            sourceNodeStyle.height / 2,\n            sourceNodeStyle.shape,\n        );\n        const juncNode = super.addNode('', { backgroundColor: style.backgroundColor },\n            'special', juncNodePos, { edgeLabel: edgeData.label, edgeStyle: style }, undefined, tid);\n        juncNode.ungrabify();\n        super.addEdge({\n            sourceID,\n            targetID: juncNode.id(),\n            style: {\n                ...style,\n                'target-arrow-shape': 'none',\n            },\n            type: 'special',\n        }, tid);\n        this.addAutoMove(juncNode, sourceNode);\n        return this.addEdgeWithJuncNode({ ...edgeData, sourceID: juncNode.id() }, tid);\n    }\n\n    addEdgeAction(id, edgeData, tid) {\n        this.addAction(\n            { actionName: GA.DEL_EDGE, parameters: [id] },\n            {\n                actionName: GA.ADD_EDGE,\n                parameters: [{ ...edgeData, sourceID: this.getRealSourceId(edgeData.sourceID), id }],\n            },\n            tid,\n        );\n    }\n\n    addEdge(edgeData, tidd = this.getTid()) {\n        const tid = 0;\n        const { sourceID, targetID, label } = edgeData;\n        const [sourceNode, targetNode] = [sourceID, targetID].map(this.getById.bind(this));\n        const juncNodes = sourceNode.outgoers('node').filter((node) => label && node.data('edgeLabel') === label);\n\n        let edge;\n        if (targetNode.data('type') !== 'ordin') return edge; // Don't Add Node\n        if (sourceNode.data('type') === 'special') edge = this.addEdgeWithJuncNode(edgeData, tid);\n        else if (juncNodes.length) edge = this.addEdgeWithJuncNode({ ...edgeData, sourceID: juncNodes[0].id() }, tid);\n        else if (label && label.length) edge = this.addEdgeWithoutJuncNode(edgeData, tid);\n        else {\n            this.dispatcher({\n                type: T.Model_Open_Create_Edge,\n                cb: (edgeLabel, edgeStyle) => {\n                    const message = this.validiateEdge(edgeLabel, edgeStyle, sourceID, targetID, null, 'New');\n                    if (message.ok) edge = this.addEdge({ ...edgeData, label: edgeLabel, style: edgeStyle }, tid);\n                    if (edge) this.addEdgeAction(edge.id(), { ...edgeData, label: edgeLabel, style: edgeStyle }, tidd);\n                    return message;\n                },\n            });\n        }\n        if (edge) this.addEdgeAction(edge.id(), edgeData, tidd);\n        return edge;\n    }\n\n    updateEdge(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        this.addAction(\n            {\n                actionName: GA.UPDATE_EDGE,\n                parameters: [id, this.getStyle(id), this.getById(id).data('label'), shouldUpdateLabel],\n            },\n            { actionName: GA.UPDATE_EDGE, parameters: [id, style, label, shouldUpdateLabel] },\n            tid,\n        );\n        const junctionNode = this.getById(id).source();\n        if (shouldUpdateLabel) this.updateData(junctionNode.data('id'), 'edgeLabel', label, 0);\n        this.updateData(junctionNode.data('id'), 'edgeStyle', style, 0);\n        this.updateNode(junctionNode.data('id'), { backgroundColor: style.backgroundColor }, '', false, 0);\n\n        junctionNode\n            .outgoers('edge')\n            .forEach((edge) => super.updateEdge(edge.data('id'), style, label, shouldUpdateLabel, 0));\n    }\n\n    deleteElem(id, tid = this.getTid()) {\n        const el = this.getById(id);\n        if (el.isNode()) {\n            if (el.removed()) return;\n            el.outgoers('node[type=\"special\"]')\n                .connectedEdges('edge[type=\"ordin\"]')\n                .forEach((edge) => this.deleteElem(edge.id(), tid));\n            el.connectedEdges('edge[type=\"ordin\"]')\n                .forEach((edge) => this.deleteElem(edge.id(), tid));\n\n            const node = this.getById(id);\n            this.addAction(\n                {\n                    actionName: GA.ADD_NODE,\n                    parameters: [\n                        node.data('label'), this.getStyle(node.id()), node.data('type'),\n                        node.position(), node.json().data, id,\n                    ],\n                },\n                { actionName: GA.DEL_NODE, parameters: [id] }, tid,\n            );\n            super.deleteNode(id, 0);\n        } else {\n            if (!this.getById(id).length || el.removed()) return;\n            const jsonEd = this.getById(id).json().data;\n            this.addAction(\n                {\n                    actionName: GA.ADD_EDGE,\n                    parameters: [{\n                        ...jsonEd, sourceID: this.getRealSourceId(jsonEd.source), targetID: jsonEd.target,\n                    }],\n                },\n                { actionName: GA.DEL_EDGE, parameters: [id] }, tid,\n            );\n            const junctionNode = el.source();\n            super.deleteEdge(id, 0);\n            if (junctionNode) if (junctionNode.outgoers().length === 0) this.deleteNode(junctionNode.id(), 0);\n        }\n    }\n\n    getRealSourceId(nodeID) {\n        if (this.getById(nodeID).data('type') === 'ordin') return nodeID;\n        if (this.getById(nodeID).incomers('node').length === 0) return nodeID;\n        return this.getById(nodeID).incomers('node')[0].id();\n    }\n\n    getEdgesBetweenNodes(n1, n2) {\n        const [c1, c2] = [n1, n2]\n            .map((n) => this.getById(this.getRealSourceId(n)))\n            .map((r) => r.outgoers('node[type=\"special\"]').union(r));\n        return c1.edgesWith(c2);\n    }\n\n    getNodesEdges() {\n        const nodes = this.cy.$('node[type=\"ordin\"]').map((node) => ({\n            label: node.data('label'),\n            style: node.data('style'),\n            id: node.data('id'),\n        }));\n        const edges = {};\n        this.cy.$('edge[type=\"ordin\"]').forEach((edge) => {\n            const label = edge.data('label');\n            const sourceLabel = this.getById(this.getRealSourceId(edge.source().id())).data('label');\n            const targetLabel = edge.target().data('label');\n            const style = edge.data('style');\n            const id = edge.data('id');\n            if (!edges[label]) {\n                edges[label] = {\n                    targetLabel: [targetLabel], sourceLabel, id, label, style,\n                };\n            } else edges[label].targetLabel.push(targetLabel);\n        });\n        return [nodes, Object.values(edges)];\n    }\n}\n\nexport default TailoredGraph;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { edgeValidator, nodeValidator } from './config/defaultValidators';\nimport MyGraph from './graph-builder';\nimport { actionType as T } from './reducer';\n\nfunction Graph({\n    el, superState, dispatcher, graphID, serverID, graphML, projectName, graphContainerRef, active,\n}) {\n    const [instance, setInstance] = useState(null);\n    const ref = useRef();\n    const setContainerDim = (element) => {\n        if (element) {\n            const elToAss = element;\n            elToAss.style.width = `${graphContainerRef.current.offsetWidth - 2}px`;\n            elToAss.style.height = `${graphContainerRef.current.offsetHeight - 2}px`;\n        }\n    };\n\n    const initialiseNewGraph = () => {\n        const myGraph = new MyGraph(\n            graphID, ref.current, dispatcher, superState, projectName, nodeValidator, edgeValidator,\n        );\n        if (graphID) myGraph.loadGraphFromLocalStorage();\n        if (serverID) {\n            myGraph.set({ serverID });\n            myGraph.forcePullFromServer();\n        }\n        if (graphML) myGraph.setGraphML(graphML);\n        myGraph.setCurStatus();\n        return myGraph;\n    };\n    // Remote server implementation - Not being used.\n    // useEffect(() => {\n    //     if (active && loaded && serverID) {\n    //         window.history.pushState(null, null, path.join(process.env.PUBLIC_URL, 's', serverID));\n    //     } else if (active && loaded && graphID) {\n    //         window.history.pushState(null, null, path.join(process.env.PUBLIC_URL, 'l', graphID));\n    //     }\n    // }, [active, serverID, loaded, graphID]);\n    useEffect(() => instance && instance.set({ superState }), [instance, superState]);\n    useEffect(() => active && instance && instance.setCurStatus(), [active && instance]);\n    useEffect(() => {\n        if (active && instance) dispatcher({ type: T.SET_CUR_INSTANCE, payload: instance });\n    }, [active && instance]);\n\n    useEffect(() => {\n        if (ref.current) {\n            setContainerDim(ref.current);\n            window.addEventListener('resize', () => setContainerDim(ref.current));\n            setInstance(initialiseNewGraph());\n        }\n    }, [ref]);\n\n    const { id } = el;\n\n    return (\n        <div\n            style={{ zIndex: 1, display: active ? 'block' : 'none' }}\n            key={id}\n            className=\"graph-element\"\n            ref={ref}\n        />\n    );\n}\nexport default Graph;\n","const nodeValidator = `(node, nodes, edges) => {\n    var regex = /^[A-za-z0-9]+[:[A-Za-z0-9.]+]|[^$]$/;\n    let message = { ok: true, err: null };\n    if (!regex.test(node.label)) {\n        message = {\n            ok: false,\n            err: 'Node with incorrect label.',\n        }\n        return message;\n    }\n    nodes.forEach((n) => {\n        if (n.id !== node.id && n.label.split(':')[0] === node.label.split(':')[0]) {\n            message = {\n                ok: false,\n                err: 'Node with same label exists.',\n            };\n        }\n    });\n    return message;\n    }`;\nconst edgeValidator = `(edge, nodes, edges) => {\nlet message = { ok: true, err: null };\nedges.forEach((e) => {\n    if (e.label === edge.label && e.sourceLabel !== edge.sourceLabel) {\n        message = {\n            ok: false,\n            err: 'Edge with same label exists.',\n        };\n    }\n});\nreturn message;\n}`;\n\n/* eslint-disable max-len */\nconst nodeValidatorFormat = `Takes **\\`node\\`** details under validation, existing **\\`nodes\\`**, existing **\\`edges\\`** and **\\`type\\`**\n\n**Node:** { label: String, style: Object, id: String | undefined },\n**Nodes:** [{ label: String, style: Object, id: String }],\n**Edges:** [{ label: String, sourceLabel: String, targetLabel: String, style: Object, id: String }],\n**Type:** \\`New\\` | \\`Update\\``;\n\nconst edgeValidatorFormat = `Takes **\\`edge\\`** details under validation, existing **\\`nodes\\`** and existing **\\`edges\\`** and **\\`type\\`**\n\n**Edge:** { label: String, sourceLabel: String, targetLabel: String, style: Object, id: String | undefined },\n**Nodes:** [{ label: String, style: Object, id: String }],\n**Edges:** [{ label: String, sourceLabel: String, targetLabel: String, style: Object, id: String }],\n**Type:** \\`New\\` | \\`Update\\``;\n/* eslint-enable max-len */\n\nexport {\n    nodeValidator, edgeValidator, nodeValidatorFormat, edgeValidatorFormat,\n};\n","import React, { useEffect } from 'react';\nimport ZoomComp from './component/ZoomSetter';\n\nimport { actionType as T } from './reducer';\nimport './graphWorkspace.css';\nimport localStorageManager from './graph-builder/local-storage-manager';\nimport TabBar from './component/TabBar';\nimport Graph from './GraphArea';\n\nconst GraphComp = (props) => {\n    const graphContainerRef = React.useRef();\n    const { dispatcher, superState } = props;\n    // const [loadedFromStorage, setLoadedFromStorage] = React.useState(false);\n\n    useEffect(() => {\n        const allSavedGs = localStorageManager.getAllGraphs().map((graphID) => ({\n            graphID,\n        }));\n        dispatcher({\n            type: T.ADD_GRAPH_BULK,\n            payload: allSavedGs,\n        });\n        // setLoadedFromStorage(true);\n    }, []);\n\n    // Remote server implementation - Not being used.\n    // useEffect(() => {\n    //     if (!loadedFromStorage) return;\n    //     const graphFromParams = Object.fromEntries(new URLSearchParams(window.location.search).entries()).g;\n    //     if (graphFromParams) {\n    //         const graphContent = JSON.parse(window.atob(graphFromParams));\n    //         const gid = new Date().getTime().toString();\n    //         localStorageManager.addToFront(gid);\n    //         localStorageManager.save(gid, graphContent);\n    //         window.history.replaceState({}, document.title, window.location.pathname);\n    //         dispatcher({ type: T.ADD_GRAPH, payload: { graphID: gid } });\n    //     }\n    //     const urlParms = window.location.pathname.split('/');\n    //     const serverIDIndex = urlParms.indexOf('s');\n    //     const localIDIndex = urlParms.indexOf('l');\n    //     if (serverIDIndex !== -1 && serverIDIndex + 1 < urlParms.length) {\n    //         const serverID = urlParms[serverIDIndex + 1];\n    //         dispatcher({ type: T.ADD_GRAPH, payload: { serverID } });\n    //     }\n    //     if (localIDIndex !== -1 && localIDIndex + 1 < urlParms.length) {\n    //         const graphID = urlParms[localIDIndex + 1];\n    //         dispatcher({ type: T.ADD_GRAPH, payload: { graphID } });\n    //     }\n    // }, [loadedFromStorage]);\n\n    return (\n        <div\n            style={{\n                flex: 1,\n                flexDirection: 'column',\n                display: 'flex',\n                width: '100%',\n            }}\n        >\n            <TabBar superState={superState} dispatcher={dispatcher} />\n            <div style={{ flex: 1, background: 'white' }} className=\"graph-container\" ref={graphContainerRef}>\n                {superState.graphs.map((el, i) => (\n                    <Graph\n                        el={el}\n                        i={i}\n                        superState={superState}\n                        graphContainerRef={graphContainerRef}\n                        dispatcher={dispatcher}\n                        key={el.graphID}\n                        active={i === superState.curGraphIndex}\n                        graphID={el.graphID}\n                        serverID={el.serverID}\n                        graphML={el.graphML}\n                        projectName={el.projectName}\n                        fileHandle={el.fileHandle}\n                        fileName={el.fileName}\n                    />\n                ))}\n                <ZoomComp dispatcher={dispatcher} superState={superState} />\n            </div>\n        </div>\n    );\n};\n\nexport default GraphComp;\n","import React, { useState, useEffect } from 'react';\nimport ReactModal from 'react-modal';\nimport './parent-modal.css';\n\nReactModal.setAppElement('#root');\n\nconst Modal = ({\n    closeModal, ModelOpen, title, children,\n}) => {\n    const [curClass, setCurClass] = useState('');\n    const [isOpen, setIsOpen] = useState(ModelOpen);\n    const [stid, setStid] = useState(null);\n    useEffect(() => {\n        if (ModelOpen === true) {\n            setIsOpen(true);\n            setCurClass('closing');\n            clearTimeout(stid);\n            setStid(setTimeout(() => {\n                setIsOpen(true);\n                setCurClass('');\n            }, 20));\n        } else {\n            setCurClass('closing');\n            clearTimeout(stid);\n            setStid(setTimeout(() => {\n                setIsOpen(false);\n            }, 400));\n        }\n    }, [ModelOpen]);\n\n    if (!isOpen) return '';\n    return (\n        <ReactModal\n            isOpen={isOpen}\n            contentLabel=\"onRequestClose Example\"\n            // onRequestClose={closeModal} // prevent modal from closing when clicked outside\n            className=\"Modal\"\n            overlayClassName={`Overlay ${curClass}`}\n        >\n            <div className={`modal-content ${curClass}`}>\n                <div className=\"modal-header\">\n                    <div className=\"modal-title h4\">{title}</div>\n                    <button type=\"button\" className=\"close\" onClick={closeModal}>\n                        {closeModal ? <span aria-hidden=\"true\">×</span> : ''}\n                        <span className=\"sr-only\">Close</span>\n                    </button>\n                </div>\n                <div className=\"modal-body\">\n                    {children}\n                </div>\n            </div>\n        </ReactModal>\n    );\n};\nexport default Modal;\n","import React, { useState, useEffect } from 'react';\nimport './graph-comp-details.css';\nimport ParentModal from './ParentModal';\n\nconst ModalComp = ({ closeModal, superState }) => {\n    const [data, setData] = useState({});\n    const [errorMessage, setErrorMessage] = useState('');\n    const { modalPayload, ModelOpen } = superState;\n    const {\n        cb, title, submitText, Children, defaultStyle, defaultLabel, labelAllowed,\n    } = modalPayload;\n\n    useEffect(() => {\n        setErrorMessage('');\n    }, [ModelOpen]);\n\n    useEffect(() => {\n        setData({ label: defaultLabel || '', style: defaultStyle });\n        setErrorMessage('');\n    }, [defaultLabel, defaultStyle]);\n\n    const submit = (e) => {\n        e.preventDefault();\n        const message = cb(data.label, data.style);\n        if (message.ok) {\n            setErrorMessage('');\n            setData({ label: defaultLabel || '', style: defaultStyle });\n            closeModal();\n        } else setErrorMessage(message.err);\n    };\n\n    return (\n        <ParentModal closeModal={closeModal} ModelOpen={ModelOpen} title={title}>\n            <form onSubmit={submit}>\n                <div className=\"modal-content-body\">\n                    <Children data={data} setData={setData} labelAllowed={labelAllowed} />\n                    {errorMessage ? <div className=\"err\">{errorMessage}</div> : <></>}\n                </div>\n                <div className=\"modal-footer\">\n                    <button type=\"submit\" className=\"btn btn-primary\">{submitText}</button>\n                </div>\n            </form>\n        </ParentModal>\n    );\n};\nexport default ModalComp;\n","/* eslint-disable no-alert */\nimport {\n    FaSave, FaUndo, FaRedo, FaTrash, FaFileImport, FaPlus, FaDownload, FaEdit, FaRegTimesCircle, FaShare, FaHistory,\n    FaHammer, FaBug, FaBomb, FaToggleOn, FaThermometerEmpty,\n} from 'react-icons/fa';\n\nimport {\n    // FiChevronDown, FiChevronsDown, FiChevronsUp, FiChevronUp,\n    FiPlay, FiStopCircle, FiToggleLeft, FiTriangle,\n} from 'react-icons/fi';\n\nimport {\n    createNode, editElement, deleteElem, downloadImg, saveAction, saveGraphMLFile,\n    createFile, readFile, clearAll, undo, redo, openShareModal, viewHistory,\n    toggleServer,\n    // openSettingModal,\n} from './toolbarFunctions';\n\nconst toolbarList = (state, dispatcher) => [\n    {\n        type: 'action',\n        text: 'Node',\n        icon: FaPlus,\n        action: createNode,\n        active: state.curGraphInstance,\n        visibility: true,\n        hotkey: 'Ctrl+G',\n    },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'Create',\n        icon: FaFileImport,\n        action: createFile,\n        active: true,\n        visibility: true,\n    },\n    {\n        type: 'file-upload',\n        text: 'Open',\n        icon: FaFileImport,\n        action: readFile,\n        active: true,\n        visibility: true,\n        hotkey: 'Ctrl+O',\n    },\n    {\n        type: 'action',\n        text: 'Save',\n        icon: FaSave,\n        action: saveGraphMLFile,\n        active: state.curGraphInstance,\n        visibility: true,\n    },\n    {\n        type: 'action',\n        text: 'Save As',\n        icon: FaSave,\n        action: (s, d) => saveAction(s, d),\n        active: true,\n        visibility: true,\n    },\n    {\n        type: 'action',\n        text: 'Empty',\n        icon: FaThermometerEmpty,\n        action: clearAll,\n        active: true,\n        visibility: true,\n        hotkey: 'Ctrl+Backspace',\n    },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'Undo',\n        icon: FaUndo,\n        action: undo,\n        active: state.undoEnabled,\n        visibility: true,\n        hotkey: 'Ctrl+Z',\n    },\n    {\n        type: 'action',\n        text: 'Redo',\n        icon: FaRedo,\n        action: redo,\n        active: state.redoEnabled,\n        visibility: true,\n        hotkey: 'Ctrl+Shift+Z,Ctrl+Y',\n    },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'Edit',\n        icon: FaEdit,\n        action: editElement,\n        active: (state.eleSelected && state.eleSelectedPayload.type !== 'MIX'),\n        visibility: true,\n        hotkey: 'Ctrl+E',\n    },\n    {\n        type: 'action',\n        text: 'Delete',\n        icon: FaTrash,\n        action: deleteElem,\n        active: state.eleSelected,\n        visibility: true,\n        hotkey: 'Delete,Backspace,Del,Clear',\n    },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'History',\n        icon: FaHistory,\n        action: viewHistory,\n        active: state.curGraphInstance,\n        visibility: true,\n    },\n    { type: 'vsep' },\n    // server buttons\n    {\n        type: 'action',\n        text: 'Server',\n        icon: state.isWorkflowOnServer ? FaToggleOn : FiToggleLeft,\n        action: () => toggleServer(state, dispatcher),\n        active: true,\n        visibility: true,\n    },\n    {\n        type: 'action',\n        text: 'Build',\n        icon: FaHammer,\n        action: () => state.curGraphInstance && state.curGraphInstance.build(),\n        active: state.isWorkflowOnServer,\n        visibility: state.isWorkflowOnServer,\n    },\n    {\n        type: 'action',\n        text: 'Debug',\n        icon: FaBug,\n        action: () => state.curGraphInstance && state.curGraphInstance.debug(),\n        active: state.isWorkflowOnServer,\n        visibility: state.isWorkflowOnServer,\n    },\n    {\n        type: 'action',\n        text: 'Run',\n        icon: FiPlay,\n        action: () => state.curGraphInstance && state.curGraphInstance.run(),\n        active: state.isWorkflowOnServer,\n        visibility: state.isWorkflowOnServer,\n    },\n    {\n        type: 'action',\n        text: 'Clear',\n        icon: FaRegTimesCircle,\n        action: () => state.curGraphInstance && state.curGraphInstance.clear(),\n        active: state.isWorkflowOnServer,\n        visibility: state.isWorkflowOnServer,\n    },\n    {\n        type: 'action',\n        text: 'Stop',\n        icon: FiStopCircle,\n        action: () => state.curGraphInstance && state.curGraphInstance.stop(),\n        active: state.isWorkflowOnServer,\n        visibility: state.isWorkflowOnServer,\n    },\n    {\n        type: 'action',\n        text: 'Destroy',\n        icon: FaBomb,\n        action: () => state.curGraphInstance && state.curGraphInstance.destroy(),\n        active: state.isWorkflowOnServer,\n        visibility: state.isWorkflowOnServer,\n    },\n\n    // Not being implemented in version 1\n    // {\n    //     type: 'action',\n    //     text: 'Push',\n    //     icon: FiChevronUp,\n    //     action: () => state.curGraphInstance && state.curGraphInstance.pushToServer(),\n    //     active: state.curGraphInstance && state.isWorkflowOnServer,\n    // },\n    // {\n    //     type: 'action',\n    //     text: 'Pull',\n    //     icon: FiChevronDown,\n    //     action: () => state.curGraphInstance && state.curGraphInstance.pullFromServer(),\n    //     active: state.curGraphInstance && state.isWorkflowOnServer,\n    // },\n    // {\n    //     type: 'action',\n    //     text: 'Force Push',\n    //     icon: FiChevronsUp,\n    //     action: () => state.curGraphInstance && state.curGraphInstance.forcePushToServer(),\n    //     active: state.curGraphInstance && state.isWorkflowOnServer,\n    // },\n    // {\n    //     type: 'action',\n    //     text: 'Force Pull',\n    //     icon: FiChevronsDown,\n    //     action: () => state.curGraphInstance && state.curGraphInstance.forcePullFromServer(),\n    //     active: state.curGraphInstance && state.isWorkflowOnServer,\n    // },\n    // { type: 'vsep' },\n    { type: 'space' },\n    // Not being implemented in version 1\n    // {\n    //     type: 'action',\n    //     text: 'Settings',\n    //     icon: FaRegSun,\n    //     action: openSettingModal,\n    //     active: true,\n    // },\n    {\n        type: 'action',\n        text: 'Contribute',\n        icon: FiTriangle,\n        action: () => { window.open('https://github.com/ControlCore-Project/concore-editor', '_blank'); },\n        active: true,\n        visibility: true,\n    },\n    {\n        type: 'action',\n        text: 'Share',\n        icon: FaShare,\n        action: openShareModal,\n        active: true,\n        visibility: true,\n    },\n    {\n        type: 'menu',\n        text: 'Export',\n        icon: FaDownload,\n        action: (s, d) => [\n            { fn: () => downloadImg(s, d, 'JPG'), name: 'JPG' },\n            { fn: () => downloadImg(s, d, 'PNG'), name: 'PNG' },\n        ],\n        visibility: true,\n        active: true,\n    },\n    { type: 'vsep' },\n];\n\nexport default toolbarList;\n","import React from 'react';\nimport Switch from 'rc-switch';\nimport { Menu, MenuItem, MenuButton } from '@szhsin/react-menu';\n\nfunction DropDown({\n    Icon, text, action, active, visibility, tabIndex, hotkey,\n}) {\n    return (\n        <Menu menuButton={(\n            <MenuButton>\n                <ActionButton {...{\n                    Icon, text, action, active, visibility, tabIndex, hotkey,\n                }}\n                />\n            </MenuButton>\n        )}\n        >\n            {action().map(({ fn, name }) => <MenuItem onClick={fn} key={name}>{name}</MenuItem>)}\n        </Menu>\n    );\n}\n\nconst FileUploader = ({\n    Icon, text, active, visibility, tabIndex, hotkey, superState,\n}) => (\n    <ActionButton {...{\n        Icon, text, active, visibility, tabIndex, action: () => superState.fileRef.current.click(), hotkey,\n    }}\n    />\n);\n\nconst Switcher = ({\n    text, action, active, tabIndex,\n}) => (\n    <div\n        role=\"button\"\n        tabIndex={tabIndex}\n        className={`tool ${active ? 'active' : ''}`}\n        onClick={action}\n        onKeyDown={(ev) => ev.key === ' ' && action()}\n    >\n        <Switch\n            onChange={action}\n            checked={active}\n            className=\"react-switch\"\n        />\n        <div>\n            {text}\n        </div>\n    </div>\n);\n\nconst ActionButton = ({\n    Icon, text, action, active, visibility, tabIndex, hotkey,\n}) => (\n    <div\n        role=\"button\"\n        id={`action_${tabIndex}`}\n        tabIndex={tabIndex}\n        className={`tool ${active ? 'active' : ''}`}\n        onClick={() => (active && action())}\n        onKeyDown={(ev) => active && ev.key === ' ' && action()}\n        data-tip={hotkey ? hotkey.split(',')[0] : ''}\n        style={{ display: `${visibility ? '' : 'none'}` }}\n    >\n        <div className=\"icon\"><Icon size=\"20\" /></div>\n        <div style={{ fontSize: 14 }}>{text}</div>\n    </div>\n);\n\nconst TextBox = ({ children }) => (\n    <div className=\"tool\" style={{ width: 'auto' }}>\n        <div className=\"middle tool-text-only\" style={{ fontSize: 16, color: '#888', height: '100%' }}>\n            {children}\n        </div>\n    </div>\n);\n\nconst Vsep = () => <div className=\"Vsep sep\" />;\nconst Hsep = () => <div className=\"hsep sep\" />;\nconst Space = () => <div className=\"space\" />;\n\nexport {\n    ActionButton, Vsep, Hsep, Space, TextBox, Switcher, DropDown, FileUploader,\n};\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport hotkeys from 'hotkeys-js';\nimport toolbarList from '../toolbarActions/toolbarList';\nimport '@szhsin/react-menu/dist/index.css';\nimport './header.css';\nimport {\n    ActionButton, Vsep, Hsep, Space, TextBox, Switcher, DropDown, FileUploader,\n} from './HeaderComps';\nimport 'rc-switch/assets/index.css';\n// import ServerActions from './serverActions/ServerActions';\n\nconst setHotKeys = (actions) => {\n    let keys = '';\n    const map = {};\n    actions.forEach((action, i) => {\n        if (action.hotkey) {\n            action.hotkey.split(',').forEach((key) => {\n                [key, key.replace('Ctrl', 'Command')].forEach((k) => {\n                    keys += `${k},`;\n                    map[k] = document.getElementById(`action_${i + 1}`);\n                });\n            });\n        }\n    });\n    hotkeys(keys, (event, handler) => {\n        event.preventDefault();\n        map[handler.shortcut].click();\n    });\n};\n\nconst Header = ({ superState, dispatcher }) => {\n    const actions = toolbarList(superState, dispatcher);\n    React.useEffect(() => {\n        setHotKeys(actions, superState, dispatcher);\n    }, []);\n\n    return (\n        <header className=\"header\">\n            <section className=\"middle titlebar\">\n                {\n                    superState.curGraphInstance ? `${\n                        superState.curGraphInstance.projectName\n                    } - concore Editor` : 'untitled'\n                }\n            </section>\n            <section className=\"toolbar\">\n                {\n                    actions.map(({\n                        text, active, visibility, action, icon, type, hotkey,\n                    }, i) => {\n                        const props = {\n                            text,\n                            active,\n                            visibility,\n                            tabIndex: i + 1,\n                            key: text,\n                            action: (e) => action(superState, dispatcher, e),\n                            Icon: icon,\n                            hotkey,\n                        };\n                        switch (type) {\n                        case 'vsep': return <Vsep key={`${`v${i}`}`} />;\n                        case 'space': return <Space key={`${`s${i}`}`} />;\n                        case 'switch': return <Switcher {...props} />;\n                        case 'menu': return <DropDown {...props} />;\n                        case 'file-upload': return <FileUploader {...props} superState={superState} />;\n                        case 'action': return <ActionButton {...props} />;\n                        // case 'serverActions': return <ServerActions superState={superState} />;\n                        default: return <></>;\n                        }\n                    })\n                }\n            </section>\n            <Hsep />\n        </header>\n\n    );\n};\n\nexport {\n    Header, ActionButton, Vsep, Hsep, Space, TextBox,\n};\n","import React, { useEffect, useState, useCallback } from 'react';\nimport Modal from './ParentModal';\nimport './project-details.css';\nimport { actionType as T } from '../../reducer';\nimport localStorageManager from '../../graph-builder/local-storage-manager';\n\nconst ProjectDetails = ({ superState, dispatcher }) => {\n    const curGraph = superState.graphs[superState.curGraphIndex];\n    const [projectName, setProjectName] = useState('Untitled');\n    const [authorName, setAuthorName] = useState('Default');\n    // const [serverID, setServerID] = useState('');\n    const inputRef = useCallback((node) => node && node.focus(), []);\n    const { newGraphModal } = superState;\n    const editDetailsModal = superState.editDetailsModal || (curGraph && !curGraph.projectName);\n\n    const setProjAuthorName = (a) => {\n        setAuthorName(a);\n        dispatcher({\n            type: T.SET_AUTHOR,\n            payload: a,\n        });\n    };\n\n    useEffect(() => {\n        if (superState.editDetailsModal && curGraph) {\n            setProjectName(curGraph.projectName);\n        } else setProjectName('');\n    }, [superState.authorName, superState.editDetailsModal, curGraph]);\n\n    useEffect(() => {\n        if (superState.authorName) setAuthorName(superState.authorName);\n        else {\n            const authorNameE = localStorageManager.getAuthorName();\n            setProjAuthorName(authorNameE);\n        }\n    }, []);\n\n    const submit = (e) => {\n        e.preventDefault();\n        if (newGraphModal) dispatcher({ type: T.ADD_GRAPH, payload: { projectName } });\n        else if (editDetailsModal) {\n            superState.curGraphInstance.setProjectName(projectName);\n            dispatcher({ type: T.SET_EDIT_DETAILS_MODAL, payload: false });\n        }\n        setProjAuthorName(authorName);\n        localStorageManager.setAuthorName(authorName);\n    };\n\n    const openExisting = () => {\n        superState.fileRef.current.click();\n    };\n\n    const closeModal = () => {\n        if (superState.newGraphModal) dispatcher({ type: T.SET_NEW_GRAPH_MODAL, payload: false });\n        else if (superState.editDetailsModal) dispatcher({ type: T.SET_EDIT_DETAILS_MODAL, payload: false });\n    };\n    // const loadFromServer = () => {\n    //     dispatcher({ type: T.ADD_GRAPH, payload: { serverID } });\n    // };\n    const NewWorkflow = () => (\n        <>\n            {/* <div className=\"divider\" />\n            <input\n                placeholder=\"Enter the Server ID of Workflow\"\n                value={serverID}\n                onChange={(e) => setServerID(e.target.value)}\n                className=\"serverIDText\"\n            />\n            <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                onClick={loadFromServer}\n            >\n                Load From Server\n\n            </button> */}\n            <div className=\"divider\" />\n            <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                onClick={openExisting}\n            >\n                Open Existing From GraphML File\n\n            </button>\n        </>\n    );\n\n    return (\n        <Modal\n            ModelOpen={newGraphModal || editDetailsModal}\n            closeModal={superState.editDetailsModal || superState.newGraphModal ? closeModal : null}\n            title=\"Project Details\"\n        >\n            <form className=\"proj-details\" onSubmit={submit}>\n                <span>Workflow Name</span>\n                <input\n                    ref={inputRef}\n                    placeholder=\"Title of workflow\"\n                    required\n                    value={projectName}\n                    onChange={(e) => setProjectName(e.target.value)}\n                />\n                <span>Author</span>\n                <input\n                    placeholder=\"Author of workflow\"\n                    value={authorName}\n                    onChange={(e) => setAuthorName(e.target.value)}\n                    required\n                />\n                <div className=\"expand\">\n                    <button type=\"submit\" className=\"btn btn-primary\">Save</button>\n                </div>\n                <div className=\"expand\">\n                    {newGraphModal && <NewWorkflow />}\n                </div>\n            </form>\n        </Modal>\n    );\n};\n\nexport default ProjectDetails;\n","import React, { useEffect, useState } from 'react';\nimport Modal from './ParentModal';\nimport './shareModal.css';\nimport { actionType as T } from '../../reducer';\n\nconst ShareModal = ({ superState, dispatcher }) => {\n    const [serializedGraph, setSerializedGraph] = useState('');\n    const [copyText, setCopyText] = useState('Copy');\n    const cond = superState.shareModal && superState.curGraphInstance;\n    useEffect(() => {\n        if (cond) {\n            setSerializedGraph(superState.curGraphInstance.serializeGraph());\n            setCopyText('Copy');\n        }\n    }, [cond]);\n\n    const closeModal = () => {\n        dispatcher({ type: T.SET_SHARE_MODAL, payload: false });\n    };\n    const link = `${window.location.protocol}//${window.location.host}${window.location.pathname}?g=${serializedGraph}`;\n    const copy = () => {\n        navigator.clipboard.writeText(link).then(() => {\n            setCopyText('Copied!');\n            document.getElementsByClassName('preDiv')[0].focus();\n            document.getElementsByClassName('preDiv')[0].select();\n        });\n    };\n\n    return (\n        <Modal\n            ModelOpen={superState.shareModal}\n            title=\"Shareable Link\"\n            closeModal={closeModal}\n        >\n            <div className=\"share-modal\">\n                <input readOnly className=\"preDiv\" value={link} />\n                <button onClick={copy} type=\"button\" className=\"copyBtn\">{copyText}</button>\n            </div>\n\n        </Modal>\n    );\n};\n\nexport default ShareModal;\n","import React from 'react';\nimport './codeEdit.css';\n\nconst CodeEdit = ({\n    pre, post, value, onChange, height, docString,\n}) => {\n    const inputRef = React.createRef();\n    const parseMD = (s) => s.split('**').map((e, i) => {\n        if (i % 2) return <span key={e}><b>{e}</b></span>;\n        return <span key={e}>{e}</span>;\n    });\n    return (\n        <div\n            className=\"textField\"\n            onClick={() => inputRef.current.focus()}\n            onKeyDown={() => inputRef.current.focus()}\n            role=\"textbox\"\n            tabIndex={0}\n        >\n            {docString\n                ? (\n                    <div className=\"docStr\">\n                        {parseMD(docString)}\n                    </div>\n                ) : <div />}\n            <br />\n            {pre\n                ? (\n                    <textarea\n                        className=\"preTextField\"\n                        value={pre}\n                        readOnly\n                        spellCheck=\"false\"\n                    />\n                ) : <div />}\n            <textarea\n                className=\"mainTextField\"\n                spellCheck=\"false\"\n                {...{ value, onChange }}\n                data-gramm_editor=\"false\"\n                style={{ height, width: '90vw' }}\n                ref={inputRef}\n            />\n            {post\n                ? (\n                    <textarea\n                        className=\"postTextField\"\n                        readOnly\n                        value={post}\n                        spellCheck=\"false\"\n                    />\n                ) : <div />}\n        </div>\n    );\n};\n\nexport default CodeEdit;\n","import React, { useState, useEffect } from 'react';\nimport Modal from './ParentModal';\nimport './settings.css';\nimport { actionType as T } from '../../reducer';\nimport CodeEdit from '../CodeEdit';\nimport { nodeValidatorFormat, edgeValidatorFormat } from '../../config/defaultValidators';\n\nconst SettingsModal = ({ superState, dispatcher }) => {\n    const [nodeValidator, setNodeValidator] = useState('');\n    const [edgeValidator, setEdgeValidator] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n    useEffect(() => {\n        if (superState.curGraphInstance) {\n            setNodeValidator(superState.curGraphInstance.getNodeValidator());\n            setEdgeValidator(superState.curGraphInstance.getEdgeValidator());\n        }\n    }, [superState.curGraphInstance]);\n\n    const close = () => dispatcher({ type: T.SET_SETTING_MODAL, payload: false });\n    const submit = () => {\n        try {\n            superState.curGraphInstance.setEdgeNodeValidator({\n                nodeValidator: `(node, nodes, edges, type)=>{${nodeValidator}}`,\n                edgeValidator: `(edge, nodes, edges, type)=>{${edgeValidator}}`,\n            });\n            dispatcher({ type: T.SET_SETTING_MODAL, payload: false });\n            setErrorMessage('');\n        } catch (e) {\n            setErrorMessage(e.message);\n        }\n    };\n\n    return (\n        <Modal\n            ModelOpen={superState.settingsModal}\n            closeModal={close}\n            title=\"Settings\"\n        >\n            <div className=\"setting-container\">\n                <div>\n                    <h3>Node Validator</h3>\n                    <CodeEdit\n                        pre=\"function validateNode(node, nodes, edges, type) {\"\n                        post=\"}\"\n                        value={nodeValidator}\n                        onChange={(e) => setNodeValidator(e.target.value)}\n                        height={200}\n                        docString={nodeValidatorFormat}\n                    />\n                </div>\n                <div>\n                    <h3>Edge  Validator</h3>\n                    <CodeEdit\n                        pre=\"function validateEdge(edge, nodes, edges, type) {\"\n                        post=\"}\"\n                        value={edgeValidator}\n                        onChange={(e) => setEdgeValidator(e.target.value)}\n                        height={200}\n                        docString={edgeValidatorFormat}\n                    />\n                </div>\n                <div className=\"error\">{errorMessage}</div>\n\n                <div className=\"footer\">\n                    <button type=\"submit\" className=\"btn btn-primary\" onClick={submit}>Save</button>\n                </div>\n            </div>\n        </Modal>\n    );\n};\n\nexport default SettingsModal;\n","import React, { useEffect } from 'react';\nimport { FaFileImport } from 'react-icons/fa';\nimport './file-drag-drop.css';\nimport { actionType as T } from '../reducer';\nimport { readFile } from '../toolbarActions/toolbarFunctions';\n\nconst app = ({ superState, dispatcher }) => {\n    const fileRef = React.useRef();\n\n    useEffect(() => {\n        dispatcher({ type: T.SET_FILE_REF, payload: fileRef });\n        const p = document.getElementsByTagName('body')[0];\n        const c = document.getElementsByClassName('drag-drop-area')[0];\n        let cc = 0;\n        p.addEventListener('dragenter', (e) => {\n            e.preventDefault();\n            cc += 1;\n            if (cc === 1) c.classList.remove('hidden');\n        });\n        p.addEventListener('dragleave', (e) => {\n            e.preventDefault();\n            cc -= 1;\n            if (cc === 0) c.classList.add('hidden');\n        });\n\n        p.addEventListener('dragover', (e) => {\n            e.preventDefault();\n        });\n        ['dragend', 'dragexit', 'drop'].forEach((dragEvent) => {\n            p.addEventListener(dragEvent, (e) => {\n                e.preventDefault();\n                cc = 0;\n                c.classList.add('hidden');\n            });\n        });\n\n        p.addEventListener('drop', (e) => {\n            e.preventDefault();\n            fileRef.current.value = null;\n            if (e.dataTransfer.files.length === 1\n                && e.dataTransfer.files[0].name.split('.').slice(-1)[0] === 'graphml') {\n                readFile(superState, dispatcher, { target: e.dataTransfer });\n            }\n        });\n    }, []);\n    return (\n        <div className=\"drag-drop-area hidden\">\n            <div className=\"inner\">\n                <FaFileImport size={100} style={{ color: '#1e88e5' }} />\n                <div>\n                    <input\n                        type=\"file\"\n                        ref={fileRef}\n                        onClick={(e) => { e.target.value = null; }}\n                        style={{ display: 'none' }}\n                        accept=\".graphml\"\n                        onChange={(e) => readFile(superState, dispatcher, e)}\n                    />\n                    <span className=\"arrow\">&#10230;</span>\n                    <h1 className=\"text\">Drop the File anywhere to open</h1>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default app;\n","import React, { useEffect, useState } from 'react';\nimport Modal from './ParentModal';\nimport './settings.css';\nimport { actionType as T } from '../../reducer';\nimport GA from '../../graph-builder/graph-actions';\nimport './history.css';\n\nconst HistoryModal = ({ superState, dispatcher }) => {\n    const [curState, setcurState] = useState(0);\n    const [historyList, setHistoryList] = useState([]);\n    const [historyView, setHistoryView] = useState([]);\n    const actions = [\n        GA.ADD_NODE, GA.ADD_EDGE,\n        GA.UPDATE_NODE, GA.UPDATE_EDGE,\n        GA.DEL_NODE, GA.DEL_EDGE,\n        GA.SET_DIM, GA.SET_BENDW, GA.SET_POS,\n    ];\n    const mapActionToTrue = () => {\n        const res = {};\n        actions.forEach((action) => { res[action] = true; });\n        return res;\n    };\n    const [filterAction, setFilterAction] = useState(mapActionToTrue());\n\n    const getLabelFromID = (x) => {\n        if (superState.curGraphInstance) {\n            return superState.curGraphInstance.getLabelFromID(x);\n        }\n        return '';\n    };\n    useEffect(() => {\n        if (superState.curGraphInstance) {\n            setHistoryList([\n                ...superState.curGraphInstance.actionArr\n                    .slice().reverse().map((action, i) => ({ ...action, i })),\n            ]);\n            setcurState(\n                superState.curGraphInstance.actionArr.length\n                - superState.curGraphInstance.curActionIndex,\n            );\n        }\n    }, [superState.viewHistory, superState.graphs, superState.curGraphInstance, curState]);\n\n    const stringifyAction = (equivalent) => {\n        const par = equivalent.parameters;\n        switch (equivalent.actionName) {\n        case GA.ADD_NODE: return `Created new Node: ${par[0]}`;\n        case GA.ADD_EDGE: return `Created new Edge ${\n            getLabelFromID(par[0].id)\n        } between ${getLabelFromID(par[0].sourceID)} and ${getLabelFromID(par[0].targetID)}`;\n        case GA.UPDATE_NODE: return `Updated Label/Style for ${getLabelFromID(par[0])} node`;\n        case GA.UPDATE_EDGE: return `Updated Edge ${getLabelFromID(par[0])}`;\n        case GA.DEL_NODE: return `Deleted Node: ${getLabelFromID(par[0])}`;\n        case GA.DEL_EDGE: return `Deleted Edge: ${getLabelFromID(par[0])}`;\n        case GA.SET_POS: return `Moved node ${getLabelFromID(par[0])} on canvas`;\n        case GA.SET_DIM: return `Changed dimension of node ${getLabelFromID(par[0])}`;\n        case GA.SET_BENDW: return `Modified Bend Point of node ${getLabelFromID(par[0])}`;\n        default: return '';\n        }\n    };\n\n    const stringifyActionType = {\n        [GA.ADD_NODE]: 'NodeAddition:',\n        [GA.ADD_EDGE]: 'EdgeAddition',\n        [GA.UPDATE_NODE]: 'NodeUpdates',\n        [GA.UPDATE_EDGE]: 'EdgeUpdates',\n        [GA.DEL_NODE]: 'NodeDeletion',\n        [GA.DEL_EDGE]: 'EdgeDeletion',\n        [GA.SET_POS]: 'NodePosChange',\n        [GA.SET_DIM]: 'NodeDimensionChange',\n        [GA.SET_BENDW]: 'EdgeBend',\n    };\n\n    const restoreState = (index) => {\n        // eslint-disable-next-line no-alert\n        if (window.confirm('Are you sure to restore the selected state?')) {\n            let tempCurState = curState;\n            while (index > tempCurState) {\n                superState.curGraphInstance.undoSingleAction();\n                tempCurState += 1;\n            }\n            while (index < tempCurState) {\n                superState.curGraphInstance.redoSingleAction();\n                tempCurState -= 1;\n            }\n            setcurState(tempCurState);\n        }\n    };\n    const prefixTid = (tid, str, authorName, index, hash) => {\n        const DT = new Date(parseInt(tid, 10));\n        const date = DT.toLocaleDateString();\n        const time = DT.toLocaleTimeString();\n        const c = (\n            <>\n                <td>\n                    {\n                        index === curState ? '[Current]' : (\n                            <button className=\"a-link\" type=\"button\" onClick={() => restoreState(index)}>\n                                [Restore]\n                            </button>\n                        )\n                    }\n                </td>\n                <td>{`${date}-${time}`}</td>\n                <td>\n                    [\n                    <b>{`${authorName}`}</b>\n                    ]\n                </td>\n                <td style={{ fontWeight: 100 }}>{str}</td>\n                <td style={{ fontWeight: 100 }}>{hash}</td>\n            </>\n        );\n        // if (index === curState) return <u>{c}</u>;\n        return c;\n    };\n\n    const parseAction = ({\n        equivalent, tid, i, authorName, hash,\n    }) => prefixTid(\n        tid, stringifyAction(equivalent), authorName, i, hash,\n    );\n\n    useEffect(() => {\n        setHistoryView(historyList.filter((action) => filterAction[action.equivalent.actionName]).map(parseAction));\n    }, [filterAction, historyList]);\n\n    const close = () => dispatcher({ type: T.SET_HISTORY_MODAL, payload: false });\n    return (\n        <Modal\n            ModelOpen={superState.viewHistory}\n            closeModal={close}\n            title=\"History\"\n        >\n            <div className=\"hist-container\">\n                <fieldset>\n                    <legend>Filters</legend>\n                    {\n                        actions.map((action) => (\n                            <label htmlFor={action} className=\"filter_checkbox\" key={action}>\n                                <input\n                                    type=\"checkbox\"\n                                    name=\"filter\"\n                                    checked={filterAction[action]}\n                                    onChange={() => setFilterAction({\n                                        ...filterAction,\n                                        [action]: !filterAction[action],\n                                    })}\n                                />\n                                {stringifyActionType[action]}\n                            </label>\n                        ))\n                    }\n                </fieldset>\n                <div className=\"hist-list\">\n                    <table style={{ listStyleType: 'circle' }}>\n                        <tbody>\n                            {historyView.map((h, i) => (\n                                <tr\n                                    className={`hist-element ${i === curState ? 'active' : ''}`}\n                                    // eslint-disable-next-line react/no-array-index-key\n                                    key={i}\n                                >\n                                    {h}\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </Modal>\n    );\n};\n\nexport default HistoryModal;\n","/* eslint-disable object-shorthand */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable array-callback-return */\n/* eslint-disable no-param-reassign */\n/* eslint-disable react/state-in-constructor */\nimport React, { useEffect, useState } from 'react';\nimport FileBrowser, { FileRenderers, FolderRenderers } from 'react-keyed-file-browser';\nimport { readFile, readTextFile } from '../toolbarActions/toolbarFunctions';\nimport { actionType as T } from '../reducer';\nimport './fileBrowser.css';\n\nconst LocalFileBrowser = ({ superState, dispatcher }) => {\n    const fileRef = React.useRef();\n    const [dirButton, setDirButton] = useState(false);\n    const [fileState, setFileState] = useState([]);\n\n    useEffect(() => {\n        if (navigator.userAgent.indexOf('Edg') !== -1 || navigator.userAgent.indexOf('Chrome') !== -1) {\n            setDirButton(true);\n        }\n        dispatcher({ type: T.SET_FILE_REF, payload: fileRef });\n    }, []);\n\n    useEffect(() => {\n        // TODO - Loading file list from localStorage. Not supported by browsers.\n        // if(window.localStorage.getItem('fileList')) {\n        //     const allFiles = window.localStorage.getItem('fileList');\n        //     setFileState({ files: allFiles });\n        // }\n        window.localStorage.setItem('fileList', JSON.stringify(fileState));\n    }, [fileState]);\n\n    const handleSelectFile = (data) => {\n        const fileExtensions = ['jpeg', 'jpg', 'png', 'exe'];\n        if (fileExtensions.includes(data.fileObj.name.split('.').pop())) {\n            // eslint-disable-next-line no-alert\n            alert('Wrong file extension');\n            return;\n        }\n\n        if (data.fileObj.name.split('.').pop() === 'graphml') {\n            let foundi = -1;\n            superState.graphs.forEach((g, i) => {\n                if ((g.fileName === data.fileObj.name)) {\n                    foundi = i;\n                }\n            });\n            if (foundi !== -1) {\n                dispatcher({ type: T.CHANGE_TAB, payload: foundi });\n            } else {\n                readFile(superState, dispatcher, data.fileObj, data.fileHandle);\n            }\n        } else {\n            readTextFile(superState, dispatcher, data.fileObj, data.fileHandle);\n        }\n    };\n\n    const handleFileInDirs = async (topKey, value) => {\n        let topLevel = topKey;\n        let state = [];\n        // eslint-disable-next-line no-restricted-syntax\n        for await (const [key, valueSubDir] of value.entries()) {\n            if (valueSubDir.kind === 'file') {\n                const fileData = await valueSubDir.getFile();\n                state = state.concat([{\n                    key: `${topKey}/${value.name}/${key}`,\n                    modified: fileData.lastModified,\n                    size: fileData.size,\n                    fileObj: fileData,\n                    fileHandle: value,\n                }]);\n            } else if (valueSubDir.kind === 'directory') {\n                topLevel = `${topKey}/${value.name}`;\n                const res = await handleFileInDirs(topLevel, valueSubDir);\n                state = state.concat(res);\n            }\n        }\n        return state;\n    };\n\n    const newFeature = async () => {\n        const dirHandle = await window.showDirectoryPicker();\n        let state = [];\n        // eslint-disable-next-line no-restricted-syntax\n        for await (const [key, value] of dirHandle.entries()) {\n            if (value.kind === 'file') {\n                const fileData = await value.getFile();\n                state = state.concat([{\n                    key: `${dirHandle.name}/${key}`,\n                    modified: fileData.lastModified,\n                    size: fileData.size,\n                    fileObj: fileData,\n                    fileHandle: value,\n                }]);\n            } else if (value.kind === 'directory') {\n                const res = await handleFileInDirs(dirHandle.name, value);\n                state = state.concat(res);\n            }\n        }\n        setFileState([]);\n        setFileState(state);\n    };\n\n    const newFeatureFile = async () => {\n        const pickerOpts = {\n            types: [\n                {\n                    description: 'Graphml',\n                    accept: {\n                        'text/graphml': ['.graphml'],\n                    },\n                },\n            ],\n            excludeAcceptAllOption: true,\n            multiple: false,\n        };\n\n        const [fileHandle] = await window.showOpenFilePicker(pickerOpts);\n        const fileObj = await fileHandle.getFile();\n        readFile(superState, dispatcher, fileObj, fileHandle);\n    };\n\n    return (\n        <div>\n            {!dirButton && (\n                <label\n                    className=\"inputButton\"\n                    htmlFor=\"fileButton\"\n                >\n                    Upload Directory\n                    <input\n                        type=\"file\"\n                        accept=\".py, .m, .c, .cpp, .v, .sh\"\n                        id=\"fileButton\"\n                        style={{ display: 'none' }}\n                        onClick={(e) => { e.target.value = null; }}\n                        onChange={(e) => {\n                            setFileState([]);\n                            setFileState((state) => {\n                                for (let i = 0; i < e.target.files.length; i += 1) {\n                                    state = state.concat([{\n                                        key: e.target.files[i].webkitRelativePath,\n                                        modified: e.target.files[i].lastModified,\n                                        size: e.target.files[i].size,\n                                        fileObj: e.target.files[i],\n                                    }]);\n                                }\n                                return state;\n                            });\n                            window.localStorage.setItem('fileList', JSON.stringify(fileState));\n                        }}\n                        directory\n                        webkitdirectory=\"true\"\n                    />\n                </label>\n            ) }\n            {dirButton && (\n                <button\n                    type=\"button\"\n                    className=\"inputButton\"\n                    disabled={!dirButton}\n                    onClick={newFeature}\n                >\n                    Upload Directory\n                </button>\n            )}\n            {!dirButton\n                && (\n                    <input\n                        type=\"file\"\n                        ref={fileRef}\n                        onClick={(e) => { e.target.value = null; }}\n                        style={{ display: 'none' }}\n                        accept=\".graphml\"\n                        onChange={(e) => readFile(superState, dispatcher, e.target.files[0])}\n                    />\n                )}\n            {dirButton\n                && (\n                    <button\n                        type=\"button\"\n                        ref={fileRef}\n                        className=\"inputButton\"\n                        disabled={!dirButton}\n                        style={{ display: 'none' }}\n                        onClick={newFeatureFile}\n                        label=\"File Upload\"\n                    />\n                    // <input\n                    //     type=\"file\"\n                    //     ref={fileRef}\n                    //     onClick={(e) => { e.target.value = null; }}\n                    //     style={{ display: 'none' }}\n                    //     accept=\".graphml\"\n                    //     onChange={(e) => readFile(superState, dispatcher, e.target.files[0])}\n                    // />\n                )}\n            <h4>\n                Folder Name :\n                {' '}\n                {fileState[0] ? fileState[0].key.split('/')[0] : '' }\n            </h4>\n            <FileBrowser\n                files={fileState}\n                onSelectFile={handleSelectFile}\n                detailRenderer={() => null}\n                fileRenderer={FileRenderers.TableFile}\n                folderRenderer={FolderRenderers.TableFolder}\n            />\n        </div>\n    );\n};\nexport default LocalFileBrowser;\n","import React, { useState, useEffect } from 'react';\nimport Editor from 'react-simple-code-editor';\nimport { highlight, languages } from 'prismjs/components/prism-core';\nimport { saveAs } from 'file-saver';\nimport Modal from './ParentModal';\nimport './file-edit.css';\nimport 'prismjs/components/prism-bash';\nimport 'prismjs/components/prism-clike';\nimport 'prismjs/components/prism-c';\nimport 'prismjs/components/prism-cpp';\nimport 'prismjs/components/prism-matlab';\nimport 'prismjs/components/prism-verilog';\nimport 'prismjs/components/prism-python';\nimport 'prismjs/components/prism-javascript';\nimport 'prismjs/themes/prism.css';\nimport { actionType as T } from '../../reducer';\n\nconst FileEditModal = ({ superState, dispatcher }) => {\n    const [codeStuff, setCodeStuff] = useState('');\n    const [fileName, setFileName] = useState('');\n    const [dirButton, setDirButton] = useState(false);\n\n    useEffect(() => {\n        if (navigator.userAgent.indexOf('Edg') !== -1 || navigator.userAgent.indexOf('Chrome') !== -1) {\n            setDirButton(true);\n        }\n    }, []);\n\n    const close = () => {\n        dispatcher({ type: T.EDIT_TEXTFILE, payload: { show: false } });\n        setCodeStuff('');\n        setFileName('');\n    };\n\n    async function submit() {\n        if (superState.fileHandle) {\n            const stream = await superState.fileHandle.createWritable();\n            await stream.write(codeStuff);\n            await stream.close();\n        } else {\n            // eslint-disable-next-line no-alert\n            alert('Switch to Edge/Chrome!');\n        }\n        dispatcher({ type: T.EDIT_TEXTFILE, payload: { show: false } });\n    }\n\n    async function saveAsSubmit() {\n        const handle = await window.showSaveFilePicker();\n        const stream = await handle.createWritable();\n        await stream.write(codeStuff);\n        await stream.close();\n        // dispatcher({ type: T.EDIT_TEXTFILE, payload: { show: false } });\n    }\n\n    async function saveSubmit() {\n        // eslint-disable-next-line no-alert\n        const newFileName = prompt('Filename:');\n        const bytes = new TextEncoder().encode(codeStuff);\n        const blob = new Blob([bytes], { type: 'application/json;charset=utf-8' });\n        saveAs(blob, newFileName);\n        // dispatcher({ type: T.EDIT_TEXTFILE, payload: { show: false } });\n    }\n\n    useEffect(async () => {\n        if (superState.fileObj) {\n            setFileName(superState.fileObj.name);\n            const fr = new FileReader();\n            fr.onload = (x) => {\n                setCodeStuff(x.target.result);\n            };\n            if (superState.fileHandle) fr.readAsText(await superState.fileHandle.getFile());\n            else fr.readAsText(superState.fileObj);\n        }\n    }, [superState.fileObj]);\n\n    function highlightSyntax(code) {\n        const extensions = ['v', 'c', 'h', 'hpp', 'cpp', 'py', 'm', 'sh'];\n        const fileEx = fileName.split('.').pop();\n        if (extensions.includes(fileEx)) {\n            switch (fileEx) {\n            case 'v': return highlight(code, languages.verilog, 'verilog');\n            case 'c': return highlight(code, languages.c, 'c');\n            case 'h': return highlight(code, languages.c, 'c');\n            case 'hpp': return highlight(code, languages.c, 'c');\n            case 'cpp': return highlight(code, languages.cpp, 'cpp');\n            case 'py': return highlight(code, languages.python, 'python');\n            case 'm': return highlight(code, languages.matlab, 'matlab');\n            case 'sh': return highlight(code, languages.bash, 'bash');\n            default: return highlight(code, languages.plaintext);\n            }\n        }\n        return highlight(code, languages.plaintext);\n    }\n\n    return (\n        <Modal\n            ModelOpen={superState.textFileModal}\n            closeModal={close}\n            title={fileName}\n        >\n            <div>\n                <div className=\"save-bar\">\n                    {fileName\n                        && (\n                            <button type=\"submit\" className=\"btn btn-primary\" onClick={submit}>Save</button>\n                        )}\n                    {dirButton && (\n                        <button type=\"submit\" className=\"btn btn-primary\" onClick={saveAsSubmit}>Save As</button>\n                    )}\n                    {!dirButton && (\n                        <button type=\"submit\" className=\"btn btn-primary\" onClick={saveSubmit}>Save As</button>\n                    )}\n                </div>\n                <div className=\"setting-container\">\n                    <Editor\n                        value={codeStuff}\n                        onValueChange={(e) => setCodeStuff(e)}\n                        highlight={(code) => highlightSyntax(code)}\n                        padding={10}\n                        style={{\n                            fontFamily: '\"Arial\", \"Helvetica\", sans-serif',\n                            fontSize: 16,\n                            minHeight: '100vh',\n                            minWidth: '90vw',\n                            border: '1px solid black',\n                        }}\n                    />\n                </div>\n                <div className=\"save-bar\">\n                    {fileName\n                        && (\n                            <button type=\"submit\" className=\"btn btn-primary\" onClick={submit}>Save</button>\n                        )}\n                    {dirButton && (\n                        <button type=\"submit\" className=\"btn btn-primary\" onClick={saveAsSubmit}>Save As</button>\n                    )}\n                    {!dirButton && (\n                        <button type=\"submit\" className=\"btn btn-primary\" onClick={saveSubmit}>Save As</button>\n                    )}\n                </div>\n            </div>\n        </Modal>\n    );\n};\n\nexport default FileEditModal;\n","import React, { useReducer } from 'react';\nimport './App.css';\nimport ReactTooltip from 'react-tooltip';\nimport GraphWorkspace from './GraphWorkspace';\nimport GraphCompDetails from './component/modals/GraphCompDetails';\nimport { Header } from './component/Header';\nimport { reducer, initialState, actionType as T } from './reducer';\nimport ProjectDetails from './component/modals/ProjectDetails';\nimport ShareModal from './component/modals/ShareModal';\nimport SettingsModal from './component/modals/Settings';\nimport FileDragDrop from './component/File-drag-drop';\nimport HistoryModal from './component/modals/History';\nimport LocalFileBrowser from './component/fileBrowser';\nimport FileEditModal from './component/modals/FileEdit';\n\nconst app = () => {\n    const [superState, dispatcher] = useReducer(reducer, initialState);\n    return (\n        <div className=\"container\">\n            <ProjectDetails superState={superState} dispatcher={dispatcher} />\n            <ShareModal superState={superState} dispatcher={dispatcher} />\n            <SettingsModal superState={superState} dispatcher={dispatcher} />\n            <HistoryModal superState={superState} dispatcher={dispatcher} />\n            <FileEditModal superState={superState} dispatcher={dispatcher} />\n            <GraphCompDetails\n                closeModal={() => dispatcher({ type: T.Model_Close })}\n                superState={superState}\n            />\n            <FileDragDrop dispatcher={dispatcher} />\n            <Header superState={superState} dispatcher={dispatcher} />\n            <section className=\"body\" style={{ display: 'flex', overflow: 'hidden' }}>\n                <div style={{ display: 'flex', overflow: 'auto' }}>\n                    <LocalFileBrowser superState={superState} dispatcher={dispatcher} />\n                </div>\n                <div className=\"graph\" style={{ display: 'flex', overflow: 'hidden' }}>\n                    <GraphWorkspace dispatcher={dispatcher} superState={superState} />\n                </div>\n            </section>\n            <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"solid\" />\n        </div>\n    );\n};\n\nexport default app;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({\n            getCLS, getFID, getFCP, getLCP, getTTFB,\n        }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const BendingDistanceWeight = {\n\n    dist: (A, B) => (((A.x - B.x) ** 2 + (A.y - B.y) ** 2) ** 0.5),\n\n    rotate: (P, Q) => ({\n        x: P.x * Math.cos(Q) - P.y * Math.sin(Q),\n        y: P.x * Math.sin(Q) + P.y * Math.cos(Q),\n    }),\n\n    extraRad: (A, B) => (((A.x >= B.x && A.y > B.y) || (A.x >= B.x && A.y < B.y)) ? Math.PI : 0),\n\n    getRadian(tanQ, A, B) {\n        return (Math.atan(tanQ) - this.extraRad(A, B) + 2 * Math.PI) % (2 * Math.PI);\n    },\n\n    getCoordinate(w, d, A, B) {\n        const tanQ = (A.y - B.y) / (A.x - B.x);\n        const Q = this.getRadian(tanQ, A, B);\n        const D = this.dist(A, B) * w;\n        const P = { x: D, y: d };\n        const { x, y } = this.rotate(P, Q);\n        return { x: x + A.x, y: y + A.y };\n    },\n\n    getWeightDistance(p, A, B) {\n        const P = { x: p.x - A.x, y: p.y - A.y };\n        const tanQ = (A.y - B.y) / (A.x - B.x);\n        const Q = this.getRadian(tanQ, A, B);\n        const { x, y } = this.rotate(P, -Q);\n        const d = this.dist(A, B);\n        return { d: y, w: x / d };\n    },\n};\n\nexport default BendingDistanceWeight;\n","const style = [\n    {\n        selector: '*',\n        style: {\n            overlayOpacity: '0',\n        },\n    },\n    {\n        selector: 'node[type = \"ordin\"]',\n        style: {\n            content: 'data(label)',\n            zIndex: 100,\n            width: 'data(style.width)',\n            height: 'data(style.height)',\n            shape: 'data(style.shape)',\n            opacity: 'data(style.opacity)',\n            backgroundColor: 'data(style.backgroundColor)',\n            borderColor: 'data(style.borderColor)',\n            borderWidth: 'data(style.borderWidth)',\n            textValign: 'center',\n            textHalign: 'center',\n        },\n    },\n    {\n        selector: 'node[type=\"special\"]',\n        style: {\n            width: 8,\n            height: 8,\n            backgroundColor: 'data(style.backgroundColor)',\n            zIndex: 1000,\n        },\n    },\n\n    {\n        selector: 'edge',\n        style: {\n            curveStyle: 'bezier',\n            targetArrowShape: 'triangle',\n        },\n    },\n    {\n        selector: 'edge[type = \"ordin\"]',\n        style: {\n            width: 'data(style.thickness)',\n            lineColor: 'data(style.backgroundColor)',\n            targetArrowColor: 'data(style.backgroundColor)',\n            curveStyle: 'segments',\n            segmentDistances: 'data(bendData.bendDistance)',\n            segmentWeights: 'data(bendData.bendWeight)',\n            edgeDistances: 'node-position',\n            lineStyle: 'data(style.shape)',\n        },\n    },\n    {\n        selector: 'edge[label]',\n        style: {\n            label: 'data(label)',\n            edgeTextRotation: 'autorotate',\n            zIndex: 999,\n            textBackgroundOpacity: 1,\n            color: '#000',\n            textBackgroundColor: '#fff',\n            textBackgroundShape: 'roundrectangle',\n            textBorderColor: '#fff',\n            textBorderWidth: 2,\n            textBorderOpacity: 1,\n        },\n    },\n    {\n        selector: '.hidden',\n        style: {\n            display: 'none',\n        },\n    },\n    {\n        selector: '.eh-handle,node[type=\"bend\"]',\n        style: {\n            height: 25,\n            width: 25,\n            opacity: 0.4,\n            borderWidth: 5,\n            borderOpacity: 0.1,\n        },\n    },\n    {\n        selector: 'node[type=\"bend\"]',\n        style: {\n            backgroundColor: '#9575cd',\n        },\n    },\n    {\n        selector: '.eh-handle',\n        style: {\n            backgroundColor: '#f50057',\n        },\n    },\n    {\n        selector: ':selected',\n        style: {\n            overlayColor: '#000',\n            overlayOpacity: 0.1,\n            overlayPadding: 5,\n        },\n    },\n\n];\n\nexport default style;\n","import style from './cytoscape-style';\n\nconst options = {\n    style: [...style],\n    zoomingEnabled: true,\n    userZoomingEnabled: true,\n    minZoom: 0.25,\n    maxZoom: 5,\n};\n\nexport default options;\n","export default {\n    ADD_NODE: 'ADD_NODE',\n    ADD_EDGE: 'ADD_EDGE',\n    UPDATE_NODE: 'UPDATE_NODE',\n    UPDATE_EDGE: 'UPDATE_EDGE',\n    UPDATE_DATA: 'UPDATE_DATA',\n    DEL_NODE: 'DEL_NODE',\n    DEL_EDGE: 'DEL_EDGE',\n    SET_POS: 'SET_POS',\n    SET_DIM: 'SET_DIM',\n    SET_BENDW: 'SET_BENDW',\n};\n"],"sourceRoot":""}