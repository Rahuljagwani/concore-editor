{"version":3,"sources":["graph-builder/graph-actions.js","graph-builder/graph-core/3-component.js","graph-builder/graph-core/2-canvas.js","graph-builder/graph-core/1-core.js","graph-builder/local-storage-manager.js","component/ZoomSetter.jsx","graph-builder/graphml/parser/PropFromArr.js","graph-builder/graphml/parser/parseProperties.js","graph-builder/graphml/parser/index.js","toolbarActions/toolbarFunctions.js","component/TabBar.jsx","graph-builder/graphml/builder/nodeML.js","graph-builder/graphml/builder/graphML.js","graph-builder/graphml/builder/edgeML.js","graph-builder/graphml/builder/index.js","graph-builder/graph-core/index.js","graph-builder/graph-core/6-server.js","graph-builder/graph-core/5-load-save.js","graph-builder/graph-core/4-undo-redo.js","graph-builder/calculations/boundary-point.js","graph-builder/index.js","graph-builder/tailored-graph-builder.js","GraphArea.jsx","config/defaultValidators.js","GraphWorkspace.jsx","component/modals/ParentModal.jsx","component/modals/GraphCompDetails.jsx","toolbarActions/toolbarList.js","component/HeaderComps.jsx","component/Header.jsx","component/modals/ProjectDetails.jsx","component/modals/ShareModal.jsx","component/CodeEdit.jsx","component/modals/Settings.jsx","component/File-drag-drop.jsx","component/modals/History.jsx","component/fileBrowser.jsx","component/modals/FileEdit.jsx","component/modals/markDown.jsx","component/modals/OptionsModal.jsx","component/Logs.jsx","component/modals/ContributeDetails.jsx","App.jsx","serviceWorkerRegistration.js","reportWebVitals.js","index.jsx","graph-builder/calculations/bending-dist-weight.js","config/cytoscape-style.js","config/cytoscape-options.js","reducer/actionType.js","component/modals/NodeDetails.jsx","component/modals/EdgeDetails.jsx","config/defaultStyles.js","reducer/initialState.js","reducer/reducer.js"],"names":["ADD_NODE","ADD_EDGE","UPDATE_NODE","UPDATE_EDGE","UPDATE_DATA","DEL_NODE","DEL_EDGE","SET_POS","SET_DIM","SET_BENDW","GraphComponent","args","nodeValidator","edgeValidator","setEdgeNodeValidator","getTid","Date","getTime","allNodes","this","cy","$","start","x","y","found","i","length","nodePos","position","label","style","type","getPos","data","id","tid","node","add","group","addAction","actionName","GA","parameters","sourceID","targetID","getById","edgesWith","edges","getEdgesBetweenNodes","dists","Set","forEach","edge","target","bendDistance","d","has","bendWeight","bendPoint","BendingDistanceWeight","getWeightDistance","w","getBendingD","edgeData","bendData","parseBendinDW","source","addEdgeWithLabel","dispatcher","T","Model_Open_Create_Edge","cb","edgeLabel","edgeStyle","message","validiateEdge","ok","shouldUpdateLabel","getStyle","key","val","connectedEdges","deleteEdge","json","remove","removed","jsonEd","isNode","deleteNode","pos","emit","dim","height","width","setPos","toString","indexOf","lastIndexOf","a","b","slice","trim","eval","map","sourceLabel","getRealSourceId","targetLabel","comp","validator","getNodesEdges","nodes","undefined","err","e","validiateComp","GraphCanvas","reset","center","SET_ZOOM_LEVEL","payload","getZoom","removeListener","setZoomUI","on","Math","round","zoom","fit","v","elements","window","confirm","el","deleteElem","CHANGE_RESET","element","superState","projectName","authorName","cytoscape","use","edgehandles","nodeEditing","Konva","gridGuide","cyOptions","container","bendNode","classes","registerEvents","initizialize","resizeToContentCueEnabled","setWidth","setHeight","isNoResizeMode","isNoControlsMode","snapToGridOnRelease","zoomDash","panGrid","preview","handlePosition","handleNodes","complete","c","addEdge","getElementById","shouldEmit","SET_PROJECT_DETAILS","value","graphID","SET_AUTHOR","serverID","els","ELE_UNSELECTED","every","isEdge","ids","ELE_SELECTED","selectDeselectEventHandler","scratch","addClass","evt","ev","hasClass","CoreGraph","getBendEdgePoint","DW","addBendChange","removeClass","resetAllComp","resetAllAction","parseFloat","getCoordinate","ALL_GRAPHS","localStorageManager","btoa","AUTHOR_NAME","allgs","localStorage","getItem","setItem","JSON","stringify","parse","atob","saveAllgs","Array","from","addEmptyIfNot","get","save","graphContent","addGraph","serializedJson","delete","removeItem","getAllGraphs","addToFront","Garr","unshift","getAuthorName","setAuthorName","clearGraph","getFileList","minZoom","GraphOption","maxZoom","marks","ZoomComp","myGraph","curGraphInstance","zoomValue","zoomLevel","className","role","tabIndex","onClick","resetZoom","onKeyDown","fitZoom","min","max","onChange","setZoom","included","PropFromArr","obj","arr","flatenArr","flatArr","constructor","o","push","p","filter","Object","keys","s","t","propFromArr","split","property","any","S","A","F","mapByDefault","def","includes","parseNode","parseProps","opacity","parseInt","shape","backgroundColor","borderColor","borderWidth","parseEdge","thickness","parseActionML","parser","graphMlCnt","Promise","resolve","xml2js","Parser","parseString","grahMLObj","grahML","parseDetails","actionHistory","equivalent","inverse","parseActionHistory","getGraphFun","createNode","state","setState","Model_Open_Create_Node","validiateNode","addNode","editElement","eleSelectedPayload","Model_Open_Update_Node","retMessage","updateNode","labelAllowed","getLabel","Model_Open_Update_Edge","updateEdge","downloadImg","format","saveGraphMLFile","graph","graphs","curGraphIndex","fileHandle","createWritable","stream","write","saveToFolder","close","toast","success","info","saveWithoutFileHandle","readFile","file","fr","FileReader","name","pop","onload","result","then","ADD_GRAPH","graphML","fileName","getFile","readAsText","readTextFile","EDIT_TEXTFILE","show","fileObj","createFile","newProject","NEW_GRAPH","clearAll","contribute","SET_CONTRIBUTE_MODAL","resetAfterClear","toggleLogs","SET_LOGS","logs","undo","redo","viewHistory","SET_HISTORY_MODAL","TabBar","closeTab","stopPropagation","REMOVE_GRAPH","SET_CUR_INSTANCE","SET_CUR_INDEX","editCur","SET_EDIT_DETAILS_MODAL","React","useEffect","hotkeys","event","preventDefault","document","click","querySelector","bind","data-tip","size","CHANGE_TAB","data-for","place","effect","nodeML","posX","posY","color","graphml","xmlns","for","edgedefault","edgeML","lineColor","lineWidth","configuration","sx","sy","tx","ty","builder","G","edg","X","Builder","buildObject","GraphServer","config","setServerID","IS_WORKFLOW_ON_SERVER","Boolean","toastId","autoClose","Axios","post","uploadedDirName","unlockCheck","dockerCheck","maxTime","params","octave","res","SET_FUNCTIONS","built","ran","debugged","cleared","stopped","destroyed","SET_LOGS_MESSAGE","logsmessage","output","dismiss","catch","error","library","autoSaveIntervalId","saveLocalStorage","saveAs","png","full","getName","jpg","nodeID","edgeID","shouldNodeBeSaved","all","nodeJson","shouldEdgeBeSaved","edgeJson","actionArr","hash","GraphLoadSave","stringifyAction","str","graphmlBuilder","jsonifyGraph","bytes","TextEncoder","encode","blob","Blob","navigator","userAgent","options","types","description","accept","showSaveFilePicker","handle","prompt","match","SET_FILE_HANDLE","content","parseAction","setProjectName","setProjectAuthor","clearTimeout","setTimeout","graphMLParser","graphObject","loadGraphFromLocalStorage","loadJson","props","methodsMapped","updateData","setDim","setBendWightDist","curActionIndex","SET_UNDO","SET_REDO","prevPos","curPos","prevDim","curDim","prevDW","curDW","splice","actionIdentity","GraphUndoRedo","sequencify","md5","at","informUI","performAction","curTid","limit","addPositionChange","addDimensionChange","r","sort","k","boundaryPoint","getEq","P1","P2","m","getX1X2","Cn","P","h","B","C","D","getY1Y2","x1","x2","dist","getClosestEllipse","y1","y2","slope","setSubQ","S1","S2","getClosestRect","abs","Infinity","TailoredGraphBuilder","connectedNodes","juncNode","TailoredGraph","calJuncNodePos","juncNodeId","incomers","unselectify","ed","sourceNode","targetNode","sourceNodeStyle","juncNodePos","getBoundaryPoint","ungrabify","addAutoMove","addEdgeWithJuncNode","tidd","juncNodes","outgoers","addEdgeWithoutJuncNode","addEdgeAction","junctionNode","n1","n2","n","union","c1","c2","values","parNode","meanNbrPosition","setOfPos","posStr","Graph","graphContainerRef","active","useState","instance","setInstance","ref","useRef","setContainerDim","elToAss","current","offsetWidth","offsetHeight","set","setCurStatus","addEventListener","MyGraph","forcePullFromServer","setGraphML","initialiseNewGraph","zIndex","display","GraphComp","allSavedGs","ADD_GRAPH_BULK","flex","flexDirection","background","ReactModal","setAppElement","Modal","closeModal","ModelOpen","title","children","curClass","setCurClass","isOpen","setIsOpen","stid","setStid","contentLabel","overlayClassName","aria-hidden","ModalComp","setData","errorMessage","setErrorMessage","setElement","editSourceClicked","setEditSourceClicked","createSourceClicked","setCreateSourceClicked","createHelpClicked","setCreateHelpClicked","modalPayload","submitText","Children","defaultStyle","defaultLabel","openMarkDownDoc","SET_MARKDOWN_MODAL","fileState","docname1","concat","matchingElement","find","ele","SET_INPUT_FILE","fname","ParentModal","onSubmit","docname2","toolbarList","text","icon","FaPlus","action","visibility","hotkey","FaPencilAlt","FaFileImport","FaSave","saveToDisk","saveAction","FaThermometerEmpty","resetEnabled","FaTrashRestore","FaUndo","undoEnabled","FaRedo","redoEnabled","FaEdit","eleSelected","FaTrash","FaHistory","FaTerminal","isWorkflowOnServer","FaToggleOn","FiToggleLeft","toggleServer","FaCogs","SET_OPTIONS_MODAL","FaHammer","build","FaBug","debug","FiPlay","run","FaRegTimesCircle","clear","FiStopCircle","stop","FaBomb","destroy","FiTriangle","FaDownload","fn","DropDown","Icon","menuButton","FileUploader","fileRef","Switcher","checked","ActionButton","fontSize","Vsep","Hsep","Space","Header","actions","replace","substring","handler","shortcut","setHotKeys","ProjectDetails","curGraph","inputRef","useCallback","focus","newGraphModal","editDetailsModal","authorNameE","openExisting","NewWorkflow","SET_NEW_GRAPH_MODAL","placeholder","required","ShareModal","serializedGraph","setSerializedGraph","copyText","setCopyText","cond","shareModal","serializeGraph","link","location","protocol","host","pathname","SET_SHARE_MODAL","readOnly","clipboard","writeText","getElementsByClassName","select","CodeEdit","pre","docString","createRef","spellCheck","data-gramm_editor","SettingsModal","setNodeValidator","setEdgeValidator","getNodeValidator","getEdgeValidator","settingsModal","SET_SETTING_MODAL","app","SET_FILE_REF","getElementsByTagName","cc","classList","dragEvent","dataTransfer","files","HistoryModal","curState","setcurState","historyList","setHistoryList","historyView","setHistoryView","mapActionToTrue","filterAction","setFilterAction","getLabelFromID","reverse","stringifyActionType","prefixTid","index","DT","date","toLocaleDateString","time","toLocaleTimeString","tempCurState","undoSingleAction","redoSingleAction","restoreState","fontWeight","par","htmlFor","listStyleType","LocalFileBrowser","dirButton","setDirButton","setFileState","handleFileInDirs","topKey","topLevel","entries","valueSubDir","kind","fileData","modified","lastModified","newFeature","showDirectoryPicker","dirHandle","SET_DIR_NAME","SET_FILE_STATE","newFeatureFile","pickerOpts","excludeAcceptAllOption","multiple","showOpenFilePicker","webkitRelativePath","directory","webkitdirectory","disabled","onSelectFile","alert","foundi","g","detailRenderer","fileRenderer","FileRenderers","TableFile","folderRenderer","FolderRenderers","TableFolder","FileEditModal","codeStuff","setCodeStuff","setFileName","submit","saveAsSubmit","fS","saveSubmit","newFileName","textFileModal","onValueChange","highlight","code","fileEx","languages","verilog","cpp","python","matlab","bash","plaintext","highlightSyntax","padding","fontFamily","minHeight","minWidth","border","MarkDown","inputFile","markDownModal","inputFileName","OptionsModal","unlock","setUnlock","docker","setDocker","setOctave","param","setParam","maxT","setmaxT","setLibrary","SET_OPTIONS","optionsModal","handleMaxtimeChange","handleLibraryChange","cols","rows","handleParamsChange","Logs","setOutput","line","ContributeDetails","study","setStudy","path","setPath","auth","setAuth","setTitle","desc","setDesc","branch","setBranch","showAdvanceOptions","setShowAdvanceOptions","loading","axios","response","status","contributeModal","useReducer","reducer","initialState","onbeforeunload","returnValue","Settings","History","FileEdit","GraphCompDetails","Model_Close","overflow","GraphWorkspace","pauseOnHover","hostname","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","console","rotate","Q","cos","sin","extraRad","PI","getRadian","tanQ","atan","selector","overlayOpacity","textValign","textHalign","curveStyle","targetArrowShape","targetArrowColor","segmentDistances","segmentWeights","edgeDistances","lineStyle","edgeTextRotation","textBackgroundOpacity","textBackgroundColor","textBackgroundShape","textBorderColor","textBorderWidth","textBorderOpacity","borderOpacity","overlayColor","overlayPadding","zoomingEnabled","userZoomingEnabled","zealit","require","$$typeof","TURN_DRAW","SET_ZOOM","ADD_GRAPH_INSTANCE","NodeDetails","textRef","widthSet","mdList","setMdList","Map","mdCont","setMdCont","labelName","setLabelName","labelFile","setLabelFile","indexOfFile","list","mdmap","prop","borderRadius","lname","item","some","matchingFile","Triangle","EqTriangle","borderLeft","borderBottom","borderTop","marginLeft","EdgeDetails","borderBottomWidth","borderBottomColor","borderBottomStyle","NodeStyle","EdgeStyle","drawModeOn","initialGraphState","component","newState"],"mappings":"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","file":"static/js/main.c5330d96.chunk.js","sourcesContent":["export default {\n    ADD_NODE: 'ADD_NODE',\n    ADD_EDGE: 'ADD_EDGE',\n    UPDATE_NODE: 'UPDATE_NODE',\n    UPDATE_EDGE: 'UPDATE_EDGE',\n    UPDATE_DATA: 'UPDATE_DATA',\n    DEL_NODE: 'DEL_NODE',\n    DEL_EDGE: 'DEL_EDGE',\n    SET_POS: 'SET_POS',\n    SET_DIM: 'SET_DIM',\n    SET_BENDW: 'SET_BENDW',\n};\n","import BendingDistanceWeight from '../calculations/bending-dist-weight';\nimport GA from '../graph-actions';\nimport { actionType as T } from '../../reducer';\nimport GraphCanvas from './2-canvas';\n\nclass GraphComponent extends GraphCanvas {\n    getTid;\n\n    nodeValidator;\n\n    edgeValidator;\n\n    addAction;\n\n    getRealSourceId;\n\n    constructor(...args) {\n        super(...args);\n        const [,,,,, nodeValidator, edgeValidator] = args;\n        this.setEdgeNodeValidator({ nodeValidator, edgeValidator });\n        this.getTid = () => new Date().getTime();\n    }\n\n    getPos() {\n        const allNodes = this.cy.$('node');\n        const start = { x: 100, y: 100 };\n        let found = true;\n        while (found) {\n            found = false;\n            for (let i = 0; i < allNodes.length; i += 1) {\n                const nodePos = allNodes[i].position();\n                found = found || (nodePos.x === start.x && nodePos.y === start.y);\n            }\n            if (found) {\n                start.x += 10;\n                start.y += 10;\n            }\n        }\n        return start;\n    }\n\n    addNode(label, style, type = 'ordin', position = this.getPos(),\n        data = {}, id, tid = this.getTid()) {\n        const node = this.cy.add({\n            group: 'nodes',\n            data: {\n                ...data, id, label, type, style,\n            },\n            position,\n        });\n        this.addAction(\n            { actionName: GA.DEL_NODE, parameters: [node.id()] },\n            {\n                actionName: GA.ADD_NODE,\n                parameters: [label, style, type, position, data, node.id()],\n            },\n            tid,\n        );\n        return node;\n    }\n\n    getEdgesBetweenNodes(sourceID, targetID) {\n        return this.getById(sourceID).edgesWith(this.getById(targetID));\n    }\n\n    getBendingD(sourceID, targetID) {\n        const edges = this.getEdgesBetweenNodes(sourceID, targetID);\n        const dists = new Set();\n        edges.forEach((edge) => {\n            if (targetID === edge.target().id()) dists.add(edge.data('bendData').bendDistance);\n            else dists.add(-edge.data('bendData').bendDistance);\n        });\n        for (let d = 0; ;d += 20) {\n            if (!dists.has(d)) return d;\n            if (!dists.has(-d)) return -d;\n        }\n    }\n\n    parseBendinDW({\n        sourceID, targetID, type, bendWeight, bendDistance, bendPoint,\n    }) {\n        if (type !== 'ordin') return { bendDistance: 0, bendWeight: 0 };\n        if (bendDistance && bendWeight) return { bendDistance, bendWeight };\n        if (bendPoint) {\n            const { x, y } = bendPoint;\n            const { d, w } = BendingDistanceWeight.getWeightDistance(\n                { x, y }, this.getById(sourceID).position(), this.getById(targetID).position(),\n            );\n            return { bendDistance: d, bendWeight: w };\n        }\n        return { bendDistance: this.getBendingD(sourceID, targetID), bendWeight: 0.5 };\n    }\n\n    addEdgeWithLabel(edgeData, tid = this.getTid()) {\n        const { type = 'ordin' } = edgeData;\n        const bendData = this.parseBendinDW({ ...edgeData, ...edgeData.bendData });\n        const edge = this.cy.add({\n            group: 'edges',\n            data: {\n                ...edgeData, source: edgeData.sourceID, target: edgeData.targetID, type, bendData,\n            },\n        });\n        this.addAction(\n            { actionName: GA.DEL_EDGE, parameters: [edge.id()] },\n            { actionName: GA.ADD_EDGE, parameters: [{ ...edgeData, id: edge.id() }] },\n            tid,\n        );\n\n        return edge;\n    }\n\n    addEdge(edgeData, tid = this.getTid()) {\n        if ((edgeData.type && edgeData.type !== 'ordin') || edgeData.label) {\n            return this.addEdgeWithLabel({ ...edgeData, type: edgeData.type || 'ordin' }, tid);\n        }\n        this.dispatcher({\n            type: T.Model_Open_Create_Edge,\n            cb: (edgeLabel, edgeStyle) => {\n                const message = this.validiateEdge(edgeLabel, edgeStyle,\n                    edgeData.targetID, edgeData.targetID, null, 'New');\n                if (message.ok) this.addEdgeWithLabel({ ...edgeData, type: edgeData.type || 'ordin' }, tid);\n                return message;\n            },\n        });\n        return undefined;\n    }\n\n    getStyle(id) {\n        return this.getById(id).data('style');\n    }\n\n    getLabel(id) {\n        return this.getById(id).data('label') || this.getById(id).data('label');\n    }\n\n    updateNode(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        this.addAction(\n            {\n                actionName: GA.UPDATE_NODE,\n                parameters: [id, this.getStyle(id), this.getById(id).data('label'), shouldUpdateLabel],\n            },\n            { actionName: GA.UPDATE_NODE, parameters: [id, style, label, shouldUpdateLabel] },\n            tid,\n        );\n        if (shouldUpdateLabel) this.getById(id).data('label', label);\n        this.getById(id).data('style', style);\n    }\n\n    updateEdge(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        this.addAction(\n            {\n                actionName: GA.UPDATE_EDGE,\n                parameters: [id, this.getStyle(id), this.getById(id).data('label'), shouldUpdateLabel],\n            },\n            { actionName: GA.UPDATE_EDGE, parameters: [id, style, label, shouldUpdateLabel] },\n            tid,\n        );\n        if (shouldUpdateLabel) this.getById(id).data('label', label);\n        this.getById(id).data('style', style);\n    }\n\n    updateData(id, key, val, tid = this.getTid()) {\n        this.addAction(\n            { actionName: GA.UPDATE_DATA, parameters: [id, key, this.getById(id).data(key)] },\n            { actionName: GA.UPDATE_DATA, parameters: [id, key, val] }, tid,\n        );\n        this.getById(id).data(key, val);\n        return this;\n    }\n\n    deleteNode(id, tid = this.getTid()) {\n        const node = this.getById(id);\n        node.connectedEdges('[type=\"ordin\"]').forEach((edge) => this.deleteEdge(edge.id(), tid));\n        node.connectedEdges().forEach((edge) => this.deleteEdge(edge.id(), tid));\n        this.addAction(\n            {\n                actionName: GA.ADD_NODE,\n                parameters: [\n                    node.data('label'), this.getStyle(node.id()), node.data('type'),\n                    node.position(), node.json().data, id,\n                ],\n            },\n            { actionName: GA.DEL_NODE, parameters: [id] }, tid,\n        );\n        node.remove();\n    }\n\n    deleteEdge(id, tid = this.getTid()) {\n        if (this.getById(id).length === 0 || this.getById(id).removed()) return;\n        const jsonEd = this.getById(id).json();\n        this.addAction(\n            {\n                actionName: GA.ADD_EDGE,\n                parameters: [{\n                    ...jsonEd.data, sourceID: jsonEd.data.source, targetID: jsonEd.data.target,\n                }],\n            },\n            { actionName: GA.DEL_EDGE, parameters: [id] }, tid,\n        );\n        this.getById(id).remove();\n    }\n\n    deleteElem(id, tid = this.getTid()) {\n        if (this.getById(id).isNode()) return this.deleteNode(id, tid);\n        return this.deleteEdge(id, tid);\n    }\n\n    setPos(id, pos) {\n        this.getById(id).position(pos);\n        this.getById(id).emit('moved');\n    }\n\n    setDim(id, dim, pos) {\n        const style = this.getById(id).data('style');\n        this.getById(id).data('style', { ...style, height: dim.height, width: dim.width });\n        this.setPos(id, pos);\n    }\n\n    getNodeValidator() {\n        const [a, b] = [this.nodeValidator.toString().indexOf('{'), this.nodeValidator.toString().lastIndexOf('}')];\n        return this.nodeValidator.toString().slice(a + 1, b).trim();\n    }\n\n    getEdgeValidator() {\n        const [a, b] = [this.edgeValidator.toString().indexOf('{'), this.edgeValidator.toString().lastIndexOf('}')];\n        return this.edgeValidator.toString().slice(a + 1, b).trim();\n    }\n\n    setEdgeNodeValidator({ nodeValidator, edgeValidator }) {\n        // eslint-disable-next-line no-eval\n        this.nodeValidator = eval(nodeValidator);\n        // eslint-disable-next-line no-eval\n        this.edgeValidator = eval(edgeValidator);\n    }\n\n    getNodesEdges() {\n        const nodes = this.cy.$('node[type=\"ordin\"]').map((node) => ({\n            label: node.data('label'),\n            style: node.data('style'),\n            id: node.data('id'),\n        }));\n        const edges = this.cy.$('edge[type=\"ordin\"]').map((edge) => ({\n            label: edge.data('label'),\n            sourceLabel: this.getById(this.getRealSourceId(edge.source().id())).data('label'),\n            targetLabel: edge.target().data('label'),\n            style: edge.data('style'),\n            id: edge.data('id'),\n        }));\n        return [nodes, edges];\n    }\n\n    validiateComp(comp, validator, type) {\n        const [nodes, edges] = this.getNodesEdges();\n        try {\n            const message = validator(comp, nodes, edges, type);\n            if (message && message.ok !== undefined && message.err !== undefined) return message;\n            return { ok: false, err: 'Invalid return format from the defined validator.' };\n        } catch (e) {\n            return { ok: false, err: `Error raised at validator: ${e.message}` };\n        }\n    }\n\n    validiateNode(label, style, id, type) {\n        if (id) {\n            const node = this.getById(id);\n            return this.validiateComp({\n                label: label || node.data('label'),\n                style: style || node.data('style'),\n                id,\n            }, this.nodeValidator, type);\n        }\n        return this.validiateComp({ label, style, id }, this.nodeValidator, type);\n    }\n\n    validiateEdge(label, style, sourceID, targetID, id, type) {\n        if (id) {\n            const edge = this.getById(id);\n            return this.validiateComp({\n                label: label || edge.data('label'),\n                style: style || edge.data('style'),\n                sourceLabel: this.getById(this.getRealSourceId(edge.source().id())).data('label'),\n                targetLabel: edge.target().data('label'),\n                id,\n            }, this.edgeValidator, type);\n        }\n        return this.validiateComp({\n            label,\n            style,\n            sourceLabel: this.getById(this.getRealSourceId(sourceID)).data('label'),\n            targetLabel: this.getById(targetID).data('label'),\n            id,\n        }, this.edgeValidator, type);\n    }\n}\n\nexport default GraphComponent;\n","// import GraphUndoRedo from './graph-undo-redo';\nimport Core from './1-core';\nimport { actionType as T } from '../../reducer';\n\nclass GraphCanvas extends Core {\n    setZoomUI;\n\n    resetZoom() {\n        this.cy.reset();\n        this.cy.center();\n        this.dispatcher({ type: T.SET_ZOOM_LEVEL, payload: this.getZoom() });\n    }\n\n    setOnZoom(cb) {\n        this.cy.removeListener('zoom');\n        this.setZoomUI = cb;\n        this.cy.on('zoom', (e) => cb(Math.round(100 * e.target.zoom())));\n    }\n\n    fitZoom() {\n        this.cy.fit();\n        this.dispatcher({ type: T.SET_ZOOM_LEVEL, payload: this.getZoom() });\n    }\n\n    setZoom(v) {\n        this.cy.zoom(v / 100);\n    }\n\n    getZoom() {\n        return Math.round(this.cy.zoom() * 100);\n    }\n\n    clearAll() {\n        if (this.cy.elements().length === 0) return true;\n        // eslint-disable-next-line no-alert\n        if (!window.confirm('Do want to clear all elements?')) return false;\n        this.cy.elements().forEach((el) => this.deleteElem(el.id(), 0));\n        // this.actionArr = [];\n        this.dispatcher({ type: T.CHANGE_RESET, payload: true });\n        this.cy.emit('graph-modified');\n        return true;\n    }\n\n    resetAllComp() {\n        this.cy.elements().remove();\n    }\n\n    setCurStatus() {\n        super.setCurStatus();\n        this.dispatcher({ type: T.SET_ZOOM_LEVEL, payload: Math.round(this.cy.zoom() * 100) });\n    }\n}\n\nexport default GraphCanvas;\n","import cytoscape from 'cytoscape';\nimport edgehandles from 'cytoscape-edgehandles';\nimport gridGuide from 'cytoscape-grid-guide';\nimport Konva from 'konva';\nimport nodeEditing from 'cytoscape-node-editing';\nimport $ from 'jquery';\nimport cyOptions from '../../config/cytoscape-options';\nimport BendingDistanceWeight from '../calculations/bending-dist-weight';\nimport { actionType as T } from '../../reducer';\n\nclass CoreGraph {\n    dispatcher;\n\n    superState;\n\n    id;\n\n    projectName;\n\n    authorName;\n\n    cy;\n\n    bendNode;\n\n    constructor(id, element, dispatcher, superState, projectName, nodeValidator, edgeValidator, authorName) {\n        if (dispatcher) this.dispatcher = dispatcher;\n        if (superState) this.superState = superState;\n        if (typeof cytoscape('core', 'edgehandles') !== 'function') {\n            cytoscape.use(edgehandles);\n        }\n        if (typeof cytoscape('core', 'nodeEditing') !== 'function') {\n            nodeEditing(cytoscape, $, Konva);\n        }\n        if (typeof cytoscape('core', 'gridGuide') !== 'function') {\n            gridGuide(cytoscape);\n        }\n        // if (cy) this.cy = cy;\n        this.cy = cytoscape({ ...cyOptions, container: element });\n        this.id = id;\n        this.projectName = projectName;\n        this.authorName = authorName;\n        this.cy.emit('graph-modified');\n        this.bendNode = this.cy.add(\n            { group: 'nodes', data: { type: 'bend' }, classes: ['hidden'] },\n        );\n        this.registerEvents();\n        this.cy.emit('graph-modified');\n        this.initizialize();\n    }\n\n    initizialize() {\n        this.cy.nodeEditing({\n            resizeToContentCueEnabled: () => false,\n            setWidth(node, width) {\n                node.data('style', { ...node.data('style'), width });\n            },\n            setHeight(node, height) {\n                node.data('style', { ...node.data('style'), height });\n            },\n            isNoResizeMode(node) { return node.data('type') !== 'ordin'; },\n            isNoControlsMode(node) { return node.data('type') !== 'ordin'; },\n        });\n\n        this.cy.gridGuide({\n            snapToGridOnRelease: false,\n            zoomDash: true,\n            panGrid: true,\n        });\n        this.cy.edgehandles({\n            preview: false,\n            handlePosition() {\n                return 'none';\n            },\n            handleNodes: 'node[type = \"ordin\"],node[type = \"special\"]',\n            complete: (a, b, c) => { c.remove(); this.addEdge({ sourceID: a.id(), targetID: b.id() }); },\n        });\n    }\n\n    getById(x) {\n        return this.cy.getElementById(x);\n    }\n\n    getLabelFromID(x) {\n        return this.getById(x).data('label') || '**Deleted El**';\n    }\n\n    set({\n        cy, dispatcher, superState, projectName, authorName,\n    }) {\n        if (dispatcher) this.dispatcher = dispatcher;\n        if (superState) this.superState = superState;\n        if (cy) this.cy = cy;\n        if (projectName) this.projectName = projectName;\n        if (authorName) this.authorName = authorName;\n    }\n\n    setProjectName(projectName, shouldEmit = true) {\n        this.projectName = projectName;\n        if (shouldEmit) {\n            this.dispatcher({\n                type: T.SET_PROJECT_DETAILS,\n                payload: {\n                    value: projectName,\n                    graphID: this.id,\n                    type: 'projectName',\n                },\n            });\n        }\n        this.cy.emit('graph-modified');\n    }\n\n    setProjectAuthor(authorName, shouldEmit = true) {\n        this.authorName = authorName;\n        if (shouldEmit) {\n            this.dispatcher({\n                type: T.SET_AUTHOR,\n                payload: {\n                    value: authorName,\n                    graphID: this.id,\n                    type: 'authorName',\n                },\n            });\n        }\n        this.cy.emit('graph-modified');\n    }\n\n    setServerID(serverID, shouldEmit = true) {\n        this.serverID = serverID;\n        if (shouldEmit) {\n            this.dispatcher({\n                type: T.SET_PROJECT_DETAILS,\n                payload: {\n                    value: serverID,\n                    graphID: this.id,\n                    type: 'serverID',\n                },\n            });\n        }\n        this.cy.emit('graph-modified');\n    }\n\n    selectDeselectEventHandler() {\n        const els = this.cy.$(':selected');\n        if (els.length === 0) { return this.dispatcher({ type: T.ELE_UNSELECTED }); }\n        let type;\n        if (els.every((e) => e.isNode())) type = 'NODE';\n        else if (els.every((e) => e.isEdge())) type = 'EDGE';\n        else type = 'MIX';\n        const ids = els.map((e) => e.data('id'));\n        return this.dispatcher({\n            type: T.ELE_SELECTED,\n            payload: {\n                ids, type,\n            },\n        });\n    }\n\n    registerEvents() {\n        this.cy.on('select unselect', () => this.selectDeselectEventHandler());\n        this.cy.on('grab', 'node[type = \"ordin\"]', (e) => {\n            e.target.forEach((node) => {\n                node.scratch('position', { ...node.position() });\n            });\n        });\n\n        this.cy.on('nodeediting.resizestart', (e, type, node) => {\n            node.scratch('height', node.data('style').height);\n            node.scratch('width', node.data('style').width);\n            node.scratch('position', { ...node.position() });\n        });\n\n        this.cy.on('hide-bend remove', () => {\n            this.bendNode.removeListener('drag grab dragfree'); this.bendNode.addClass('hidden');\n        });\n\n        this.cy.on('grabon', (evt) => (evt.target[0].data('type') !== 'bend' ? this.cy.emit('hide-bend') : 0));\n        this.cy.on('freeon', (evt) => (evt.target[0].data('type') !== 'bend' ? this.cy.emit('show-bend') : 0));\n\n        this.cy.on('click tap', (ev) => {\n            if (ev.target === this.cy) {\n                this.cy.emit('hide-bend');\n                this.cy.$('.eh-handle').remove();\n            }\n        });\n        this.cy.on('select unselect show-bend', () => {\n            const el = this.cy.$(':selected');\n            if (el.length !== 1 || !el[0].isEdge()) this.cy.emit('hide-bend');\n            return el.emit('bend-edge');\n        });\n        this.cy.on('mouseover', 'edge', (ev) => {\n            ev.target.emit('bend-edge');\n        });\n\n        this.cy.on('bend-edge', 'edge', (ev) => {\n            if (!this.bendNode.hasClass('hidden')) this.cy.emit('hide-bend');\n            const el = ev.target;\n            this.bendNode.position(CoreGraph.getBendEdgePoint(el));\n            this.bendNode.on('drag', () => {\n                const DW = BendingDistanceWeight.getWeightDistance(\n                    this.bendNode.position(), el.source().position(), el.target().position(),\n                );\n                el.data('bendData', { bendDistance: DW.d, bendWeight: DW.w });\n                ev.target.emit('bending');\n            });\n            this.bendNode.on('grab', () => {\n                const node = el;\n                node.scratch('bendDistWeight', el.data('bendData'));\n            });\n            this.bendNode.on('dragfree', () => {\n                const node = el;\n                this.addBendChange(node.id(), node.scratch('bendDistWeight'), el.data('bendData'));\n            });\n            this.bendNode.removeClass('hidden');\n        });\n    }\n\n    setBendWightDist(id, DW) {\n        this.getById(id).data('bendData', DW);\n    }\n\n    static getBendEdgePoint(el) {\n        const { bendWeight, bendDistance } = el.data('bendData');\n        const w = parseFloat(bendWeight);\n        const d = parseFloat(bendDistance);\n        return BendingDistanceWeight.getCoordinate(w, d, el.source().position(), el.target().position());\n    }\n\n    setCurStatus() {\n        this.selectDeselectEventHandler();\n    }\n\n    reset() {\n        this.resetAllComp();\n        this.resetAllAction();\n    }\n}\n\nexport default CoreGraph;\n","const getSet = (ALL_GRAPHS) => {\n    if (!window.localStorage.getItem(ALL_GRAPHS)) {\n        window.localStorage.setItem(ALL_GRAPHS, window.btoa(JSON.stringify([])));\n    }\n    return new Set(JSON.parse(window.atob(window.localStorage.getItem(ALL_GRAPHS))));\n};\n\nconst localStorageManager = {\n    ALL_GRAPHS: window.btoa('ALL_GRAPHS'),\n    AUTHOR_NAME: window.btoa('AUTHOR_NAME'),\n\n    allgs: getSet(window.btoa('ALL_GRAPHS')),\n\n    saveAllgs() {\n        window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify(Array.from(this.allgs))));\n    },\n\n    addEmptyIfNot() {\n        if (!window.localStorage.getItem(this.ALL_GRAPHS)) {\n            window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify([])));\n        }\n    },\n\n    get(id) {\n        if (window.localStorage.getItem(id) === null) return null;\n        return JSON.parse(window.atob(window.localStorage.getItem(id)));\n    },\n    save(id, graphContent) {\n        this.addGraph(id);\n        const serializedJson = JSON.stringify(graphContent);\n        window.localStorage.setItem(id, window.btoa(serializedJson));\n    },\n    remove(id) {\n        if (this.allgs.delete(id)) this.saveAllgs();\n        localStorage.removeItem(id);\n    },\n    addGraph(id) {\n        if (this.allgs.has(id)) return;\n        this.allgs.add(id);\n        this.saveAllgs();\n    },\n    getAllGraphs() {\n        return JSON.parse(window.atob(window.localStorage.getItem(this.ALL_GRAPHS)));\n    },\n    addToFront(id) {\n        if (this.allgs.has(id)) return;\n        this.allgs.add(id);\n        const Garr = JSON.parse(window.atob(window.localStorage.getItem(this.ALL_GRAPHS)));\n        Garr.unshift(id);\n        window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify(Garr)));\n    },\n    getAuthorName() {\n        return localStorage.getItem(this.AUTHOR_NAME) || '';\n    },\n    setAuthorName(authorName) {\n        localStorage.setItem(this.AUTHOR_NAME, authorName);\n    },\n    clearGraph(id) {\n        window.localStorage.removeItem(id);\n    },\n    getFileList() {\n        return localStorage.getItem('fileList') || '';\n    },\n};\nexport default localStorageManager;\n","import Slider from 'rc-slider';\nimport React from 'react';\nimport { BiReset, BiRectangle } from 'react-icons/bi';\nimport 'rc-slider/assets/index.css';\nimport './zoomSetter.css';\nimport GraphOption from '../config/cytoscape-options';\nimport { actionType as T } from '../reducer';\n\nconst { minZoom, maxZoom } = GraphOption;\nconst marks = {};\n\nconst ZoomComp = ({ superState, dispatcher }) => {\n    const myGraph = superState.curGraphInstance;\n    if (!myGraph) return <></>;\n    const zoomValue = superState.zoomLevel;\n    return (\n        <div>\n            <div className=\"zoom-comp\">\n                <div\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"zoom-box zoom-btn\"\n                    onClick={() => myGraph.resetZoom()}\n                    onKeyDown={(ev) => ev.key === ' ' && (myGraph.resetZoom())}\n                >\n                    <BiReset />\n\n                </div>\n                <div\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"zoom-box zoom-btn\"\n                    onClick={() => myGraph.fitZoom()}\n                    onKeyDown={(ev) => ev.key === ' ' && (myGraph.resetZoom())}\n                >\n                    <BiRectangle />\n\n                </div>\n                <div className=\"zoom-box zoom-value\">\n                    {zoomValue}\n                    %\n                </div>\n                <div className=\"slider\">\n                    <Slider\n                        min={100 * minZoom}\n                        max={100 * maxZoom}\n                        marks={marks}\n                        onChange={\n                            (value) => {\n                                myGraph.setZoom(value);\n                                dispatcher({ type: T.SET_ZOOM_LEVEL, payload: value });\n                            }\n                        }\n                        included={false}\n                        value={zoomValue}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ZoomComp;\n","class PropFromArr {\n    constructor(obj) {\n        this.arr = [obj];\n        this.flatenArr();\n    }\n\n    flatenArr() {\n        const flatArr = [];\n        for (let i = 0; i < this.arr.length; i += 1) {\n            if (this.arr[i].constructor === Array) this.arr[i].forEach((o) => this.arr.push(o));\n            else flatArr.push(this.arr[i]);\n        }\n        this.arr = flatArr;\n    }\n\n    G(p) {\n        return new PropFromArr(this.arr.map((o) => o[p]).filter((o) => o));\n    }\n\n    S(p) {\n        this.arr = this.arr.map((o) => o[p]).filter((o) => o);\n        this.flatenArr();\n        return this;\n    }\n\n    any() {\n        const arr = [];\n        this.arr.forEach((obj) => {\n            Object.keys(obj).forEach((key) => {\n                arr.push(obj[key]);\n            });\n        });\n        this.arr = arr;\n        this.flatenArr();\n        return this;\n    }\n\n    parseProps(s, t) {\n        const propFromArr = new PropFromArr(this.arr);\n        s.split('.').forEach(\n            (property) => (property === '*' ? propFromArr.any() : propFromArr.S(property)),\n        );\n        if (t === 1) return propFromArr.A();\n        if (t === 2) return propFromArr;\n        return propFromArr.F();\n    }\n\n    A() { return this.arr; }\n\n    F() { return this.arr[0]; }\n}\nexport default PropFromArr;\n","import PropFromArr from './PropFromArr';\n\nconst mapByDefault = (x, arr, def) => {\n    if (arr.includes(x)) return x;\n    return def;\n};\n\nconst parseNode = (node) => {\n    const p = new PropFromArr(node).parseProps('data.y:ShapeNode', 2);\n    return {\n        label: p.parseProps('y:NodeLabel._') || p.parseProps('y:NodeLabel'),\n        id: new PropFromArr(node).parseProps('$.id'),\n        position: {\n            x: parseFloat(p.parseProps('y:Geometry.$.x')),\n            y: parseFloat(p.parseProps('y:Geometry.$.y')),\n        },\n        style: {\n            width: parseFloat(p.parseProps('y:Geometry.$.width')),\n            height: parseFloat(p.parseProps('y:Geometry.$.height')),\n            opacity: parseInt(p.parseProps('y:Fill.$.opacity'), 10) || 1,\n            shape: mapByDefault(p.parseProps('y:Shape.$.type'), ['rectangle', 'ellipse'], 'rectangle'),\n            backgroundColor: p.parseProps('y:Fill.$.color'),\n            borderColor: p.parseProps('y:BorderStyle.$.color'),\n            borderWidth: parseInt(p.parseProps('y:BorderStyle.$.width'), 10),\n        },\n    };\n};\n\nconst parseEdge = (edge) => ({\n    label: new PropFromArr(edge).parseProps('data.*.y:EdgeLabel._')\n             || new PropFromArr(edge).parseProps('data.*.y:EdgeLabel'),\n    source: new PropFromArr(edge).parseProps('$.source'),\n    target: new PropFromArr(edge).parseProps('$.target'),\n    style: {\n        backgroundColor: new PropFromArr(edge).parseProps('data.*.y:LineStyle.$.color'),\n        thickness: parseFloat(new PropFromArr(edge).parseProps('data.*.y:LineStyle.$.width')),\n        shape: mapByDefault(new PropFromArr(edge).parseProps('data.*.y:LineStyle.$.type'),\n            ['dashed', 'dotted'], 'solid'),\n    },\n    bendData: {\n        bendPoint: new PropFromArr(edge).parseProps('data.*.y:Path.y:Point.$'),\n    },\n});\n\nconst parseActionML = (({ actionName, parameters }) => ({ actionName: actionName[0], parameters: parameters[0] }));\n\nconst parseActionHistory = (grahML) => grahML.parseProps('graphml.graph.actionHistory', 1)\n    .map(({\n        equivalent, inverse, tid,\n    }) => ({\n\n        equivalent: parseActionML(equivalent[0]),\n        inverse: parseActionML(inverse[0]),\n        tid: tid[0],\n    }));\n\nconst parseDetails = (grahML) => grahML.parseProps('graphml.graph.$');\n\nexport {\n    parseNode, parseEdge, parseDetails, parseActionHistory,\n};\n","import xml2js from 'xml2js';\nimport PropFromArr from './PropFromArr';\nimport {\n    parseNode, parseEdge, parseDetails, parseActionHistory,\n} from './parseProperties';\n\nconst parser = (graphMlCnt) => new Promise((resolve) => {\n    new xml2js.Parser().parseString(graphMlCnt, (err, grahMLObj) => {\n        const grahML = new PropFromArr(grahMLObj);\n        const nodes = grahML.parseProps('graphml.graph.node', 1).map(parseNode);\n        const edges = grahML.parseProps('graphml.graph.edge', 1).map(parseEdge);\n        const {\n            id, projectName, serverID, authorName,\n        } = parseDetails(grahML);\n        const actionHistory = parseActionHistory(grahML);\n        resolve({\n            id, projectName, edges, nodes, actionHistory, serverID, authorName,\n        });\n    });\n});\nexport default parser;\n","import { toast } from 'react-toastify';\nimport parser from '../graph-builder/graphml/parser';\nimport { actionType as T } from '../reducer';\n\nconst getGraphFun = (superState) => superState.curGraphInstance;\n\nconst createNode = (state, setState) => {\n    setState({\n        type: T.Model_Open_Create_Node,\n        cb: (label, style) => {\n            const message = getGraphFun(state).validiateNode(label, style, null, 'New');\n            if (message.ok) getGraphFun(state).addNode(label, style);\n            return message;\n        },\n    });\n};\n\nconst editElement = (state, setState) => {\n    const shouldUpdateLabel = state.eleSelectedPayload.ids.length === 1;\n    const tid = new Date().getTime();\n    if (state.eleSelectedPayload.type === 'NODE') {\n        setState({\n            type: T.Model_Open_Update_Node,\n            cb: (label, style) => {\n                const retMessage = { ok: true, err: null };\n                state.eleSelectedPayload.ids.forEach((id) => {\n                    const message = getGraphFun(state).validiateNode(\n                        shouldUpdateLabel ? label : null, style, id, 'Update',\n                    );\n                    retMessage.ok = retMessage.ok && message.ok;\n                    retMessage.err = retMessage.err || message.err;\n                });\n                if (retMessage.ok) {\n                    state.eleSelectedPayload.ids.forEach(\n                        (id) => getGraphFun(state).updateNode(id, style, label, shouldUpdateLabel, tid),\n                    );\n                }\n                return retMessage;\n            },\n            labelAllowed: shouldUpdateLabel,\n            label: getGraphFun(state).getLabel(state.eleSelectedPayload.ids[0]),\n            style: getGraphFun(state).getStyle(state.eleSelectedPayload.ids[0]),\n        });\n    }\n    if (state.eleSelectedPayload.type === 'EDGE') {\n        setState({\n            type: T.Model_Open_Update_Edge,\n            cb: (label, style) => {\n                const retMessage = { ok: true, err: null };\n                state.eleSelectedPayload.ids.forEach((id) => {\n                    const message = getGraphFun(state).validiateEdge(\n                        shouldUpdateLabel ? label : null, style, null, null, id, 'Update',\n                    );\n                    retMessage.ok = retMessage.ok && message.ok;\n                    retMessage.err = retMessage.err || message.err;\n                });\n                if (retMessage.ok) {\n                    state.eleSelectedPayload.ids.forEach(\n                        (id) => getGraphFun(state).updateEdge(id, style, label, shouldUpdateLabel, tid),\n                    );\n                }\n                return retMessage;\n            },\n            labelAllowed: shouldUpdateLabel,\n            label: getGraphFun(state).getLabel(state.eleSelectedPayload.ids[0]),\n            style: getGraphFun(state).getStyle(state.eleSelectedPayload.ids[0]),\n        });\n    }\n};\n\nconst deleteElem = (state, dispatcher) => {\n    const tid = new Date().getTime();\n    state.eleSelectedPayload.ids.forEach((id) => getGraphFun(state).deleteElem(id, tid));\n    dispatcher({ type: T.ELE_UNSELECTED, payload: null });\n};\n\nconst downloadImg = (state, setState, format) => {\n    getGraphFun(state).downloadImg(format);\n};\n\nconst saveAction = (state) => {\n    getGraphFun(state).saveToDisk();\n};\n\nasync function saveGraphMLFile(state) {\n    if (state.curGraphInstance) {\n        const graph = state.graphs[state.curGraphIndex];\n        if (graph.fileHandle) {\n            const stream = await graph.fileHandle.createWritable();\n            await stream.write(getGraphFun(state).saveToFolder());\n            await stream.close();\n            toast.success('File saved Successfully');\n        } else if (!graph.fileHandle) {\n            getGraphFun(state).saveWithoutFileHandle();\n        } else {\n            toast.info('Switch to Edge/Chrome!');\n        }\n    } else {\n        toast.info('Switch to Edge/Chrome!');\n    }\n}\n\nconst readFile = async (state, setState, file, fileHandle) => {\n    if (file) {\n        const fr = new FileReader();\n        const projectName = file.name;\n        if (file.name.split('.').pop() === 'graphml') {\n            fr.onload = (x) => {\n                parser(x.target.result).then(({ authorName }) => {\n                    setState({\n                        type: T.ADD_GRAPH,\n                        payload: {\n                            projectName, graphML: x.target.result, fileHandle, fileName: file.name, authorName,\n                        },\n                    });\n                });\n            };\n            if (fileHandle) fr.readAsText(await fileHandle.getFile());\n            else fr.readAsText(file);\n        }\n    }\n};\n\nconst readTextFile = (state, setState, file, fileHandle) => {\n    if (file) {\n        setState({\n            type: T.EDIT_TEXTFILE,\n            payload: { show: true, fileObj: file, fileHandle },\n        });\n    }\n};\n\nconst optionModalToggle = (state, setState) => {\n    setState({\n        type: T.SET_OPTIONS_MODAL,\n        payload: true,\n    });\n};\n\nconst createFile = (state, setState) => {\n    setState({\n        type: T.EDIT_TEXTFILE,\n        payload: { show: true },\n    });\n};\n\nconst newProject = (state, setState) => {\n    setState({ type: T.NEW_GRAPH });\n};\n\nconst clearAll = (state) => {\n    getGraphFun(state).clearAll();\n};\n\nconst contribute = (state, setState) => {\n    setState({ type: T.SET_CONTRIBUTE_MODAL, payload: true });\n};\n\nconst resetAfterClear = (state) => {\n    getGraphFun(state).resetAfterClear();\n};\n\nconst toggleLogs = (state, dispatcher) => {\n    dispatcher({ type: T.SET_LOGS, payload: !state.logs });\n};\n\nconst editDetails = (state, setState) => {\n    setState({\n        type: T.SET_EDIT_DETAILS_MODAL,\n        payload: true,\n    });\n};\n\nconst undo = (state) => {\n    if (getGraphFun(state)) getGraphFun(state).undo();\n};\nconst redo = (state) => {\n    getGraphFun(state).redo();\n};\n\nconst openShareModal = (state, setState) => {\n    setState({ type: T.SET_SHARE_MODAL, payload: true });\n};\n\nconst openSettingModal = (state, setState) => {\n    setState({ type: T.SET_SETTING_MODAL, payload: true });\n};\n\nconst viewHistory = (state, setState) => {\n    setState({ type: T.SET_HISTORY_MODAL, payload: true });\n};\n\nconst toggleServer = (state, dispatcher) => {\n    if (state.isWorkflowOnServer) {\n        dispatcher({ type: T.IS_WORKFLOW_ON_SERVER, payload: false });\n    } else {\n        dispatcher({ type: T.IS_WORKFLOW_ON_SERVER, payload: true });\n    }\n};\n\nexport {\n    createNode, editElement, deleteElem, downloadImg, saveAction, saveGraphMLFile,\n    createFile, readFile, readTextFile, newProject, clearAll, editDetails, undo, redo,\n    openShareModal, openSettingModal, viewHistory, resetAfterClear, toggleLogs,\n    toggleServer, optionModalToggle, contribute,\n};\n","import React from 'react';\nimport {\n    MdEdit, MdClose, MdAdd,\n} from 'react-icons/md';\nimport hotkeys from 'hotkeys-js';\nimport ReactTooltip from 'react-tooltip';\nimport localStorageManager from '../graph-builder/local-storage-manager';\nimport { actionType as T } from '../reducer';\nimport { newProject, editDetails } from '../toolbarActions/toolbarFunctions';\nimport './tabBar.css';\n\nconst TabBar = ({ superState, dispatcher }) => {\n    const closeTab = (i, e) => {\n        e.stopPropagation();\n        // eslint-disable-next-line no-alert\n        if (!window.confirm('Do you confirm to close the tab? This action is irreversable.')) return;\n        localStorageManager.remove(superState.graphs[i] ? superState.graphs[i].graphID : null);\n        dispatcher({ type: T.REMOVE_GRAPH, payload: i });\n        if (!superState.curGraphIndex && superState.graphs.length === 1) {\n            dispatcher({ type: T.SET_CUR_INSTANCE, payload: null });\n            dispatcher({ type: T.SET_CUR_INDEX, payload: -1 });\n        }\n    };\n    const editCur = (e) => {\n        e.stopPropagation();\n        editDetails(superState, dispatcher);\n    };\n    React.useEffect(() => {\n        hotkeys('ctrl+shift+m,command+shift+m', (event) => {\n            event.preventDefault();\n            document.getElementById('new_graph').click();\n        });\n        hotkeys('ctrl+shift+e,command+shift+e', (event) => {\n            event.preventDefault();\n            const el = document.querySelector('.tab.tab-graph.selected > .tab-act.edit');\n            if (el) el.click();\n        });\n        hotkeys('ctrl+shift+l,command+shift+l', (event) => {\n            event.preventDefault();\n            const el = document.querySelector('.tab.tab-graph.selected > .tab-act.close');\n            if (el) el.click();\n        });\n    }, []);\n\n    return (\n        <div className=\"tab-par\">\n            <button\n                className=\"tab\"\n                onClick={newProject.bind(this, superState, dispatcher)}\n                type=\"button\"\n                id=\"new_graph\"\n                data-tip=\"New Workflow Tab (Ctrl + Shift + M)\"\n            >\n                <MdAdd size={25} />\n            </button>\n            {superState.graphs.map((el, i) => (\n                <div\n                    key={el.graphID}\n                    className={`tab tab-graph ${superState.curGraphIndex === i ? 'selected' : 'none'}`}\n                    onClick={() => dispatcher({ type: T.CHANGE_TAB, payload: i })}\n                    onKeyDown={(ev) => ev.key === ' ' && dispatcher({ type: T.CHANGE_TAB, payload: i })}\n                    role=\"button\"\n                    tabIndex={0}\n                    id={`tab_${i}`}\n                >\n                    <span className=\"tab-text\">\n                        {el.fileName || el.projectName}\n                    </span>\n\n                    {superState.curGraphIndex === i ? (\n                        <button\n                            className=\"tab-act edit\"\n                            onClick={editCur}\n                            type=\"button\"\n                            data-tip=\"Edit Workflow Details (Ctrl + Shift + E)\"\n                            data-for=\"header-tab\"\n                        >\n                            <MdEdit size={16} />\n                        </button>\n                    ) : <></>}\n                    <button\n                        className=\"tab-act close\"\n                        onClick={closeTab.bind(this, i)}\n                        type=\"button\"\n                        data-tip=\"Close current Workflow (Ctrl + Shift + L)\"\n                        data-for=\"header-tab\"\n                    >\n                        <MdClose size={20} />\n                    </button>\n                    <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"solid\" id=\"header-tab\" />\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default TabBar;\n","const nodeML = ({\n  label, id, posX, posY, width, height, opacity, shape, backgroundColor, borderColor, borderWidth,\n}) => ({\n  $: {\n    id,\n  },\n  data: [\n    {\n      $: {\n        key: 'd6',\n      },\n      'y:ShapeNode': [\n        {\n          'y:Geometry': [\n            {\n              $: {\n                height,\n                width,\n                x: posX,\n                y: posY,\n              },\n            },\n          ],\n          'y:Fill': [\n            {\n              $: {\n                color: backgroundColor,\n                opacity,\n              },\n            },\n          ],\n          'y:BorderStyle': [\n            {\n              $: {\n                color: borderColor,\n                width: borderWidth,\n              },\n            },\n          ],\n          'y:NodeLabel': [label],\n          'y:Shape': [\n            {\n              $: {\n                type: shape,\n              },\n            },\n          ],\n        },\n      ],\n    },\n  ],\n});\n\nexport default nodeML;\n","const graphML = ({\n  nodes, edges, id, projectName, authorName, actionHistory, serverID, fileHandle, fileName,\n}) => ({\n  graphml: {\n    $: {\n      xmlns: 'http://graphml.graphdrawing.org/xmlns',\n      'xmlns:xsi': 'http://www.w3.org/2001/XMLSchema-instance',\n      'xsi:schemaLocation': 'http://graphml.graphdrawing.org/xmlns http://www.yworks.com/xml/schema/graphml/1.1/ygraphml.xsd',\n      'xmlns:y': 'http://www.yworks.com/xml/graphml',\n    },\n    key: [\n      {\n        $: {\n          for: 'node',\n          id: 'd6',\n          'yfiles.type': 'nodegraphics',\n        },\n      },\n      {\n        $: {\n          for: 'edge',\n          id: 'd10',\n          'yfiles.type': 'edgegraphics',\n        },\n      },\n    ],\n    graph: [\n      {\n        $: {\n          edgedefault: 'directed',\n          id,\n          projectName,\n          serverID,\n          fileHandle,\n          fileName,\n          authorName,\n        },\n        node: nodes,\n        edge: edges,\n        actionHistory,\n      },\n    ],\n  },\n});\n\nexport default graphML;\n","const edgeML = ({\n  id, label, source, target, lineColor, lineWidth, bendPoint, type,\n}) => ({\n  $: {\n    id,\n    source,\n    target,\n  },\n  data: [\n    {\n      $: {\n        key: 'd10',\n      },\n      'y:GenericEdge': [\n        {\n          $: {\n            configuration: 'com.yworks.bpmn.Connection',\n          },\n          'y:LineStyle': [\n            {\n              $: {\n                color: lineColor,\n                width: lineWidth,\n                type,\n              },\n            },\n          ],\n          'y:Arrows': [\n            {\n              $: {\n                source: 'none',\n                target: 'delta',\n              },\n            },\n          ],\n          'y:EdgeLabel': [label],\n          'y:Path': [\n            {\n              $: {\n                sx: '0.0',\n                sy: '0.0',\n                tx: '0.0',\n                ty: '0.0',\n              },\n              'y:Point': [\n                { $: bendPoint },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n  ],\n});\n\nexport default edgeML;\n","import xml2js from 'xml2js';\nimport nodeML from './nodeML';\nimport graphML from './graphML';\nimport edgeML from './edgeML';\n\nconst builder = (G) => {\n    const nodes = G.nodes.map((node) => (nodeML({\n        label: node.label,\n        id: node.id,\n        posX: node.position.x,\n        posY: node.position.y,\n        ...node.style,\n    })));\n    const edges = G.edges.map((edg, i) => edgeML({\n        id: i,\n        label: edg.label,\n        source: edg.source,\n        target: edg.target,\n        lineColor: edg.style.backgroundColor,\n        lineWidth: edg.style.thickness,\n        bendPoint: edg.bendData.bendPoint,\n        type: edg.style.shape,\n    }));\n    const X = graphML({\n        nodes,\n        edges,\n        projectName: G.projectName,\n        id: G.id,\n        actionHistory: G.actionHistory,\n        serverID: G.serverID,\n        fileHandle: G.fileHandle,\n        fileName: G.fileName,\n        authorName: G.authorName,\n    });\n    const xml = new xml2js.Builder().buildObject(X);\n    return xml;\n};\nexport default builder;\n","import GraphServer from './6-server';\n\nexport default GraphServer;\n","import { toast } from 'react-toastify';\nimport Axios from 'axios';\nimport { actionType as T } from '../../reducer';\nimport GraphLoadSave from './5-load-save';\n// import {\n//     postGraph, updateGraph, forceUpdateGraph, getGraph, getGraphWithHashCheck,\n// } from '../../serverCon/crud_http';\n\nclass GraphServer extends GraphLoadSave {\n    set(config) {\n        const { serverID } = config;\n        super.set(config);\n        if (serverID) {\n            this.setServerID(serverID);\n            this.dispatcher({ type: T.IS_WORKFLOW_ON_SERVER, payload: Boolean(this.serverID) });\n        }\n    }\n    // Not being immplemented in version 1\n    // pushToServer() {\n    //     if (this.serverID) {\n    //         updateGraph(this.serverID, this.getGraphML()).then(() => {\n\n    //         });\n    //     } else {\n    //         postGraph(this.getGraphML()).then((serverID) => {\n    //             this.set({ serverID });\n    //             this.cy.emit('graph-modified');\n    //         });\n    //     }\n    // }\n\n    // forcePushToServer() {\n    //     if (this.serverID) {\n    //         forceUpdateGraph(this.serverID, this.getGraphML()).then(() => {\n\n    //         });\n    //     } else {\n    //         postGraph(this.getGraphML()).then((serverID) => {\n    //             this.set({ serverID });\n    //         });\n    //     }\n    // }\n\n    // forcePullFromServer() {\n    //     if (this.serverID) {\n    //         getGraph(this.serverID).then((graphXML) => {\n    //             this.setGraphML(graphXML);\n    //         });\n    //     } else {\n    //         // eslint-disable-next-line no-toast.success\n    //         toast.success('Not on server');\n    //     }\n    // }\n\n    // pullFromServer() {\n    //     if (this.actionArr.length === 0) { this.forcePullFromServer(); return; }\n    //     if (this.serverID) {\n    //         getGraphWithHashCheck(this.serverID, this.actionArr.at(-1).hash).then((graphXML) => {\n    //             this.setGraphML(graphXML);\n    //         }).catch(() => {\n\n    //         });\n    //     } else {\n    //         // eslint-disable-next-line no-toast.success\n    //         toast.success('Not on server');\n    //     }\n    // }\n\n    build() {\n        // TODO\n        const toastId = toast.info('LOADING.......', {\n            position: 'bottom-left',\n            autoClose: false,\n        });\n        this.dispatcher({ type: T.SET_LOGS, payload: false });\n        Axios.post(`http://127.0.0.1:5000/build/${this.superState.uploadedDirName}?fetch=${this.superState.graphs[this.superState.curGraphIndex].fileName.split('.')[0]}&unlock=${this.superState.unlockCheck}&docker=${this.superState.dockerCheck}&maxtime=${this.superState.maxTime}&params=${this.superState.params}&octave=${this.superState.octave}`)\n            .then((res) => { // eslint-disable-next-line\n                toast.success(res.data['message']);\n                this.dispatcher({\n                    type: T.SET_FUNCTIONS,\n                    payload: {\n                        built: false, ran: false, debugged: true, cleared: false, stopped: false, destroyed: true,\n                    },\n                });\n                this.dispatcher({ type: T.SET_LOGS_MESSAGE, payload: this.superState.logsmessage + res.data.output });\n                toast.dismiss(toastId);\n            }).catch((err) => { // eslint-disable-next-line\n                toast.error(err.message);\n                toast.dismiss(toastId);\n            });\n        if (this.serverID);\n    }\n\n    debug() {\n        // TODO\n        const toastId = toast.info('LOADING.......', {\n            position: 'bottom-left',\n            autoClose: false,\n        });\n        this.dispatcher({ type: T.SET_LOGS, payload: false });\n        Axios.post(`http://127.0.0.1:5000/debug/${this.superState.graphs[this.superState.curGraphIndex].fileName.split('.')[0]}`)\n            .then((res) => { // eslint-disable-next-line\n                toast.success(res.data['message'])\n                this.dispatcher({\n                    type: T.SET_FUNCTIONS,\n                    payload: {\n                        built: false, ran: false, debugged: false, cleared: true, stopped: true, destroyed: true,\n                    },\n                });\n                toast.dismiss(toastId);\n            }).catch((err) => { // eslint-disable-next-line\n                toast.error(err.message);\n                toast.dismiss(toastId);\n            });\n        if (this.serverID);\n    }\n\n    run() {\n        // TODO\n        const toastId = toast.info('LOADING.......', {\n            position: 'bottom-left',\n            autoClose: false,\n        });\n        this.dispatcher({ type: T.SET_LOGS, payload: false });\n        Axios.post(`http://127.0.0.1:5000/run/${this.superState.graphs[this.superState.curGraphIndex].fileName.split('.')[0]}`)\n            .then((res) => { // eslint-disable-next-line\n                toast.success(res.data['message'])\n                this.dispatcher({\n                    type: T.SET_FUNCTIONS,\n                    payload: {\n                        built: false, ran: false, debugged: false, cleared: true, stopped: true, destroyed: true,\n                    },\n                });\n                toast.dismiss(toastId);\n            }).catch((err) => { // eslint-disable-next-line\n                toast.error(err.message);\n                toast.dismiss(toastId);\n            });\n        if (this.serverID);\n    }\n\n    clear() {\n        // TODO\n        const toastId = toast.info('LOADING.......', {\n            position: 'bottom-left',\n            autoClose: false,\n        });\n        this.dispatcher({ type: T.SET_LOGS, payload: false });\n        Axios.post(`http://127.0.0.1:5000/clear/${this.superState.graphs[this.superState.curGraphIndex].fileName.split('.')[0]}\n        ?unlock=${this.superState.unlockCheck}&maxtime=${this.superState.maxTime}&params=${this.superState.params}`)\n            .then((res) => { // eslint-disable-next-line\n                toast.success(res.data['message']);\n                this.dispatcher({\n                    type: T.SET_FUNCTIONS,\n                    payload: {\n                        built: false, ran: true, debugged: true, cleared: false, stopped: true, destroyed: true,\n                    },\n                });\n                toast.dismiss(toastId);\n            }).catch((err) => { // eslint-disable-next-line\n                toast.error(err.message);\n                toast.dismiss(toastId);\n            });\n        if (this.serverID);\n    }\n\n    stop() {\n        // TODO\n        const toastId = toast.info('LOADING.......', {\n            position: 'bottom-left',\n            autoClose: false,\n        });\n        this.dispatcher({ type: T.SET_LOGS, payload: false });\n        Axios.post(`http://127.0.0.1:5000/stop/${this.superState.graphs[this.superState.curGraphIndex].fileName.split('.')[0]}`)\n            .then((res) => { // eslint-disable-next-line\n                toast.success(res.data['message'])\n                this.dispatcher({\n                    type: T.SET_FUNCTIONS,\n                    payload: {\n                        built: false, ran: false, debugged: false, cleared: true, stopped: false, destroyed: true,\n                    },\n                });\n                toast.dismiss(toastId);\n            }).catch((err) => { // eslint-disable-next-line\n                toast.error(err.message);\n                toast.dismiss(toastId);\n            });\n        if (this.serverID);\n    }\n\n    destroy() {\n        // TODO\n        const toastId = toast.info('LOADING.......', {\n            position: 'bottom-left',\n            autoClose: false,\n        });\n        this.dispatcher({ type: T.SET_LOGS, payload: false });\n        Axios.delete(`http://127.0.0.1:5000/destroy/${this.superState.graphs[this.superState.curGraphIndex].fileName.split('.')[0]}`)\n            .then((res) => { // eslint-disable-next-line\n                toast.success(res.data['message'])\n                this.dispatcher({\n                    type: T.SET_FUNCTIONS,\n                    payload: {\n                        built: true, ran: false, debugged: false, cleared: false, stopped: false, destroyed: false,\n                    },\n                });\n                toast.dismiss(toastId);\n            }).catch((err) => { // eslint-disable-next-line\n                toast.error(err.message);\n                toast.dismiss(toastId);\n            });\n        if (this.serverID);\n    }\n\n    library(fileName) {\n        // TODO\n        const toastId = toast.info('LOADING.......', {\n            position: 'bottom-left',\n            autoClose: false,\n        });\n        // this.dispatcher({ type: T.SET_LOGS, payload: false });\n        Axios.post(`http://127.0.0.1:5000/library/${this.superState.uploadedDirName}?filename=${fileName}&path=${this.superState.library}`)\n            .then((res) => { // eslint-disable-next-line\n                toast.info(res.data['message'])\n                toast.dismiss(toastId);\n            }).catch((err) => { // eslint-disable-next-line\n                toast.error(err.message);\n                toast.dismiss(toastId);\n            });\n        if (this.serverID);\n    }\n\n    setCurStatus() {\n        super.setCurStatus();\n        this.dispatcher({ type: T.IS_WORKFLOW_ON_SERVER, payload: Boolean(this.serverID) });\n    }\n}\n\nexport default GraphServer;\n","import { saveAs } from 'file-saver';\nimport { toast } from 'react-toastify';\nimport localStorageManager from '../local-storage-manager';\nimport graphmlBuilder from '../graphml/builder';\nimport BendingDistanceWeight from '../calculations/bending-dist-weight';\nimport GraphUndoRedo from './4-undo-redo';\nimport graphMLParser from '../graphml/parser';\nimport { actionType as T } from '../../reducer';\n\nclass GraphLoadSave extends GraphUndoRedo {\n    autoSaveIntervalId\n\n    constructor(...args) {\n        super(...args);\n        this.autoSaveIntervalId = null;\n    }\n\n    registerEvents() {\n        super.registerEvents();\n        this.cy.on('add remove data dragfreeon', 'node[type=\"ordin\"]', () => this.saveLocalStorage());\n        this.cy.on('add remove data', 'edge[type=\"ordin\"]', () => this.saveLocalStorage());\n        this.cy.on('nodeediting.resizeend graph-modified', () => this.saveLocalStorage());\n    }\n\n    downloadImg(format) {\n        this.cy.emit('hide-bend');\n        this.cy.$('.eh-handle').remove();\n        if (format === 'PNG') saveAs(this.cy.png({ full: true }), `${this.getName()}-DHGWorkflow.png`);\n        if (format === 'JPG') saveAs(this.cy.jpg({ full: true }), `${this.getName()}-DHGWorkflow.jpg`);\n    }\n\n    shouldNodeBeSaved(nodeID) {\n        return this.getById(nodeID).data('type') === 'ordin';\n    }\n\n    shouldEdgeBeSaved(edgeID) {\n        return this.getById(edgeID).data('type') === 'ordin';\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getRealSourceId(nodeID) {\n        return nodeID;\n    }\n\n    static stringifyAction({ actionName, parameters }) {\n        return { actionName, parameters: window.btoa(JSON.stringify(parameters)) };\n    }\n\n    static parseAction({ actionName, parameters }) {\n        return { actionName, parameters: JSON.parse(window.atob(parameters)) };\n    }\n\n    jsonifyGraph() {\n        const graph = {\n            nodes: [],\n            edges: [],\n            actionHistory: [],\n            projectName: this.projectName,\n            id: this.id,\n            serverID: this.serverID,\n            fileName: null,\n            fileHandle: null,\n            authorName: this.authorName,\n        };\n        this.cy.nodes().forEach((node) => {\n            if (this.shouldNodeBeSaved(node.id())) {\n                const all = node.json();\n                const nodeJson = {\n                    label: all.data.label,\n                    id: all.data.id,\n                    position: all.position,\n                    style: {},\n                };\n                nodeJson.style = this.getStyle(node.id());\n                graph.nodes.push(nodeJson);\n            }\n        });\n        this.cy.edges().forEach((edge) => {\n            if (this.shouldEdgeBeSaved(edge.id())) {\n                const edgeJson = edge.json().data;\n                edgeJson.source = this.getRealSourceId(edge.source().id());\n                edgeJson.style = this.getStyle(edge.id());\n                edgeJson.bendData.bendPoint = BendingDistanceWeight.getCoordinate(\n                    edgeJson.bendData.bendWeight, edgeJson.bendData.bendDistance,\n                    edge.source().position(), edge.target().position(),\n                );\n                graph.edges.push(edgeJson);\n            }\n        });\n        graph.actionHistory = this.actionArr.map(({\n            tid, inverse, equivalent, hash,\n        }) => ({\n            tid,\n            inverse: GraphLoadSave.stringifyAction(inverse),\n            equivalent: GraphLoadSave.stringifyAction(equivalent),\n            hash,\n        }));\n        return graph;\n    }\n\n    getName() {\n        return `${this.projectName}`;\n    }\n\n    async saveToDisk() {\n        const str = graphmlBuilder(this.jsonifyGraph());\n        const bytes = new TextEncoder().encode(str);\n        const blob = new Blob([bytes], { type: 'application/json;charset=utf-8' });\n        if (navigator.userAgent.indexOf('Edg') !== -1 || navigator.userAgent.indexOf('Chrome') !== -1) {\n            const options = {\n                types: [\n                    {\n                        description: 'GraphMl Files',\n                        accept: {\n                            'text/graphml': ['.graphml'],\n                        },\n                    },\n                ],\n            };\n            const handle = await window.showSaveFilePicker(options);\n            const stream = await handle.createWritable();\n            await stream.write(blob);\n            await stream.close();\n        } else {\n            // eslint-disable-next-line no-alert\n            const fileName = prompt('Filename:');\n            saveAs(blob, `${fileName || `${this.getName()}-concore`}.graphml`);\n        }\n        toast.success('File saved Successfully');\n    }\n\n    async saveWithoutFileHandle() {\n        const { userAgent } = navigator;\n        if (userAgent.match(/firefox|fxios/i)) {\n            toast.info('Switch to Edge/Chrome!');\n            return;\n        }\n        const str = graphmlBuilder(this.jsonifyGraph());\n        const bytes = new TextEncoder().encode(str);\n        const blob = new Blob([bytes], { type: 'application/json;charset=utf-8' });\n        const options = {\n            types: [\n                {\n                    description: 'GraphMl Files',\n                    accept: {\n                        'text/graphml': ['.graphml'],\n                    },\n                },\n            ],\n        };\n        const handle = await window.showSaveFilePicker(options);\n        this.dispatcher({\n            type: T.SET_FILE_HANDLE,\n            payload: { curGraphIndex: this.superState.curGraphIndex, fileHandle: handle },\n        });\n        const stream = await handle.createWritable();\n        await stream.write(blob);\n        await stream.close();\n        toast.success('File saved Successfully');\n    }\n\n    saveToFolder() {\n        const str = graphmlBuilder(this.jsonifyGraph());\n        return str;\n    }\n\n    getGraphML() {\n        return graphmlBuilder(this.jsonifyGraph());\n    }\n\n    loadJson(content) {\n        content.nodes.forEach((node) => {\n            this.addNode(node.label, node.style, 'ordin', node.position, {}, node.id, 0);\n        });\n        content.edges.forEach((edge) => {\n            this.addEdge({ ...edge, sourceID: edge.source, targetID: edge.target }, 0);\n        });\n        content.actionHistory.forEach(({\n            inverse, equivalent, tid,\n        }) => {\n            this.addAction(GraphLoadSave.parseAction(inverse), GraphLoadSave.parseAction(equivalent), tid);\n        });\n        this.setProjectName(content.projectName);\n        this.setServerID(this.serverID || content.serverID);\n        this.setProjectAuthor(content.authorName);\n    }\n\n    saveLocalStorage() {\n        if (this.autoSaveIntervalId !== null) clearTimeout(this.autoSaveIntervalId);\n        this.autoSaveIntervalId = setTimeout(() => localStorageManager.save(this.id, this.jsonifyGraph()), 1000);\n    }\n\n    setGraphML(graphML) {\n        graphMLParser(graphML).then((graphObject) => {\n            localStorageManager.save(this.id, graphObject);\n            this.loadGraphFromLocalStorage();\n        });\n    }\n\n    resetLocalStorage() {\n        localStorageManager.clearGraph(this.id);\n    }\n\n    loadGraphFromLocalStorage() {\n        this.reset();\n        const graphContent = localStorageManager.get(this.id);\n        if (!graphContent) return false;\n        this.loadJson(graphContent);\n        return true;\n    }\n\n    serializeGraph() {\n        return window.btoa(JSON.stringify(this.jsonifyGraph()));\n    }\n}\n\nexport default GraphLoadSave;\n","import md5 from 'md5';\nimport GraphComponent from './3-component';\nimport GA from '../graph-actions';\nimport { actionType as T } from '../../reducer';\n\nclass GraphUndoRedo extends GraphComponent {\n    static methodsMapped\n\n    actionArr\n\n    curActionIndex\n\n    constructor(...props) {\n        super(...props);\n\n        this.methodsMapped = {\n            [GA.ADD_NODE]: (...args) => this.addNode(...args, 0),\n            [GA.ADD_EDGE]: (...args) => this.addEdge(...args, 0),\n            [GA.UPDATE_NODE]: (...args) => this.updateNode(...args, 0),\n            [GA.UPDATE_EDGE]: (...args) => this.updateEdge(...args, 0),\n            [GA.UPDATE_DATA]: (...args) => this.updateData(...args, 0),\n            [GA.DEL_NODE]: (...args) => this.deleteNode(...args, 0),\n            [GA.DEL_EDGE]: (...args) => this.deleteElem(...args, 0),\n            [GA.SET_POS]: (...args) => this.setPos(...args, 0),\n            [GA.SET_DIM]: (...args) => this.setDim(...args, 0),\n            [GA.SET_BENDW]: (...args) => this.setBendWightDist(...args),\n        };\n\n        this.actionArr = [];\n        this.curActionIndex = 0;\n    }\n\n    resetAllAction() {\n        this.actionArr = [];\n        this.curActionIndex = 0;\n    }\n\n    informUI() {\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n\n    performAction({ actionName, parameters }) {\n        const action = this.methodsMapped[actionName];\n        action(...parameters);\n    }\n\n    addPositionChange(id, prevPos, curPos) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_POS, parameters: [id, prevPos, curPos] },\n            { actionName: GA.SET_POS, parameters: [id, curPos, prevPos] }, tid,\n        );\n    }\n\n    addDimensionChange(id, prevDim, prevPos, curDim, curPos) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_DIM, parameters: [id, prevDim, prevPos] },\n            { actionName: GA.SET_DIM, parameters: [id, curDim, curPos] }, tid,\n        );\n    }\n\n    addBendChange(id, prevDW, curDW) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_BENDW, parameters: [id, prevDW] },\n            { actionName: GA.SET_BENDW, parameters: [id, curDW] }, tid,\n        );\n    }\n\n    static sequencify(obj) {\n        if (!(obj instanceof Object)) return obj;\n        let r = [];\n        if (obj instanceof Array) {\n            r = obj.map(GraphUndoRedo.sequencify);\n        } else {\n            Object.keys(obj).sort().forEach((k) => {\n                r.push(`:${k}:`);\n                r.push(GraphUndoRedo.sequencify(obj[k]));\n            });\n        }\n        return r;\n    }\n\n    addAction(inverse, equivalent, tid) {\n        if (tid === 0) return;\n        this.actionArr.splice(this.curActionIndex);\n\n        const actionIdentity = GraphUndoRedo.sequencify(equivalent).toString()\n            + GraphUndoRedo.sequencify(equivalent).toString()\n            + tid;\n        this.actionArr.push({\n            tid,\n            inverse,\n            equivalent,\n            hash: md5(\n                `${actionIdentity}|${this.actionArr.length ? this.actionArr.at(-1).hash : ''}`,\n            ),\n        });\n        this.curActionIndex += 1;\n        this.informUI();\n    }\n\n    undoSingleAction() {\n        if (this.curActionIndex !== 0) {\n            this.curActionIndex -= 1;\n            this.performAction(this.actionArr[this.curActionIndex].inverse);\n            this.informUI();\n        }\n    }\n\n    redoSingleAction() {\n        if (this.curActionIndex !== this.actionArr.length) {\n            this.performAction(this.actionArr[this.curActionIndex].equivalent);\n            this.curActionIndex += 1;\n            this.informUI();\n        }\n    }\n\n    undo() {\n        let curTid = null;\n        if (this.curActionIndex !== 0) curTid = this.actionArr[this.curActionIndex - 1].tid;\n        while (this.curActionIndex !== 0 && this.actionArr[this.curActionIndex - 1].tid === curTid) {\n            this.curActionIndex -= 1;\n            this.performAction(this.actionArr[this.curActionIndex].inverse);\n        }\n        this.informUI();\n    }\n\n    redo() {\n        let curTid = null;\n        if (this.curActionIndex !== this.actionArr.length) curTid = this.actionArr[this.curActionIndex].tid;\n        while (this.curActionIndex !== this.actionArr.length && this.actionArr[this.curActionIndex].tid === curTid) {\n            this.performAction(this.actionArr[this.curActionIndex].equivalent);\n            this.curActionIndex += 1;\n        }\n        this.informUI();\n    }\n\n    resetAfterClear() {\n        const limit = this.curActionIndex;\n        this.curActionIndex = 0;\n        while (this.curActionIndex !== this.actionArr.length && this.curActionIndex !== limit) {\n            this.performAction(this.actionArr[this.curActionIndex].equivalent);\n            this.curActionIndex += 1;\n        }\n        this.informUI();\n        this.dispatcher({ type: T.CHANGE_RESET, payload: false });\n        return true;\n    }\n\n    setCurStatus() {\n        super.setCurStatus();\n        this.informUI();\n    }\n\n    registerEvents() {\n        super.registerEvents();\n        this.cy.on('dragfree', 'node[type = \"ordin\"]', (e) => {\n            e.target.forEach((node) => {\n                this.addPositionChange(node.id(), node.scratch('position'), { ...node.position() });\n            });\n        });\n        this.cy.on('nodeediting.resizeend', (e, type, node) => {\n            this.addDimensionChange(\n                node.id(),\n                { height: node.scratch('height'), width: node.scratch('width') },\n                node.scratch('position'),\n                { height: node.data('style').height, width: node.data('style').width },\n                { ...node.position() },\n            );\n        });\n    }\n}\n\nexport default GraphUndoRedo;\n","const boundaryPoint = {\n    getEq(P1, P2) {\n        const m = (P1.y - P2.y) / (P1.x - P2.x);\n        const c = P1.y - m * P1.x;\n        return [m, c];\n    },\n    getX1X2(Cn, P, w, h) {\n        if (Cn.x === P.x) return [P.x, P.x];\n        const P2 = { x: P.x - Cn.x, y: P.y - Cn.y };\n        const [m, c] = this.getEq({ x: 0, y: 0 }, P2);\n        // (𝑎2𝑚2+𝑏2)𝑥2+2𝑎2𝑚𝑐𝑥+𝑎2(𝑐2–𝑏2)\n        const A = (w ** 2 * m ** 2 + h ** 2);\n        const B = 2 * w ** 2 * m * c;\n        const C = w ** 2 * (c ** 2 - h ** 2);\n        const D = B ** 2 - 4 * A * C;\n        const x1 = (-B + D ** 0.5) / (2 * A) + Cn.x;\n        const x2 = (-B - D ** 0.5) / (2 * A) + Cn.x;\n        return [x1, x2];\n    },\n    getY1Y2(C, P, w, h, x1, x2) {\n        if (x1 === x2) return [C.y + h, C.y - h];\n        const [m, c] = this.getEq(C, P);\n        return [m * x1 + c, m * x2 + c];\n    },\n    dist(A, B) {\n        return ((A.x - B.x) ** 2 + (A.y - B.y) ** 2) ** 0.5;\n    },\n    getClosestEllipse(C, P, w, h) {\n        const [x1, x2] = this.getX1X2(C, P, w, h);\n        const [y1, y2] = this.getY1Y2(C, P, w, h, x1, x2);\n        const [d1, d2] = [this.dist(P, { x: x1, y: y1 }), this.dist(P, { x: x2, y: y2 })];\n        if (d1 < d2) return { x: x1, y: y1 };\n        return { x: x2, y: y2 };\n    },\n    slope(x1, y1, x2, y2) {\n        return (x1 - x2) / (y1 - y2);\n    },\n\n    setSubQ(C, P, w, h) {\n        const [S1, S2] = [[C.x + w, C.y + h], [C.x + w, C.y - h]]\n            .map(([x, y]) => ((C.x - x) * (P.y - y) - (C.y - y) * (P.x - x)) > 0);\n        if (S1 && !S2) return 0;\n        if (!S1 && !S2) return 1;\n        if (!S1 && S2) return 2;\n        if (S1 && S2) return 3;\n        return -1;\n    },\n\n    getClosestRect(C, P, w, h) {\n        const [m, c] = this.getEq(P, C);\n        let D = [\n            [C.x + w, C.y],\n            [C.x, C.y + h],\n            [C.x - w, C.y],\n            [C.x, C.y - h],\n        ];\n        if (Math.abs(m) !== Infinity) {\n            D = [ // To point toward center\n                [C.x + w, m * (C.x + w) + c],\n                [(C.y + h - c) / m, C.y + h],\n                [C.x - w, m * (C.x - w) + c],\n                [(C.y - h - c) / m, C.y - h],\n            ];\n        }\n        const [x, y] = D[this.setSubQ(C, P, w, h)];\n        return { x, y };\n    },\n    get(C, P, w, h, type) {\n        if (type === 'rectangle') return boundaryPoint.getClosestRect(C, P, w, h);\n        return boundaryPoint.getClosestEllipse(C, P, w, h);\n    },\n\n};\n\nexport default boundaryPoint.get;\n","import TailoredGraphBuilder from './tailored-graph-builder';\n\nexport default TailoredGraphBuilder;\n","import CoreGraph from './graph-core';\nimport { actionType as T } from '../reducer';\nimport getBoundaryPoint from './calculations/boundary-point';\nimport GA from './graph-actions';\n\nclass TailoredGraph extends CoreGraph {\n    registerEvents() {\n        super.registerEvents();\n        this.cy.on('drag data moved', 'node[type=\"ordin\"]', (evt) => {\n            evt.target.connectedEdges().connectedNodes('node[type=\"special\"]').forEach((juncNode) => {\n                juncNode.position(TailoredGraph.calJuncNodePos(juncNode));\n            });\n        });\n        this.cy.on('bending', (evt) => {\n            const juncNode = evt.target.source();\n            juncNode.position(TailoredGraph.calJuncNodePos(juncNode));\n        });\n    }\n\n    static calJuncNodePos(juncNode) {\n        const parNode = juncNode.incomers('node')[0];\n        const meanNbrPosition = { x: 0, y: 0 };\n        const setOfPos = new Set();\n        juncNode.outgoers('edge[type=\"ordin\"]')\n            .forEach((edge) => setOfPos.add(JSON.stringify(TailoredGraph.getBendEdgePoint(edge))));\n        setOfPos.forEach((posStr) => {\n            const pos = JSON.parse(posStr);\n            meanNbrPosition.x += pos.x;\n            meanNbrPosition.y += pos.y;\n        });\n        if (setOfPos.size === 0) return juncNode.position();\n        meanNbrPosition.x /= setOfPos.size;\n        meanNbrPosition.y /= setOfPos.size;\n        return getBoundaryPoint(\n            parNode.position(), meanNbrPosition,\n            parNode.data('style').width / 2,\n            parNode.data('style').height / 2,\n            parNode.data('style').shape,\n        );\n    }\n\n    getRealNode(juncNodeId) {\n        return this.getById(juncNodeId).incomers().filter('node')[0];\n    }\n\n    addAutoMove(juncNode) {\n        juncNode.unselectify();\n        return this;\n    }\n\n    addEdgeWithJuncNode(edgeData, tid) {\n        const juncNode = this.getById(edgeData.sourceID);\n        const ed = super.addEdge({\n            ...edgeData,\n            label: juncNode.data('edgeLabel'),\n            style: juncNode.data('edgeStyle'),\n        }, tid);\n        juncNode.position(TailoredGraph.calJuncNodePos(juncNode));\n        return ed;\n    }\n\n    addEdgeWithoutJuncNode(edgeData, tid) {\n        const { sourceID, targetID, style } = edgeData;\n        const [sourceNode, targetNode] = [sourceID, targetID].map(this.getById.bind(this));\n        const sourceNodeStyle = sourceNode.data('style');\n        const juncNodePos = getBoundaryPoint(\n            sourceNode.position(),\n            targetNode.position(),\n            sourceNodeStyle.width / 2,\n            sourceNodeStyle.height / 2,\n            sourceNodeStyle.shape,\n        );\n        const juncNode = super.addNode('', { backgroundColor: style.backgroundColor },\n            'special', juncNodePos, { edgeLabel: edgeData.label, edgeStyle: style }, undefined, tid);\n        juncNode.ungrabify();\n        super.addEdge({\n            sourceID,\n            targetID: juncNode.id(),\n            style: {\n                ...style,\n                'target-arrow-shape': 'none',\n            },\n            type: 'special',\n        }, tid);\n        this.addAutoMove(juncNode, sourceNode);\n        return this.addEdgeWithJuncNode({ ...edgeData, sourceID: juncNode.id() }, tid);\n    }\n\n    addEdgeAction(id, edgeData, tid) {\n        this.addAction(\n            { actionName: GA.DEL_EDGE, parameters: [id] },\n            {\n                actionName: GA.ADD_EDGE,\n                parameters: [{ ...edgeData, sourceID: this.getRealSourceId(edgeData.sourceID), id }],\n            },\n            tid,\n        );\n    }\n\n    addEdge(edgeData, tidd = this.getTid()) {\n        const tid = 0;\n        const { sourceID, targetID, label } = edgeData;\n        const [sourceNode, targetNode] = [sourceID, targetID].map(this.getById.bind(this));\n        const juncNodes = sourceNode.outgoers('node').filter((node) => label && node.data('edgeLabel') === label);\n\n        let edge;\n        if (targetNode.data('type') !== 'ordin') return edge; // Don't Add Node\n        if (sourceNode.data('type') === 'special') edge = this.addEdgeWithJuncNode(edgeData, tid);\n        else if (juncNodes.length) edge = this.addEdgeWithJuncNode({ ...edgeData, sourceID: juncNodes[0].id() }, tid);\n        else if (label && label.length) edge = this.addEdgeWithoutJuncNode(edgeData, tid);\n        else {\n            this.dispatcher({\n                type: T.Model_Open_Create_Edge,\n                cb: (edgeLabel, edgeStyle) => {\n                    const message = this.validiateEdge(edgeLabel, edgeStyle, sourceID, targetID, null, 'New');\n                    if (message.ok) edge = this.addEdge({ ...edgeData, label: edgeLabel, style: edgeStyle }, tid);\n                    if (edge) this.addEdgeAction(edge.id(), { ...edgeData, label: edgeLabel, style: edgeStyle }, tidd);\n                    return message;\n                },\n            });\n        }\n        if (edge) this.addEdgeAction(edge.id(), edgeData, tidd);\n        return edge;\n    }\n\n    updateEdge(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        this.addAction(\n            {\n                actionName: GA.UPDATE_EDGE,\n                parameters: [id, this.getStyle(id), this.getById(id).data('label'), shouldUpdateLabel],\n            },\n            { actionName: GA.UPDATE_EDGE, parameters: [id, style, label, shouldUpdateLabel] },\n            tid,\n        );\n        const junctionNode = this.getById(id).source();\n        if (shouldUpdateLabel) this.updateData(junctionNode.data('id'), 'edgeLabel', label, 0);\n        this.updateData(junctionNode.data('id'), 'edgeStyle', style, 0);\n        this.updateNode(junctionNode.data('id'), { backgroundColor: style.backgroundColor }, '', false, 0);\n\n        junctionNode\n            .outgoers('edge')\n            .forEach((edge) => super.updateEdge(edge.data('id'), style, label, shouldUpdateLabel, 0));\n    }\n\n    deleteElem(id, tid = this.getTid()) {\n        const el = this.getById(id);\n        if (el.isNode()) {\n            if (el.removed()) return;\n            el.outgoers('node[type=\"special\"]')\n                .connectedEdges('edge[type=\"ordin\"]')\n                .forEach((edge) => this.deleteElem(edge.id(), tid));\n            el.connectedEdges('edge[type=\"ordin\"]')\n                .forEach((edge) => this.deleteElem(edge.id(), tid));\n\n            const node = this.getById(id);\n            this.addAction(\n                {\n                    actionName: GA.ADD_NODE,\n                    parameters: [\n                        node.data('label'), this.getStyle(node.id()), node.data('type'),\n                        node.position(), node.json().data, id,\n                    ],\n                },\n                { actionName: GA.DEL_NODE, parameters: [id] }, tid,\n            );\n            super.deleteNode(id, 0);\n        } else {\n            if (!this.getById(id).length || el.removed()) return;\n            const jsonEd = this.getById(id).json().data;\n            this.addAction(\n                {\n                    actionName: GA.ADD_EDGE,\n                    parameters: [{\n                        ...jsonEd, sourceID: this.getRealSourceId(jsonEd.source), targetID: jsonEd.target,\n                    }],\n                },\n                { actionName: GA.DEL_EDGE, parameters: [id] }, tid,\n            );\n            const junctionNode = el.source();\n            super.deleteEdge(id, 0);\n            if (junctionNode) if (junctionNode.outgoers().length === 0) this.deleteNode(junctionNode.id(), 0);\n        }\n    }\n\n    getRealSourceId(nodeID) {\n        if (this.getById(nodeID).data('type') === 'ordin') return nodeID;\n        if (this.getById(nodeID).incomers('node').length === 0) return nodeID;\n        return this.getById(nodeID).incomers('node')[0].id();\n    }\n\n    getEdgesBetweenNodes(n1, n2) {\n        const [c1, c2] = [n1, n2]\n            .map((n) => this.getById(this.getRealSourceId(n)))\n            .map((r) => r.outgoers('node[type=\"special\"]').union(r));\n        return c1.edgesWith(c2);\n    }\n\n    getNodesEdges() {\n        const nodes = this.cy.$('node[type=\"ordin\"]').map((node) => ({\n            label: node.data('label'),\n            style: node.data('style'),\n            id: node.data('id'),\n        }));\n        const edges = {};\n        this.cy.$('edge[type=\"ordin\"]').forEach((edge) => {\n            const label = edge.data('label');\n            const sourceLabel = this.getById(this.getRealSourceId(edge.source().id())).data('label');\n            const targetLabel = edge.target().data('label');\n            const style = edge.data('style');\n            const id = edge.data('id');\n            if (!edges[label]) {\n                edges[label] = {\n                    targetLabel: [targetLabel], sourceLabel, id, label, style,\n                };\n            } else edges[label].targetLabel.push(targetLabel);\n        });\n        return [nodes, Object.values(edges)];\n    }\n}\n\nexport default TailoredGraph;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { edgeValidator, nodeValidator } from './config/defaultValidators';\nimport MyGraph from './graph-builder';\nimport { actionType as T } from './reducer';\n\nfunction Graph({\n    el, superState, dispatcher, graphID, serverID, graphML, projectName, graphContainerRef, active, authorName,\n}) {\n    const [instance, setInstance] = useState(null);\n    const ref = useRef();\n    const setContainerDim = (element) => {\n        if (element) {\n            const elToAss = element;\n            elToAss.style.width = `${graphContainerRef.current.offsetWidth - 2}px`;\n            elToAss.style.height = `${graphContainerRef.current.offsetHeight - 2}px`;\n        }\n    };\n\n    const initialiseNewGraph = () => {\n        const myGraph = new MyGraph(\n            graphID, ref.current, dispatcher, superState, projectName, nodeValidator, edgeValidator, authorName,\n        );\n        if (graphID) myGraph.loadGraphFromLocalStorage();\n        if (serverID) {\n            myGraph.set({ serverID });\n            myGraph.forcePullFromServer();\n        }\n        if (graphML) myGraph.setGraphML(graphML);\n        myGraph.setCurStatus();\n        return myGraph;\n    };\n    // Remote server implementation - Not being used.\n    // useEffect(() => {\n    //     if (active && loaded && serverID) {\n    //         window.history.pushState(null, null, path.join(process.env.PUBLIC_URL, 's', serverID));\n    //     } else if (active && loaded && graphID) {\n    //         window.history.pushState(null, null, path.join(process.env.PUBLIC_URL, 'l', graphID));\n    //     }\n    // }, [active, serverID, loaded, graphID]);\n    useEffect(() => instance && instance.set({ superState }), [instance, superState]);\n    useEffect(() => active && instance && instance.setCurStatus(), [active && instance]);\n    useEffect(() => {\n        if (active && instance) dispatcher({ type: T.SET_CUR_INSTANCE, payload: instance });\n    }, [active && instance]);\n\n    useEffect(() => {\n        if (ref.current) {\n            setContainerDim(ref.current);\n            window.addEventListener('resize', () => setContainerDim(ref.current));\n            setInstance(initialiseNewGraph());\n        }\n    }, [ref]);\n\n    const { id } = el;\n\n    return (\n        <div\n            style={{ zIndex: 1, display: active ? 'block' : 'none' }}\n            key={id}\n            className=\"graph-element\"\n            ref={ref}\n        />\n    );\n}\nexport default Graph;\n","const nodeValidator = `(node, nodes, edges) => {\n    var regex = /^[A-za-z0-9]+[:[A-Za-z0-9.]+]|[^$]$/;\n    let message = { ok: true, err: null };\n    if (!regex.test(node.label)) {\n        message = {\n            ok: false,\n            err: 'Node with incorrect label.',\n        }\n        return message;\n    }\n    nodes.forEach((n) => {\n        if (n.id !== node.id && n.label.split(':')[0] === node.label.split(':')[0]) {\n            message = {\n                ok: false,\n                err: 'Node with same label exists.',\n            };\n        }\n    });\n    return message;\n    }`;\nconst edgeValidator = `(edge, nodes, edges) => {\nlet message = { ok: true, err: null };\nlet numEdge = \"\";\nfor (let char of edge.label) {\n    if (!isNaN(parseInt(char))) {\n      numEdge += char;\n    } else if (numEdge !== \"\") {\n      break;\n    }\n}\nedges.forEach((e) => {\n    if (e.label === edge.label && e.sourceLabel !== edge.sourceLabel) {\n        message = {\n            ok: false,\n            err: 'Edge with same label exists.',\n        };\n    }\n    let numE = \"\";\n    for (let char of e.label) {\n        if (!isNaN(parseInt(char))) {\n        numE += char;\n        } else if (numE !== \"\") {\n        break;\n        }\n    }\n    if (numE === numEdge && numE != \"0\" && numE !== \"\") {\n        message = {\n            ok: false,\n            err: '2 edges cannot have same prefixes if they are number',\n        };\n        return message;\n    }\n});\nreturn message;\n}`;\n\n/* eslint-disable max-len */\nconst nodeValidatorFormat = `Takes **\\`node\\`** details under validation, existing **\\`nodes\\`**, existing **\\`edges\\`** and **\\`type\\`**\n\n**Node:** { label: String, style: Object, id: String | undefined },\n**Nodes:** [{ label: String, style: Object, id: String }],\n**Edges:** [{ label: String, sourceLabel: String, targetLabel: String, style: Object, id: String }],\n**Type:** \\`New\\` | \\`Update\\``;\n\nconst edgeValidatorFormat = `Takes **\\`edge\\`** details under validation, existing **\\`nodes\\`** and existing **\\`edges\\`** and **\\`type\\`**\n\n**Edge:** { label: String, sourceLabel: String, targetLabel: String, style: Object, id: String | undefined },\n**Nodes:** [{ label: String, style: Object, id: String }],\n**Edges:** [{ label: String, sourceLabel: String, targetLabel: String, style: Object, id: String }],\n**Type:** \\`New\\` | \\`Update\\``;\n/* eslint-enable max-len */\n\nexport {\n    nodeValidator, edgeValidator, nodeValidatorFormat, edgeValidatorFormat,\n};\n","import React, { useEffect } from 'react';\nimport ZoomComp from './component/ZoomSetter';\n\nimport { actionType as T } from './reducer';\nimport './graphWorkspace.css';\nimport localStorageManager from './graph-builder/local-storage-manager';\nimport TabBar from './component/TabBar';\nimport Graph from './GraphArea';\n\nconst GraphComp = (props) => {\n    const graphContainerRef = React.useRef();\n    const { dispatcher, superState } = props;\n    // const [loadedFromStorage, setLoadedFromStorage] = React.useState(false);\n\n    useEffect(() => {\n        const allSavedGs = localStorageManager.getAllGraphs().map((graphID) => ({\n            graphID,\n        }));\n        dispatcher({\n            type: T.ADD_GRAPH_BULK,\n            payload: allSavedGs,\n        });\n        // setLoadedFromStorage(true);\n    }, []);\n\n    // Remote server implementation - Not being used.\n    // useEffect(() => {\n    //     if (!loadedFromStorage) return;\n    //     const graphFromParams = Object.fromEntries(new URLSearchParams(window.location.search).entries()).g;\n    //     if (graphFromParams) {\n    //         const graphContent = JSON.parse(window.atob(graphFromParams));\n    //         const gid = new Date().getTime().toString();\n    //         localStorageManager.addToFront(gid);\n    //         localStorageManager.save(gid, graphContent);\n    //         window.history.replaceState({}, document.title, window.location.pathname);\n    //         dispatcher({ type: T.ADD_GRAPH, payload: { graphID: gid } });\n    //     }\n    //     const urlParms = window.location.pathname.split('/');\n    //     const serverIDIndex = urlParms.indexOf('s');\n    //     const localIDIndex = urlParms.indexOf('l');\n    //     if (serverIDIndex !== -1 && serverIDIndex + 1 < urlParms.length) {\n    //         const serverID = urlParms[serverIDIndex + 1];\n    //         dispatcher({ type: T.ADD_GRAPH, payload: { serverID } });\n    //     }\n    //     if (localIDIndex !== -1 && localIDIndex + 1 < urlParms.length) {\n    //         const graphID = urlParms[localIDIndex + 1];\n    //         dispatcher({ type: T.ADD_GRAPH, payload: { graphID } });\n    //     }\n    // }, [loadedFromStorage]);\n\n    return (\n        <div\n            style={{\n                flex: 1,\n                flexDirection: 'column',\n                display: 'flex',\n                width: '100%',\n            }}\n        >\n            <TabBar superState={superState} dispatcher={dispatcher} />\n            <div style={{ flex: 1, background: 'white' }} className=\"graph-container\" ref={graphContainerRef}>\n                {superState.graphs.map((el, i) => (\n                    <Graph\n                        el={el}\n                        i={i}\n                        superState={superState}\n                        graphContainerRef={graphContainerRef}\n                        dispatcher={dispatcher}\n                        key={el.graphID}\n                        active={i === superState.curGraphIndex}\n                        graphID={el.graphID}\n                        serverID={el.serverID}\n                        graphML={el.graphML}\n                        projectName={el.projectName}\n                        fileHandle={el.fileHandle}\n                        fileName={el.fileName}\n                        authorName={el.authorName}\n                    />\n                ))}\n                <ZoomComp dispatcher={dispatcher} superState={superState} />\n            </div>\n        </div>\n    );\n};\n\nexport default GraphComp;\n","import React, { useState, useEffect } from 'react';\nimport ReactModal from 'react-modal';\nimport './parent-modal.css';\n\nReactModal.setAppElement('#root');\n\nconst Modal = ({\n    closeModal, ModelOpen, title, children,\n}) => {\n    const [curClass, setCurClass] = useState('');\n    const [isOpen, setIsOpen] = useState(ModelOpen);\n    const [stid, setStid] = useState(null);\n    useEffect(() => {\n        if (ModelOpen === true) {\n            setIsOpen(true);\n            setCurClass('closing');\n            clearTimeout(stid);\n            setStid(setTimeout(() => {\n                setIsOpen(true);\n                setCurClass('');\n            }, 20));\n        } else {\n            setCurClass('closing');\n            clearTimeout(stid);\n            setStid(setTimeout(() => {\n                setIsOpen(false);\n            }, 400));\n        }\n    }, [ModelOpen]);\n\n    if (!isOpen) return '';\n    return (\n        <ReactModal\n            isOpen={isOpen}\n            contentLabel=\"onRequestClose Example\"\n            // onRequestClose={closeModal} // prevent modal from closing when clicked outside\n            className=\"Modal\"\n            overlayClassName={`Overlay ${curClass}`}\n        >\n            <div className={`modal-content ${curClass}`}>\n                <div className=\"modal-header\">\n                    <div className=\"modal-title h4\">{title}</div>\n                    <button type=\"button\" className=\"close\" onClick={closeModal}>\n                        {closeModal ? <span aria-hidden=\"true\">×</span> : ''}\n                        <span className=\"sr-only\">Close</span>\n                    </button>\n                </div>\n                <div className=\"modal-body\">\n                    {children}\n                </div>\n            </div>\n        </ReactModal>\n    );\n};\nexport default Modal;\n","import { toast } from 'react-toastify';\nimport React, { useState, useEffect } from 'react';\nimport './graph-comp-details.css';\nimport ParentModal from './ParentModal';\nimport { readTextFile, createFile } from '../../toolbarActions/toolbarFunctions';\nimport { actionType as T } from '../../reducer';\n\nconst ModalComp = ({ closeModal, superState, dispatcher }) => {\n    const [data, setData] = useState({});\n    const [errorMessage, setErrorMessage] = useState('');\n    const [element, setElement] = useState(null);\n    const [editSourceClicked, setEditSourceClicked] = useState(false);\n    const [createSourceClicked, setCreateSourceClicked] = useState(false);\n    const [createHelpClicked, setCreateHelpClicked] = useState(false);\n    const { modalPayload, ModelOpen } = superState;\n    const {\n        cb, title, submitText, Children, defaultStyle, defaultLabel, labelAllowed, type,\n    } = modalPayload;\n\n    useEffect(() => {\n        setErrorMessage('');\n    }, [ModelOpen]);\n\n    useEffect(() => {\n        setData({ label: defaultLabel || '', style: defaultStyle });\n        setErrorMessage('');\n    }, [defaultLabel, defaultStyle]);\n\n    const submit = (e) => {\n        e.preventDefault();\n        const message = cb(data.label, data.style);\n        if (message.ok) {\n            setErrorMessage('');\n            setData({ label: defaultLabel || '', style: defaultStyle });\n            closeModal();\n        } else setErrorMessage(message.err);\n    };\n\n    useEffect(() => {\n        if (createSourceClicked) {\n            createFile(superState, dispatcher);\n        }\n        if (editSourceClicked && element === null) {\n            toast.error('Respective file is not present in same directory');\n        } else if (element !== null) {\n            readTextFile(superState, dispatcher, element.fileObj, element.fileHandle);\n        }\n        setEditSourceClicked(false);\n        setCreateSourceClicked(false);\n    }, [createSourceClicked, editSourceClicked]);\n\n    useEffect(() => {\n        if (createHelpClicked) {\n            createFile(superState, dispatcher);\n        }\n        setCreateHelpClicked(false);\n    }, [createHelpClicked]);\n\n    const openFile = () => {\n        setElement(null);\n        if (superState.fileState !== undefined && data.label !== '') {\n            const fname = data.label.split(':')[1];\n            superState.fileState.forEach((ele) => {\n                if (ele.key.split('/')[1] === fname || ele.key.split('/')[2] === fname) {\n                    setElement(ele);\n                }\n            });\n        }\n        if (submitText === 'Edit Node') {\n            setEditSourceClicked(true);\n        } else if (submitText === 'Create Node') {\n            setCreateSourceClicked(true);\n        }\n    };\n\n    const openDoc = () => {\n        setElement(null);\n        if (superState.fileState !== undefined && data.label !== '') {\n            const docname1 = data.label.split(':')[1].split('.')[0].concat('.md');\n            const docname2 = data.label.split(':')[1].split('.')[0].concat('.txt');\n            superState.fileState.forEach((ele) => {\n                if (ele.key.split('/')[1] === docname1 || ele.key.split('/')[1] === docname2) {\n                    setElement(ele);\n                }\n            });\n        }\n        setCreateHelpClicked(true);\n    };\n\n    const openMarkDownDoc = async () => {\n        dispatcher({ type: T.SET_MARKDOWN_MODAL, payload: true });\n        setElement(null);\n        if (superState.fileState !== undefined && data.label !== '') {\n            const docname1 = data.label.split(':')[1].split('.')[0].concat('.md');\n            const matchingElement = superState.fileState.find((ele) => ele.key.split('/')[1] === docname1);\n            if (matchingElement) {\n                const fr = new FileReader();\n                fr.onload = (x) => {\n                    // eslint-disable-next-line max-len\n                    dispatcher({ type: T.SET_INPUT_FILE, payload: { content: x.target.result, fname: matchingElement.key.split('/')[1] } });\n                };\n                if (matchingElement.fileHandle) {\n                    fr.readAsText(await matchingElement.fileHandle.getFile());\n                } else if (matchingElement.fileObj) {\n                    fr.readAsText(matchingElement.fileObj);\n                }\n                setElement(matchingElement);\n            }\n        }\n    };\n\n    const createLibrary = () => {\n        const fileName = data.label.split(':')[1];\n        if (fileName === undefined || fileName === '') {\n            toast.error('Enter File Name');\n            return;\n        }\n        superState.curGraphInstance.library(fileName);\n    };\n\n    return (\n        <ParentModal closeModal={closeModal} ModelOpen={ModelOpen} title={title}>\n            <form onSubmit={submit}>\n                <div className=\"modal-content-body\">\n                    <Children data={data} setData={setData} labelAllowed={labelAllowed} state={superState} />\n                    {errorMessage ? <div className=\"err\">{errorMessage}</div> : <></>}\n                </div>\n                <div className=\"modal-footer\">\n                    <button type=\"submit\" className=\"btn btn-primary\">{submitText}</button>\n                    { type === 'Node' ? (\n                        <>\n                            <button\n                                className=\"btn btn-primary\"\n                                type=\"button\"\n                                onClick={openFile}\n                            >\n                                { submitText === 'Edit Node' ? 'Edit Source' : 'Create Source' }\n                            </button>\n                            { title === 'Edit Node'\n                                ? (\n                                    <button\n                                        className=\"btn btn-primary\"\n                                        type=\"button\"\n                                        onClick={openMarkDownDoc}\n                                    >\n                                        Help\n                                    </button>\n                                ) : (\n                                    <button\n                                        className=\"btn btn-primary\"\n                                        type=\"button\"\n                                        onClick={openDoc}\n                                    >\n                                        Create Help\n                                    </button>\n                                )}\n                            { title === 'Edit Node'\n                                ? ''\n                                : (\n                                    <button\n                                        className=\"btn btn-primary\"\n                                        type=\"button\"\n                                        onClick={createLibrary}\n                                    >\n                                        Create Library\n                                    </button>\n                                )}\n                        </>\n                    ) : '' }\n                </div>\n            </form>\n        </ParentModal>\n    );\n};\nexport default ModalComp;\n","/* eslint-disable no-alert */\nimport {\n    FaSave, FaUndo, FaRedo, FaTrash, FaFileImport, FaPlus, FaDownload, FaEdit, FaRegTimesCircle, FaHistory,\n    FaHammer, FaBug, FaBomb, FaToggleOn, FaThermometerEmpty, FaTrashRestore, FaCogs, FaPencilAlt, FaTerminal,\n} from 'react-icons/fa';\n\nimport {\n    // FiChevronDown, FiChevronsDown, FiChevronsUp, FiChevronUp,\n    FiPlay, FiStopCircle, FiToggleLeft, FiTriangle,\n} from 'react-icons/fi';\n\nimport {\n    createNode, editElement, deleteElem, downloadImg, saveAction, saveGraphMLFile,\n    createFile, readFile, clearAll, undo, redo, viewHistory, resetAfterClear,\n    toggleServer, optionModalToggle, toggleLogs, contribute,\n    // openSettingModal,\n} from './toolbarFunctions';\n\nconst toolbarList = (state, dispatcher) => [\n    {\n        type: 'action',\n        text: 'Node',\n        icon: FaPlus,\n        action: createNode,\n        active: state.curGraphInstance,\n        visibility: true,\n        hotkey: 'Ctrl+G',\n    },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'Create',\n        icon: FaPencilAlt,\n        action: createFile,\n        active: true,\n        visibility: true,\n    },\n    {\n        type: 'file-upload',\n        text: 'Open',\n        icon: FaFileImport,\n        action: readFile,\n        active: true,\n        visibility: true,\n        hotkey: 'Ctrl+O',\n    },\n    {\n        type: 'action',\n        text: 'Save',\n        icon: FaSave,\n        action: saveGraphMLFile,\n        active: state.curGraphInstance,\n        visibility: true,\n    },\n    {\n        type: 'action',\n        text: 'Save As',\n        icon: FaSave,\n        action: (s, d) => saveAction(s, d),\n        active: state.curGraphInstance,\n        visibility: true,\n    },\n    {\n        type: 'action',\n        text: 'Empty',\n        icon: FaThermometerEmpty,\n        action: clearAll,\n        active: state.curGraphInstance && !state.resetEnabled,\n        visibility: true,\n        hotkey: 'Ctrl+Backspace',\n    },\n    {\n        type: 'action',\n        text: 'Restore',\n        icon: FaTrashRestore,\n        action: resetAfterClear,\n        active: state.curGraphInstance && state.resetEnabled,\n        visibility: true,\n        hotkey: 'Ctrl+I',\n    },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'Undo',\n        icon: FaUndo,\n        action: undo,\n        active: state.undoEnabled && state.curGraphInstance && !state.resetEnabled,\n        visibility: true,\n        hotkey: 'Ctrl+Z',\n    },\n    {\n        type: 'action',\n        text: 'Redo',\n        icon: FaRedo,\n        action: redo,\n        active: state.redoEnabled && state.curGraphInstance && !state.resetEnabled,\n        visibility: true,\n        hotkey: 'Ctrl+Shift+Z,Ctrl+Y',\n    },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'Edit',\n        icon: FaEdit,\n        action: editElement,\n        active: state.curGraphInstance && state.eleSelected,\n        visibility: true,\n        hotkey: 'Ctrl+E',\n    },\n    {\n        type: 'action',\n        text: 'Delete',\n        icon: FaTrash,\n        action: () => deleteElem(state, dispatcher),\n        active: state.curGraphInstance && state.eleSelected,\n        visibility: true,\n        hotkey: 'Delete,Backspace,Del,Clear',\n    },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'History',\n        icon: FaHistory,\n        action: viewHistory,\n        active: state.curGraphInstance,\n        visibility: true,\n    },\n    { type: 'vsep' },\n    // server buttons\n    {\n        type: 'action',\n        text: 'Logs',\n        icon: FaTerminal,\n        action: toggleLogs,\n        active: true,\n        visibility: true,\n    },\n    {\n        type: 'action',\n        text: 'Server',\n        icon: state.isWorkflowOnServer ? FaToggleOn : FiToggleLeft,\n        action: () => toggleServer(state, dispatcher),\n        active: state.curGraphInstance,\n        visibility: true,\n    },\n    {\n        type: 'action',\n        text: 'Options',\n        icon: FaCogs,\n        action: () => optionModalToggle(state, dispatcher),\n        active: state.isWorkflowOnServer,\n        visibility: state.isWorkflowOnServer && state.curGraphInstance,\n    },\n    {\n        type: 'action',\n        text: 'Build',\n        icon: FaHammer,\n        action: () => state.curGraphInstance && state.curGraphInstance.build(),\n        active: state.curGraphIndex !== -1\n            ? state.isWorkflowOnServer && state.graphs[state.curGraphIndex].built\n            : state.isWorkflowOnServer,\n        visibility: state.isWorkflowOnServer && state.curGraphInstance,\n    },\n    {\n        type: 'action',\n        text: 'Debug',\n        icon: FaBug,\n        action: () => state.curGraphInstance && state.curGraphInstance.debug(),\n        active: state.curGraphIndex !== -1\n            ? state.isWorkflowOnServer && state.graphs[state.curGraphIndex].debugged\n            : state.isWorkflowOnServer,\n        visibility: state.isWorkflowOnServer && state.curGraphInstance,\n    },\n    {\n        type: 'action',\n        text: 'Run',\n        icon: FiPlay,\n        action: () => state.curGraphInstance && state.curGraphInstance.run(),\n        active: state.curGraphIndex !== -1\n            ? state.isWorkflowOnServer && state.graphs[state.curGraphIndex].ran\n            : state.isWorkflowOnServer,\n        visibility: state.isWorkflowOnServer && state.curGraphInstance,\n    },\n    {\n        type: 'action',\n        text: 'Clear',\n        icon: FaRegTimesCircle,\n        action: () => state.curGraphInstance && state.curGraphInstance.clear(),\n        active: state.curGraphIndex !== -1\n            ? state.isWorkflowOnServer && state.graphs[state.curGraphIndex].cleared\n            : state.isWorkflowOnServer,\n        visibility: state.isWorkflowOnServer && state.curGraphInstance,\n    },\n    {\n        type: 'action',\n        text: 'Stop',\n        icon: FiStopCircle,\n        action: () => state.curGraphInstance && state.curGraphInstance.stop(),\n        active: state.curGraphIndex !== -1\n            ? state.isWorkflowOnServer && state.graphs[state.curGraphIndex].stopped\n            : state.isWorkflowOnServer,\n        visibility: state.isWorkflowOnServer && state.curGraphInstance,\n    },\n    {\n        type: 'action',\n        text: 'Destroy',\n        icon: FaBomb,\n        action: () => state.curGraphInstance && state.curGraphInstance.destroy(),\n        active: state.curGraphIndex !== -1\n            ? state.isWorkflowOnServer && state.graphs[state.curGraphIndex].destroyed\n            : state.isWorkflowOnServer,\n        visibility: state.isWorkflowOnServer && state.curGraphInstance,\n    },\n\n    // Not being implemented in version 1\n    // {\n    //     type: 'action',\n    //     text: 'Push',\n    //     icon: FiChevronUp,\n    //     action: () => state.curGraphInstance && state.curGraphInstance.pushToServer(),\n    //     active: state.curGraphInstance && state.isWorkflowOnServer,\n    // },\n    // {\n    //     type: 'action',\n    //     text: 'Pull',\n    //     icon: FiChevronDown,\n    //     action: () => state.curGraphInstance && state.curGraphInstance.pullFromServer(),\n    //     active: state.curGraphInstance && state.isWorkflowOnServer,\n    // },\n    // {\n    //     type: 'action',\n    //     text: 'Force Push',\n    //     icon: FiChevronsUp,\n    //     action: () => state.curGraphInstance && state.curGraphInstance.forcePushToServer(),\n    //     active: state.curGraphInstance && state.isWorkflowOnServer,\n    // },\n    // {\n    //     type: 'action',\n    //     text: 'Force Pull',\n    //     icon: FiChevronsDown,\n    //     action: () => state.curGraphInstance && state.curGraphInstance.forcePullFromServer(),\n    //     active: state.curGraphInstance && state.isWorkflowOnServer,\n    // },\n    // { type: 'vsep' },\n    { type: 'space' },\n    // Not being implemented in version 1\n    // {\n    //     type: 'action',\n    //     text: 'Settings',\n    //     icon: FaRegSun,\n    //     action: openSettingModal,\n    //     active: true,\n    // },\n    {\n        type: 'action',\n        text: 'Contribute',\n        icon: FiTriangle,\n        action: contribute,\n        active: true,\n        visibility: true,\n    },\n    // {\n    //     type: 'action',\n    //     text: 'Share',\n    //     icon: FaShare,\n    //     action: openShareModal,\n    //     active: true,\n    //     visibility: true,\n    // },\n    {\n        type: state.curGraphInstance ? 'menu' : 'action',\n        text: 'Export',\n        icon: FaDownload,\n        action: (s, d) => [\n            { fn: () => downloadImg(s, d, 'JPG'), name: 'JPG' },\n            { fn: () => downloadImg(s, d, 'PNG'), name: 'PNG' },\n        ],\n        visibility: true,\n        active: state.curGraphInstance,\n    },\n    { type: 'vsep' },\n];\n\nexport default toolbarList;\n","import React from 'react';\nimport Switch from 'rc-switch';\nimport { Menu, MenuItem, MenuButton } from '@szhsin/react-menu';\n\nfunction DropDown({\n    Icon, text, action, active, visibility, tabIndex, hotkey,\n}) {\n    return (\n        <Menu menuButton={(\n            <MenuButton>\n                <ActionButton {...{\n                    Icon, text, action, active, visibility, tabIndex, hotkey,\n                }}\n                />\n            </MenuButton>\n        )}\n        >\n            {action().map(({ fn, name }) => <MenuItem onClick={fn} key={name}>{name}</MenuItem>)}\n        </Menu>\n    );\n}\n\nconst FileUploader = ({\n    Icon, text, active, visibility, tabIndex, hotkey, superState,\n}) => (\n    <ActionButton {...{\n        Icon, text, active, visibility, tabIndex, action: () => superState.fileRef.current.click(), hotkey,\n    }}\n    />\n);\n\nconst Switcher = ({\n    text, action, active, tabIndex,\n}) => (\n    <div\n        role=\"button\"\n        tabIndex={tabIndex}\n        className={`tool ${active ? 'active' : ''}`}\n        onClick={action}\n        onKeyDown={(ev) => ev.key === ' ' && action()}\n    >\n        <Switch\n            onChange={action}\n            checked={active}\n            className=\"react-switch\"\n        />\n        <div>\n            {text}\n        </div>\n    </div>\n);\n\nconst ActionButton = ({\n    Icon, text, action, active, visibility, tabIndex, hotkey,\n}) => (\n    <div\n        role=\"button\"\n        id={`action_${tabIndex}`}\n        tabIndex={tabIndex}\n        className={`tool ${active ? 'active' : ''}`}\n        onClick={() => (active && action())}\n        onKeyDown={(ev) => active && ev.key === ' ' && action()}\n        data-tip={hotkey ? hotkey.split(',')[0] : ''}\n        style={{ display: `${visibility ? '' : 'none'}` }}\n    >\n        <div className=\"icon\"><Icon size=\"20\" /></div>\n        <div style={{ fontSize: 14 }}>{text}</div>\n    </div>\n);\n\nconst TextBox = ({ children }) => (\n    <div className=\"tool\" style={{ width: 'auto' }}>\n        <div className=\"middle tool-text-only\" style={{ fontSize: 16, color: '#888', height: '100%' }}>\n            {children}\n        </div>\n    </div>\n);\n\nconst Vsep = () => <div className=\"Vsep sep\" />;\nconst Hsep = () => <div className=\"hsep sep\" />;\nconst Space = () => <div className=\"space\" />;\n\nexport {\n    ActionButton, Vsep, Hsep, Space, TextBox, Switcher, DropDown, FileUploader,\n};\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport hotkeys from 'hotkeys-js';\nimport toolbarList from '../toolbarActions/toolbarList';\nimport '@szhsin/react-menu/dist/index.css';\nimport './header.css';\nimport {\n    ActionButton, Vsep, Hsep, Space, TextBox, Switcher, DropDown, FileUploader,\n} from './HeaderComps';\nimport 'rc-switch/assets/index.css';\n// import ServerActions from './serverActions/ServerActions';\n\nconst setHotKeys = (actions) => {\n    let keys = '';\n    const map = {};\n    actions.forEach((action, i) => {\n        if (action.hotkey) {\n            action.hotkey.split(',').forEach((key) => {\n                [key, key.replace('Ctrl', 'Command')].forEach((k) => {\n                    keys += `${k},`;\n                    map[k] = document.getElementById(`action_${i + 1}`);\n                });\n            });\n        }\n    });\n    keys = keys.substring(0, keys.length - 1);\n    hotkeys(keys, (event, handler) => {\n        event.preventDefault();\n        map[handler.shortcut].click();\n    });\n};\n\nconst Header = ({ superState, dispatcher }) => {\n    const actions = toolbarList(superState, dispatcher);\n    React.useEffect(() => {\n        setHotKeys(actions, superState, dispatcher);\n    }, []);\n\n    return (\n        <header className=\"header\">\n            <section className=\"middle titlebar\">\n                {\n                    superState.curGraphInstance ? `${\n                        superState.curGraphInstance.projectName\n                    } - concore Editor` : 'untitled'\n                }\n            </section>\n            <section className=\"toolbar\">\n                {\n                    actions.map(({\n                        text, active, visibility, action, icon, type, hotkey,\n                    }, i) => {\n                        const props = {\n                            text,\n                            active,\n                            visibility,\n                            tabIndex: i + 1,\n                            key: text,\n                            action: (e) => action(superState, dispatcher, e),\n                            Icon: icon,\n                            hotkey,\n                        };\n                        switch (type) {\n                        case 'vsep': return <Vsep key={`${`v${i}`}`} />;\n                        case 'space': return <Space key={`${`s${i}`}`} />;\n                        case 'switch': return <Switcher {...props} />;\n                        case 'menu': return <DropDown {...props} />;\n                        case 'file-upload': return <FileUploader {...props} superState={superState} />;\n                        case 'action': return <ActionButton {...props} />;\n                        // case 'serverActions': return <ServerActions superState={superState} />;\n                        default: return <></>;\n                        }\n                    })\n                }\n            </section>\n            <Hsep />\n        </header>\n\n    );\n};\n\nexport {\n    Header, ActionButton, Vsep, Hsep, Space, TextBox,\n};\n","import React, { useEffect, useState, useCallback } from 'react';\nimport Modal from './ParentModal';\nimport './project-details.css';\nimport { actionType as T } from '../../reducer';\nimport localStorageManager from '../../graph-builder/local-storage-manager';\n\nconst ProjectDetails = ({ superState, dispatcher }) => {\n    const curGraph = superState.graphs[superState.curGraphIndex];\n    const [projectName, setProjectName] = useState('Untitled');\n    const [authorName, setAuthorName] = useState('Default');\n    // const [serverID, setServerID] = useState('');\n    const inputRef = useCallback((node) => node && node.focus(), []);\n    const { newGraphModal } = superState;\n    const editDetailsModal = superState.editDetailsModal || (curGraph && !curGraph.projectName);\n\n    useEffect(() => {\n        if (superState.editDetailsModal && curGraph) {\n            setProjectName(curGraph.projectName);\n            setAuthorName(curGraph.authorName);\n        } else {\n            setProjectName('');\n        }\n    }, [curGraph?.authorName, superState.editDetailsModal, curGraph]);\n\n    useEffect(() => {\n        if (curGraph?.authorName) {\n            setAuthorName(curGraph.authorName);\n        } else {\n            const authorNameE = localStorageManager.getAuthorName();\n            setAuthorName(authorNameE);\n        }\n    }, []);\n\n    const submit = (e) => {\n        e.preventDefault();\n        if (newGraphModal) dispatcher({ type: T.ADD_GRAPH, payload: { projectName, authorName } });\n        else if (editDetailsModal) {\n            superState.curGraphInstance.setProjectName(projectName);\n            superState.curGraphInstance.setProjectAuthor(authorName);\n            dispatcher({ type: T.SET_EDIT_DETAILS_MODAL, payload: false });\n        }\n        localStorageManager.saveAllgs();\n        localStorageManager.setAuthorName(authorName);\n    };\n\n    const openExisting = () => {\n        superState.fileRef.current.click();\n    };\n\n    const closeModal = () => {\n        if (superState.newGraphModal) dispatcher({ type: T.SET_NEW_GRAPH_MODAL, payload: false });\n        else if (superState.editDetailsModal) dispatcher({ type: T.SET_EDIT_DETAILS_MODAL, payload: false });\n    };\n    // const loadFromServer = () => {\n    //     dispatcher({ type: T.ADD_GRAPH, payload: { serverID } });\n    // };\n    const NewWorkflow = () => (\n        <>\n            {/* <div className=\"divider\" />\n            <input\n                placeholder=\"Enter the Server ID of Workflow\"\n                value={serverID}\n                onChange={(e) => setServerID(e.target.value)}\n                className=\"serverIDText\"\n            />\n            <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                onClick={loadFromServer}\n            >\n                Load From Server\n\n            </button> */}\n            <div className=\"divider\" />\n            <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                onClick={openExisting}\n            >\n                Open Existing From GraphML File\n\n            </button>\n        </>\n    );\n\n    return (\n        <Modal\n            ModelOpen={newGraphModal || editDetailsModal}\n            closeModal={superState.editDetailsModal || superState.newGraphModal ? closeModal : null}\n            title=\"Project Details\"\n        >\n            <form className=\"proj-details\" onSubmit={submit}>\n                <span>Workflow Name</span>\n                <input\n                    ref={inputRef}\n                    placeholder=\"Title of workflow\"\n                    required\n                    value={projectName}\n                    onChange={(e) => setProjectName(e.target.value)}\n                />\n                <span>Author</span>\n                <input\n                    placeholder=\"Author of workflow\"\n                    value={authorName}\n                    onChange={(e) => setAuthorName(e.target.value)}\n                    required\n                />\n                <div className=\"expand\">\n                    <button type=\"submit\" className=\"btn btn-primary\">Save</button>\n                </div>\n                <div className=\"expand\">\n                    {newGraphModal && <NewWorkflow />}\n                </div>\n            </form>\n        </Modal>\n    );\n};\n\nexport default ProjectDetails;\n","import React, { useEffect, useState } from 'react';\nimport Modal from './ParentModal';\nimport './shareModal.css';\nimport { actionType as T } from '../../reducer';\n\nconst ShareModal = ({ superState, dispatcher }) => {\n    const [serializedGraph, setSerializedGraph] = useState('');\n    const [copyText, setCopyText] = useState('Copy');\n    const cond = superState.shareModal && superState.curGraphInstance;\n    useEffect(() => {\n        if (cond) {\n            setSerializedGraph(superState.curGraphInstance.serializeGraph());\n            setCopyText('Copy');\n        }\n    }, [cond]);\n\n    const closeModal = () => {\n        dispatcher({ type: T.SET_SHARE_MODAL, payload: false });\n    };\n    const link = `${window.location.protocol}//${window.location.host}${window.location.pathname}?g=${serializedGraph}`;\n    const copy = () => {\n        navigator.clipboard.writeText(link).then(() => {\n            setCopyText('Copied!');\n            document.getElementsByClassName('preDiv')[0].focus();\n            document.getElementsByClassName('preDiv')[0].select();\n        });\n    };\n\n    return (\n        <Modal\n            ModelOpen={superState.shareModal}\n            title=\"Shareable Link\"\n            closeModal={closeModal}\n        >\n            <div className=\"share-modal\">\n                <input readOnly className=\"preDiv\" value={link} />\n                <button onClick={copy} type=\"button\" className=\"copyBtn\">{copyText}</button>\n            </div>\n\n        </Modal>\n    );\n};\n\nexport default ShareModal;\n","import React from 'react';\nimport './codeEdit.css';\n\nconst CodeEdit = ({\n    pre, post, value, onChange, height, docString,\n}) => {\n    const inputRef = React.createRef();\n    const parseMD = (s) => s.split('**').map((e, i) => {\n        if (i % 2) return <span key={e}><b>{e}</b></span>;\n        return <span key={e}>{e}</span>;\n    });\n    return (\n        <div\n            className=\"textField\"\n            onClick={() => inputRef.current.focus()}\n            onKeyDown={() => inputRef.current.focus()}\n            role=\"textbox\"\n            tabIndex={0}\n        >\n            {docString\n                ? (\n                    <div className=\"docStr\">\n                        {parseMD(docString)}\n                    </div>\n                ) : <div />}\n            <br />\n            {pre\n                ? (\n                    <textarea\n                        className=\"preTextField\"\n                        value={pre}\n                        readOnly\n                        spellCheck=\"false\"\n                    />\n                ) : <div />}\n            <textarea\n                className=\"mainTextField\"\n                spellCheck=\"false\"\n                {...{ value, onChange }}\n                data-gramm_editor=\"false\"\n                style={{ height, width: '90vw' }}\n                ref={inputRef}\n            />\n            {post\n                ? (\n                    <textarea\n                        className=\"postTextField\"\n                        readOnly\n                        value={post}\n                        spellCheck=\"false\"\n                    />\n                ) : <div />}\n        </div>\n    );\n};\n\nexport default CodeEdit;\n","import React, { useState, useEffect } from 'react';\nimport Modal from './ParentModal';\nimport './settings.css';\nimport { actionType as T } from '../../reducer';\nimport CodeEdit from '../CodeEdit';\nimport { nodeValidatorFormat, edgeValidatorFormat } from '../../config/defaultValidators';\n\nconst SettingsModal = ({ superState, dispatcher }) => {\n    const [nodeValidator, setNodeValidator] = useState('');\n    const [edgeValidator, setEdgeValidator] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n    useEffect(() => {\n        if (superState.curGraphInstance) {\n            setNodeValidator(superState.curGraphInstance.getNodeValidator());\n            setEdgeValidator(superState.curGraphInstance.getEdgeValidator());\n        }\n    }, [superState.curGraphInstance]);\n\n    const close = () => dispatcher({ type: T.SET_SETTING_MODAL, payload: false });\n    const submit = () => {\n        try {\n            superState.curGraphInstance.setEdgeNodeValidator({\n                nodeValidator: `(node, nodes, edges, type)=>{${nodeValidator}}`,\n                edgeValidator: `(edge, nodes, edges, type)=>{${edgeValidator}}`,\n            });\n            dispatcher({ type: T.SET_SETTING_MODAL, payload: false });\n            setErrorMessage('');\n        } catch (e) {\n            setErrorMessage(e.message);\n        }\n    };\n\n    return (\n        <Modal\n            ModelOpen={superState.settingsModal}\n            closeModal={close}\n            title=\"Settings\"\n        >\n            <div className=\"setting-container\">\n                <div>\n                    <h3>Node Validator</h3>\n                    <CodeEdit\n                        pre=\"function validateNode(node, nodes, edges, type) {\"\n                        post=\"}\"\n                        value={nodeValidator}\n                        onChange={(e) => setNodeValidator(e.target.value)}\n                        height={200}\n                        docString={nodeValidatorFormat}\n                    />\n                </div>\n                <div>\n                    <h3>Edge  Validator</h3>\n                    <CodeEdit\n                        pre=\"function validateEdge(edge, nodes, edges, type) {\"\n                        post=\"}\"\n                        value={edgeValidator}\n                        onChange={(e) => setEdgeValidator(e.target.value)}\n                        height={200}\n                        docString={edgeValidatorFormat}\n                    />\n                </div>\n                <div className=\"error\">{errorMessage}</div>\n\n                <div className=\"footer\">\n                    <button type=\"submit\" className=\"btn btn-primary\" onClick={submit}>Save</button>\n                </div>\n            </div>\n        </Modal>\n    );\n};\n\nexport default SettingsModal;\n","import React, { useEffect } from 'react';\nimport { FaFileImport } from 'react-icons/fa';\nimport './file-drag-drop.css';\nimport { actionType as T } from '../reducer';\nimport { readFile } from '../toolbarActions/toolbarFunctions';\n\nconst app = ({ superState, dispatcher }) => {\n    const fileRef = React.useRef();\n\n    useEffect(() => {\n        dispatcher({ type: T.SET_FILE_REF, payload: fileRef });\n        const p = document.getElementsByTagName('body')[0];\n        const c = document.getElementsByClassName('drag-drop-area')[0];\n        let cc = 0;\n        p.addEventListener('dragenter', (e) => {\n            e.preventDefault();\n            cc += 1;\n            if (cc === 1) c.classList.remove('hidden');\n        });\n        p.addEventListener('dragleave', (e) => {\n            e.preventDefault();\n            cc -= 1;\n            if (cc === 0) c.classList.add('hidden');\n        });\n\n        p.addEventListener('dragover', (e) => {\n            e.preventDefault();\n        });\n        ['dragend', 'dragexit', 'drop'].forEach((dragEvent) => {\n            p.addEventListener(dragEvent, (e) => {\n                e.preventDefault();\n                cc = 0;\n                c.classList.add('hidden');\n            });\n        });\n\n        p.addEventListener('drop', (e) => {\n            e.preventDefault();\n            fileRef.current.value = null;\n            if (e.dataTransfer.files.length === 1\n                && e.dataTransfer.files[0].name.split('.').slice(-1)[0] === 'graphml') {\n                readFile(superState, dispatcher, e.dataTransfer.files[0]);\n            }\n        });\n    }, []);\n    return (\n        <div className=\"drag-drop-area hidden\">\n            <div className=\"inner\">\n                <FaFileImport size={100} style={{ color: '#1e88e5' }} />\n                <div>\n                    <input\n                        type=\"file\"\n                        ref={fileRef}\n                        onClick={(e) => { e.target.value = null; }}\n                        style={{ display: 'none' }}\n                        accept=\".graphml\"\n                        onChange={(e) => readFile(superState, dispatcher, e)}\n                    />\n                    <span className=\"arrow\">&#10230;</span>\n                    <h1 className=\"text\">Drop the File anywhere to open</h1>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default app;\n","import React, { useEffect, useState } from 'react';\nimport Modal from './ParentModal';\nimport './settings.css';\nimport { actionType as T } from '../../reducer';\nimport GA from '../../graph-builder/graph-actions';\nimport './history.css';\n\nconst HistoryModal = ({ superState, dispatcher }) => {\n    const [curState, setcurState] = useState(0);\n    const [historyList, setHistoryList] = useState([]);\n    const [historyView, setHistoryView] = useState([]);\n    const actions = [\n        GA.ADD_NODE, GA.ADD_EDGE,\n        GA.UPDATE_NODE, GA.UPDATE_EDGE,\n        GA.DEL_NODE, GA.DEL_EDGE,\n        GA.SET_DIM, GA.SET_BENDW, GA.SET_POS,\n    ];\n    const mapActionToTrue = () => {\n        const res = {};\n        actions.forEach((action) => { res[action] = true; });\n        return res;\n    };\n    const [filterAction, setFilterAction] = useState(mapActionToTrue());\n\n    const getLabelFromID = (x) => {\n        if (superState.curGraphInstance) {\n            return superState.curGraphInstance.getLabelFromID(x);\n        }\n        return '';\n    };\n    useEffect(() => {\n        if (superState.curGraphInstance) {\n            setHistoryList([\n                ...superState.curGraphInstance.actionArr\n                    .slice().reverse().map((action, i) => ({ ...action, i })),\n            ]);\n            setcurState(\n                superState.curGraphInstance.actionArr.length\n                - superState.curGraphInstance.curActionIndex,\n            );\n        }\n    }, [superState.viewHistory, superState.graphs, superState.curGraphInstance, curState]);\n\n    const stringifyAction = (equivalent) => {\n        const par = equivalent.parameters;\n        switch (equivalent.actionName) {\n        case GA.ADD_NODE: return `Created new Node: ${par[0]}`;\n        case GA.ADD_EDGE: return `Created new Edge ${\n            getLabelFromID(par[0].id)\n        } between ${getLabelFromID(par[0].sourceID)} and ${getLabelFromID(par[0].targetID)}`;\n        case GA.UPDATE_NODE: return `Updated Label/Style for ${getLabelFromID(par[0])} node`;\n        case GA.UPDATE_EDGE: return `Updated Edge ${getLabelFromID(par[0])}`;\n        case GA.DEL_NODE: return `Deleted Node: ${getLabelFromID(par[0])}`;\n        case GA.DEL_EDGE: return `Deleted Edge: ${getLabelFromID(par[0])}`;\n        case GA.SET_POS: return `Moved node ${getLabelFromID(par[0])} on canvas`;\n        case GA.SET_DIM: return `Changed dimension of node ${getLabelFromID(par[0])}`;\n        case GA.SET_BENDW: return `Modified Bend Point of node ${getLabelFromID(par[0])}`;\n        default: return '';\n        }\n    };\n\n    const stringifyActionType = {\n        [GA.ADD_NODE]: 'NodeAddition:',\n        [GA.ADD_EDGE]: 'EdgeAddition',\n        [GA.UPDATE_NODE]: 'NodeUpdates',\n        [GA.UPDATE_EDGE]: 'EdgeUpdates',\n        [GA.DEL_NODE]: 'NodeDeletion',\n        [GA.DEL_EDGE]: 'EdgeDeletion',\n        [GA.SET_POS]: 'NodePosChange',\n        [GA.SET_DIM]: 'NodeDimensionChange',\n        [GA.SET_BENDW]: 'EdgeBend',\n    };\n\n    const restoreState = (index) => {\n        // eslint-disable-next-line no-alert\n        if (window.confirm('Are you sure to restore the selected state?')) {\n            let tempCurState = curState;\n            while (index > tempCurState) {\n                superState.curGraphInstance.undoSingleAction();\n                tempCurState += 1;\n            }\n            while (index < tempCurState) {\n                superState.curGraphInstance.redoSingleAction();\n                tempCurState -= 1;\n            }\n            setcurState(tempCurState);\n        }\n    };\n    const prefixTid = (tid, str, authorName, index, hash) => {\n        const DT = new Date(parseInt(tid, 10));\n        const date = DT.toLocaleDateString();\n        const time = DT.toLocaleTimeString();\n        const c = (\n            <>\n                <td>\n                    {\n                        index === curState ? '[Current]' : (\n                            <button className=\"a-link\" type=\"button\" onClick={() => restoreState(index)}>\n                                [Restore]\n                            </button>\n                        )\n                    }\n                </td>\n                <td>{`${date}-${time}`}</td>\n                <td>\n                    [\n                    <b>{`${authorName}`}</b>\n                    ]\n                </td>\n                <td style={{ fontWeight: 100 }}>{str}</td>\n                <td style={{ fontWeight: 100 }}>{hash}</td>\n            </>\n        );\n        // if (index === curState) return <u>{c}</u>;\n        return c;\n    };\n\n    const parseAction = ({\n        equivalent, tid, i, authorName, hash,\n    }) => prefixTid(\n        tid, stringifyAction(equivalent), authorName, i, hash,\n    );\n\n    useEffect(() => {\n        setHistoryView(historyList.filter((action) => filterAction[action.equivalent.actionName]).map(parseAction));\n    }, [filterAction, historyList]);\n\n    const close = () => dispatcher({ type: T.SET_HISTORY_MODAL, payload: false });\n    return (\n        <Modal\n            ModelOpen={superState.viewHistory}\n            closeModal={close}\n            title=\"History\"\n        >\n            <div className=\"hist-container\">\n                <fieldset>\n                    <legend>Filters</legend>\n                    {\n                        actions.map((action) => (\n                            <label htmlFor={action} className=\"filter_checkbox\" key={action}>\n                                <input\n                                    type=\"checkbox\"\n                                    name=\"filter\"\n                                    checked={filterAction[action]}\n                                    onChange={() => setFilterAction({\n                                        ...filterAction,\n                                        [action]: !filterAction[action],\n                                    })}\n                                />\n                                {stringifyActionType[action]}\n                            </label>\n                        ))\n                    }\n                </fieldset>\n                <div className=\"hist-list\">\n                    <table style={{ listStyleType: 'circle' }}>\n                        <tbody>\n                            {historyView.map((h, i) => (\n                                <tr\n                                    className={`hist-element ${i === curState ? 'active' : ''}`}\n                                    // eslint-disable-next-line react/no-array-index-key\n                                    key={i}\n                                >\n                                    {h}\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </Modal>\n    );\n};\n\nexport default HistoryModal;\n","/* eslint-disable object-shorthand */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable array-callback-return */\n/* eslint-disable no-param-reassign */\n/* eslint-disable react/state-in-constructor */\nimport React, { useEffect, useState } from 'react';\nimport FileBrowser, { FileRenderers, FolderRenderers } from 'react-keyed-file-browser';\nimport { readFile, readTextFile } from '../toolbarActions/toolbarFunctions';\nimport { actionType as T } from '../reducer';\nimport './fileBrowser.css';\n\nconst LocalFileBrowser = ({ superState, dispatcher }) => {\n    const fileRef = React.useRef();\n    const [dirButton, setDirButton] = useState(false);\n    const [fileState, setFileState] = useState([]);\n\n    useEffect(() => {\n        if (navigator.userAgent.indexOf('Edg') !== -1 || navigator.userAgent.indexOf('Chrome') !== -1) {\n            setDirButton(true);\n        }\n        dispatcher({ type: T.SET_FILE_REF, payload: fileRef });\n    }, []);\n\n    useEffect(() => {\n        // TODO - Loading file list from localStorage. Not supported by browsers.\n        // if(window.localStorage.getItem('fileList')) {\n        //     const allFiles = window.localStorage.getItem('fileList');\n        //     setFileState({ files: allFiles });\n        // }\n        window.localStorage.setItem('fileList', JSON.stringify(fileState));\n    }, [fileState]);\n\n    useEffect(() => {\n        setFileState(superState.fileState);\n    }, [superState.fileState]);\n\n    const handleSelectFile = (data) => {\n        const fileExtensions = ['jpeg', 'jpg', 'png', 'exe'];\n        if (fileExtensions.includes(data.fileObj.name.split('.').pop())) {\n            // eslint-disable-next-line no-alert\n            alert('Wrong file extension');\n            return;\n        }\n\n        if (data.fileObj.name.split('.').pop() === 'graphml') {\n            let foundi = -1;\n            superState.graphs.forEach((g, i) => {\n                if ((g.fileName === data.fileObj.name)) {\n                    foundi = i;\n                }\n            });\n            if (foundi !== -1) {\n                dispatcher({ type: T.CHANGE_TAB, payload: foundi });\n            } else {\n                readFile(superState, dispatcher, data.fileObj, data.fileHandle);\n            }\n        } else {\n            readTextFile(superState, dispatcher, data.fileObj, data.fileHandle);\n        }\n    };\n\n    const handleFileInDirs = async (topKey, value) => {\n        let topLevel = topKey;\n        let state = [];\n        // eslint-disable-next-line no-restricted-syntax\n        for await (const [key, valueSubDir] of value.entries()) {\n            if (valueSubDir.kind === 'file') {\n                const fileData = await valueSubDir.getFile();\n                state = state.concat([{\n                    key: `${topKey}/${value.name}/${key}`,\n                    modified: fileData.lastModified,\n                    size: fileData.size,\n                    fileObj: fileData,\n                    fileHandle: valueSubDir,\n                }]);\n            } else if (valueSubDir.kind === 'directory') {\n                topLevel = `${topKey}/${value.name}`;\n                const res = await handleFileInDirs(topLevel, valueSubDir);\n                state = state.concat(res);\n            }\n        }\n        return state;\n    };\n\n    const newFeature = async () => {\n        const dirHandle = await window.showDirectoryPicker();\n        let state = [];\n        // eslint-disable-next-line no-restricted-syntax\n        for await (const [key, value] of dirHandle.entries()) {\n            if (value.kind === 'file') {\n                const fileData = await value.getFile();\n                state = state.concat([{\n                    key: `${dirHandle.name}/${key}`,\n                    modified: fileData.lastModified,\n                    size: fileData.size,\n                    fileObj: fileData,\n                    fileHandle: value,\n                }]);\n            } else if (value.kind === 'directory') {\n                const res = await handleFileInDirs(dirHandle.name, value);\n                state = state.concat(res);\n            }\n        }\n        setFileState([]);\n        setFileState(state);\n        dispatcher({ type: T.SET_DIR_NAME, payload: state[0].key.split('/')[0] });\n        dispatcher({ type: T.SET_FILE_STATE, payload: state });\n    };\n\n    const newFeatureFile = async () => {\n        const pickerOpts = {\n            types: [\n                {\n                    description: 'Graphml',\n                    accept: {\n                        'text/graphml': ['.graphml'],\n                    },\n                },\n            ],\n            excludeAcceptAllOption: true,\n            multiple: false,\n        };\n\n        const [fileHandle] = await window.showOpenFilePicker(pickerOpts);\n        const fileObj = await fileHandle.getFile();\n        readFile(superState, dispatcher, fileObj, fileHandle);\n    };\n\n    return (\n        <div>\n            {!dirButton && (\n                <label\n                    className=\"inputButton\"\n                    htmlFor=\"fileButton\"\n                >\n                    Upload Directory\n                    <input\n                        type=\"file\"\n                        accept=\".py, .m, .c, .cpp, .v, .sh\"\n                        id=\"fileButton\"\n                        style={{ display: 'none' }}\n                        onClick={(e) => { e.target.value = null; }}\n                        onChange={(e) => {\n                            setFileState([]);\n                            setFileState((state) => {\n                                for (let i = 0; i < e.target.files.length; i += 1) {\n                                    state = state.concat([{\n                                        key: e.target.files[i].webkitRelativePath,\n                                        modified: e.target.files[i].lastModified,\n                                        size: e.target.files[i].size,\n                                        fileObj: e.target.files[i],\n                                    }]);\n                                }\n                                return state;\n                            });\n                            window.localStorage.setItem('fileList', JSON.stringify(fileState));\n                        }}\n                        directory\n                        webkitdirectory=\"true\"\n                    />\n                </label>\n            ) }\n            {dirButton && (\n                <button\n                    type=\"button\"\n                    className=\"inputButton\"\n                    disabled={!dirButton}\n                    onClick={newFeature}\n                >\n                    Upload Directory\n                </button>\n            )}\n            {!dirButton\n                && (\n                    <input\n                        type=\"file\"\n                        ref={fileRef}\n                        onClick={(e) => { e.target.value = null; }}\n                        style={{ display: 'none' }}\n                        accept=\".graphml\"\n                        onChange={(e) => readFile(superState, dispatcher, e.target.files[0])}\n                    />\n                )}\n            {dirButton\n                && (\n                    <button\n                        type=\"button\"\n                        ref={fileRef}\n                        className=\"inputButton\"\n                        disabled={!dirButton}\n                        style={{ display: 'none' }}\n                        onClick={newFeatureFile}\n                        label=\"File Upload\"\n                    />\n                    // <input\n                    //     type=\"file\"\n                    //     ref={fileRef}\n                    //     onClick={(e) => { e.target.value = null; }}\n                    //     style={{ display: 'none' }}\n                    //     accept=\".graphml\"\n                    //     onChange={(e) => readFile(superState, dispatcher, e.target.files[0])}\n                    // />\n                )}\n            <h4>\n                Folder Name :\n                {' '}\n                {fileState[0] ? fileState[0].key.split('/')[0] : '' }\n            </h4>\n            <FileBrowser\n                files={fileState}\n                onSelectFile={handleSelectFile}\n                detailRenderer={() => null}\n                fileRenderer={FileRenderers.TableFile}\n                folderRenderer={FolderRenderers.TableFolder}\n            />\n        </div>\n    );\n};\nexport default LocalFileBrowser;\n","import React, { useState, useEffect } from 'react';\nimport Editor from 'react-simple-code-editor';\nimport { highlight, languages } from 'prismjs/components/prism-core';\nimport { saveAs } from 'file-saver';\nimport Modal from './ParentModal';\nimport './file-edit.css';\nimport 'prismjs/components/prism-bash';\nimport 'prismjs/components/prism-clike';\nimport 'prismjs/components/prism-c';\nimport 'prismjs/components/prism-cpp';\nimport 'prismjs/components/prism-matlab';\nimport 'prismjs/components/prism-verilog';\nimport 'prismjs/components/prism-python';\nimport 'prismjs/components/prism-javascript';\nimport 'prismjs/themes/prism.css';\nimport { actionType as T } from '../../reducer';\n\nconst FileEditModal = ({ superState, dispatcher }) => {\n    const [codeStuff, setCodeStuff] = useState('');\n    const [fileName, setFileName] = useState('');\n    const [dirButton, setDirButton] = useState(false);\n\n    useEffect(() => {\n        if (navigator.userAgent.indexOf('Edg') !== -1 || navigator.userAgent.indexOf('Chrome') !== -1) {\n            setDirButton(true);\n        }\n    }, []);\n\n    const close = () => {\n        dispatcher({ type: T.EDIT_TEXTFILE, payload: { show: false } });\n        setCodeStuff('');\n        setFileName('');\n    };\n\n    async function submit() {\n        if (superState.fileHandle) {\n            const stream = await superState.fileHandle.createWritable();\n            await stream.write(codeStuff);\n            await stream.close();\n        } else {\n            // eslint-disable-next-line no-alert\n            alert('Switch to Edge/Chrome!');\n        }\n        dispatcher({ type: T.EDIT_TEXTFILE, payload: { show: false } });\n    }\n\n    async function saveAsSubmit() {\n        const handle = await window.showSaveFilePicker();\n        const stream = await handle.createWritable();\n        await stream.write(codeStuff);\n        await stream.close();\n        const fileData = await handle.getFile();\n        let fS = superState.fileState;\n        fS = fS.concat([{\n            key: `${superState.uploadedDirName}/${handle.name}`,\n            modified: fileData.lastModified,\n            size: fileData.size,\n            fileObj: fileData,\n            fileHandle: handle,\n        }]);\n        dispatcher({ type: T.SET_FILE_STATE, payload: fS });\n        // dispatcher({ type: T.EDIT_TEXTFILE, payload: { show: false } });\n    }\n\n    async function saveSubmit() {\n        // eslint-disable-next-line no-alert\n        const newFileName = prompt('Filename:');\n        const bytes = new TextEncoder().encode(codeStuff);\n        const blob = new Blob([bytes], { type: 'application/json;charset=utf-8' });\n        saveAs(blob, newFileName);\n        // dispatcher({ type: T.EDIT_TEXTFILE, payload: { show: false } });\n    }\n\n    useEffect(async () => {\n        if (superState.fileObj) {\n            setFileName(superState.fileObj.name);\n            const fr = new FileReader();\n            fr.onload = (x) => {\n                setCodeStuff(x.target.result);\n            };\n            if (superState.fileHandle) fr.readAsText(await superState.fileHandle.getFile());\n            else fr.readAsText(superState.fileObj);\n        }\n    }, [superState.fileObj]);\n\n    function highlightSyntax(code) {\n        const extensions = ['v', 'c', 'h', 'hpp', 'cpp', 'py', 'm', 'sh'];\n        const fileEx = fileName.split('.').pop();\n        if (extensions.includes(fileEx)) {\n            switch (fileEx) {\n            case 'v': return highlight(code, languages.verilog, 'verilog');\n            case 'c': return highlight(code, languages.c, 'c');\n            case 'h': return highlight(code, languages.c, 'c');\n            case 'hpp': return highlight(code, languages.c, 'c');\n            case 'cpp': return highlight(code, languages.cpp, 'cpp');\n            case 'py': return highlight(code, languages.python, 'python');\n            case 'm': return highlight(code, languages.matlab, 'matlab');\n            case 'sh': return highlight(code, languages.bash, 'bash');\n            default: return highlight(code, languages.plaintext);\n            }\n        }\n        return highlight(code, languages.plaintext);\n    }\n\n    return (\n        <Modal\n            ModelOpen={superState.textFileModal}\n            closeModal={close}\n            title={fileName}\n        >\n            <div>\n                <div className=\"save-bar\">\n                    {fileName\n                        && (\n                            <button type=\"submit\" className=\"btn btn-primary\" onClick={submit}>Save</button>\n                        )}\n                    {dirButton && (\n                        <button type=\"submit\" className=\"btn btn-primary\" onClick={saveAsSubmit}>\n                            Save\n                            {fileName ? ' As' : ''}\n                        </button>\n                    )}\n                    {!dirButton && (\n                        <button type=\"submit\" className=\"btn btn-primary\" onClick={saveSubmit}>Save As</button>\n                    )}\n                </div>\n                <div className=\"setting-container\">\n                    <Editor\n                        value={codeStuff}\n                        onValueChange={(e) => setCodeStuff(e)}\n                        highlight={(code) => highlightSyntax(code)}\n                        padding={10}\n                        style={{\n                            fontFamily: '\"Arial\", \"Helvetica\", sans-serif',\n                            fontSize: 16,\n                            minHeight: '100vh',\n                            minWidth: '90vw',\n                            border: '1px solid black',\n                        }}\n                    />\n                </div>\n                <div className=\"save-bar\">\n                    {fileName\n                        && (\n                            <button type=\"submit\" className=\"btn btn-primary\" onClick={submit}>Save</button>\n                        )}\n                    {dirButton && (\n                        <button type=\"submit\" className=\"btn btn-primary\" onClick={saveAsSubmit}>Save As</button>\n                    )}\n                    {!dirButton && (\n                        <button type=\"submit\" className=\"btn btn-primary\" onClick={saveSubmit}>Save As</button>\n                    )}\n                </div>\n            </div>\n        </Modal>\n    );\n};\n\nexport default FileEditModal;\n","import React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport ParentModal from './ParentModal';\nimport { actionType as T } from '../../reducer';\n\nconst MarkDown = ({ superState, dispatcher }) => {\n    const close = () => {\n        dispatcher({ type: T.SET_MARKDOWN_MODAL, payload: false });\n        dispatcher({ type: T.SET_INPUT_FILE, payload: { inputFile: '', fname: '' } });\n    };\n    return (\n        <ParentModal closeModal={close} ModelOpen={superState.markDownModal} title={superState.inputFileName}>\n            <ReactMarkdown>{superState.inputFile}</ReactMarkdown>\n        </ParentModal>\n    );\n};\n\nexport default MarkDown;\n","import React, { useState } from 'react';\nimport ParentModal from './ParentModal';\nimport { actionType as T } from '../../reducer';\nimport './optionsModal.css';\n\nconst OptionsModal = ({ superState, dispatcher }) => {\n    const [unlock, setUnlock] = useState(false);\n    const [docker, setDocker] = useState(false);\n    const [octave, setOctave] = useState(false);\n    const [param, setParam] = useState('');\n    const [maxT, setmaxT] = useState('');\n    const [library, setLibrary] = useState('');\n    const close = () => {\n        dispatcher({ type: T.SET_OPTIONS_MODAL, payload: false });\n        dispatcher(\n            {\n                type: T.SET_OPTIONS,\n                payload: {\n                    unlock,\n                    docker,\n                    maxT,\n                    param,\n                    octave,\n                    library,\n                },\n            },\n        );\n    };\n\n    const handleDockerChange = () => {\n        setDocker(!docker);\n    };\n    const handleOctaveChange = () => {\n        setOctave(!octave);\n    };\n    const handleUnlockChange = () => {\n        setUnlock(!unlock);\n    };\n    const handleParamsChange = (e) => {\n        setParam(e.target.value);\n    };\n    const handleMaxtimeChange = (e) => {\n        setmaxT(e.target.value);\n    };\n    const handleLibraryChange = (e) => {\n        setLibrary(e.target.value);\n    };\n\n    const Options = 'Options';\n    return (\n        <ParentModal closeModal={close} ModelOpen={superState.optionsModal} title={Options}>\n            <div className=\"main-div\">\n                <label htmlFor=\"Docker\">\n                    Docker\n                    <input type=\"checkbox\" checked={docker} onChange={handleDockerChange} />\n                </label>\n                <label htmlFor=\"Octave\" className=\"main-div-comp\">\n                    Octave\n                    <input type=\"checkbox\" checked={octave} onChange={handleOctaveChange} />\n                </label>\n                <label htmlFor=\"Unlock\" className=\"main-div-comp\">\n                    Unlock\n                    <input type=\"checkbox\" checked={unlock} onChange={handleUnlockChange} />\n                </label>\n                <label htmlFor=\"Maxtime\" className=\"main-div-comp\">\n                    Max Time:&nbsp;\n                    <input\n                        type=\"text\"\n                        value={maxT}\n                        placeholder=\"Enter Maximum Time\"\n                        onChange={(e) => {\n                            handleMaxtimeChange(e);\n                        }}\n                    />\n                </label>\n                <br />\n                <br />\n                <span>Library Path:&nbsp;&nbsp;</span>\n                <label htmlFor=\"librarypath\">\n                    <input\n                        size=\"59\"\n                        type=\"text\"\n                        value={library}\n                        placeholder=\"Enter library path\"\n                        onChange={(e) => {\n                            handleLibraryChange(e);\n                        }}\n                    />\n                </label>\n\n                <br />\n                <br />\n                <span>Params:</span>\n                <br />\n                <textarea\n                    cols=\"80\"\n                    rows=\"10\"\n                    value={param}\n                    onChange={(e) => {\n                        handleParamsChange(e);\n                    }}\n                />\n            </div>\n        </ParentModal>\n    );\n};\n\nexport default OptionsModal;\n","import React, { useState, useEffect } from 'react';\nimport './logs.css';\nimport { actionType as T } from '../reducer';\n\nconst Logs = ({ superState, dispatcher }) => {\n    const [output, setOutput] = useState('');\n\n    const clearTerminal = () => {\n        setOutput('');\n        dispatcher({ type: T.SET_LOGS_MESSAGE, payload: '' });\n    };\n\n    const closeTerminal = () => {\n        dispatcher({ type: T.SET_LOGS, payload: false });\n    };\n\n    useEffect(() => {\n        if (superState.logs) {\n            document.getElementById('terminal').style.display = 'block';\n            setOutput(superState.logsmessage);\n        } else {\n            document.getElementById('terminal').style.display = 'none';\n            setOutput(superState.logsmessage);\n        }\n    }, [superState.logs]);\n\n    return (\n        <>\n            <div className=\"terminal\" id=\"terminal\">\n                <div className=\"terminal-header\">\n                    Logs\n                    <button type=\"button\" className=\"clear\" onClick={clearTerminal}>Clear</button>\n                    <button type=\"button\" className=\"closelogs\" onClick={closeTerminal}>X</button>\n                </div>\n                <div className=\"terminal-body\">\n                    {output.split('\\n').map((line) => (\n                        <div className=\"terminal-line\">\n                            {line}\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Logs;\n","import React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport axios from 'axios';\nimport Modal from './ParentModal';\nimport { actionType as T } from '../../reducer';\nimport './contributeDetails.css';\n\nconst ContributeDetails = ({ superState, dispatcher }) => {\n    const closeModal = () => {\n        dispatcher({ type: T.SET_CONTRIBUTE_MODAL, payload: false });\n    };\n    const [study, setStudy] = useState('');\n    const [path, setPath] = useState('');\n    const [auth, setAuth] = useState('');\n    const [title, setTitle] = useState('');\n    const [desc, setDesc] = useState('');\n    const [branch, setBranch] = useState('');\n    const [showAdvanceOptions, setShowAdvanceOptions] = useState(false);\n    const submit = async (e) => {\n        if (study === '' || path === '' || auth === '') {\n            toast.info('Please Provide necessary inputs');\n            return;\n        }\n        const id = toast.loading('Processing your Request.Please wait...');\n        try {\n            e.preventDefault();\n            const result = await axios.post('http://127.0.0.1:5000/contribute', {\n                study,\n                auth,\n                desc,\n                title,\n                path,\n                branch,\n            });\n            toast.success(result.data?.message);\n        } catch (error) {\n            if (error?.response?.status === 400) {\n                toast.info(error?.response?.data?.message);\n            } else {\n                toast.error(error?.response.data.message);\n            }\n        }\n        toast.dismiss(id);\n        closeModal();\n    };\n    const toggleOptions = () => {\n        setShowAdvanceOptions(!showAdvanceOptions);\n    };\n    return (\n        <Modal\n            ModelOpen={superState.contributeModal}\n            title=\"Contribute\"\n            closeModal={closeModal}\n        >\n            <form className=\"contribute-details\">\n                <span>Study Name</span>\n                <input\n                    required\n                    value={study}\n                    onChange={(e) => setStudy(e.target.value)}\n                />\n                <span>Study Path</span>\n                <input\n                    placeholder=\"Enter Full Directory Path of Study\"\n                    value={path}\n                    onChange={(e) => setPath(e.target.value)}\n                    required\n                />\n                <span>Author Name</span>\n                <input\n                    value={auth}\n                    onChange={(e) => setAuth(e.target.value)}\n                    required\n                />\n                {showAdvanceOptions && (\n                    <>\n                        <span>Branch Name</span>\n                        <input\n                            value={branch}\n                            onChange={(e) => setBranch(e.target.value)}\n                        />\n                        <span>Title of Study</span>\n                        <input\n                            value={title}\n                            onChange={(e) => setTitle(e.target.value)}\n                        />\n                        <span>Description of Study</span>\n                        <textarea\n                            value={desc}\n                            onChange={(e) => setDesc(e.target.value)}\n                        />\n                    </>\n                )}\n                <button type=\"button\" className=\"btn btn-secondary\" onClick={toggleOptions}>\n                    {showAdvanceOptions ? 'Hide ' : 'Show '}\n                    Advance Options\n                </button>\n                <div className=\"expand\">\n                    <button type=\"submit\" className=\"btn btn-primary\" onClick={submit}>Generate PR</button>\n                </div>\n            </form>\n        </Modal>\n    );\n};\nexport default ContributeDetails;\n","import React, { useEffect, useReducer } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\nimport ReactTooltip from 'react-tooltip';\nimport GraphWorkspace from './GraphWorkspace';\nimport GraphCompDetails from './component/modals/GraphCompDetails';\nimport { Header } from './component/Header';\nimport { reducer, initialState, actionType as T } from './reducer';\nimport ProjectDetails from './component/modals/ProjectDetails';\nimport ShareModal from './component/modals/ShareModal';\nimport SettingsModal from './component/modals/Settings';\nimport FileDragDrop from './component/File-drag-drop';\nimport HistoryModal from './component/modals/History';\nimport LocalFileBrowser from './component/fileBrowser';\nimport FileEditModal from './component/modals/FileEdit';\nimport MarkDown from './component/modals/markDown';\nimport OptionsModal from './component/modals/OptionsModal';\nimport Logs from './component/Logs';\nimport ContributeDetails from './component/modals/ContributeDetails';\n\nconst app = () => {\n    const [superState, dispatcher] = useReducer(reducer, initialState);\n    useEffect(() => {\n        const handleBeforeUnload = (e) => {\n            e.returnValue = 'Are you sure you want to leave this page?';\n            return 'Are you sure you want to leave this page?';\n        };\n        window.onbeforeunload = handleBeforeUnload;\n        return () => {\n            window.onbeforeunload = null;\n        };\n    }, []);\n    return (\n        <div className=\"container\">\n            <ProjectDetails superState={superState} dispatcher={dispatcher} />\n            <ShareModal superState={superState} dispatcher={dispatcher} />\n            <SettingsModal superState={superState} dispatcher={dispatcher} />\n            <HistoryModal superState={superState} dispatcher={dispatcher} />\n            <ContributeDetails superState={superState} dispatcher={dispatcher} />\n            <FileEditModal superState={superState} dispatcher={dispatcher} />\n            <OptionsModal superState={superState} dispatcher={dispatcher} />\n            <GraphCompDetails\n                closeModal={() => dispatcher({ type: T.Model_Close })}\n                superState={superState}\n                dispatcher={dispatcher}\n            />\n            <Logs superState={superState} dispatcher={dispatcher} />\n            <MarkDown superState={superState} dispatcher={dispatcher} />\n            <FileDragDrop dispatcher={dispatcher} />\n            <Header superState={superState} dispatcher={dispatcher} />\n            <section className=\"body\" style={{ display: 'flex', overflow: 'hidden' }}>\n                <div style={{ display: 'flex', overflow: 'auto' }}>\n                    <LocalFileBrowser superState={superState} dispatcher={dispatcher} />\n                </div>\n                <div className=\"graph\" style={{ display: 'flex', overflow: 'hidden' }}>\n                    <GraphWorkspace dispatcher={dispatcher} superState={superState} />\n                </div>\n            </section>\n            <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"solid\" />\n            <ToastContainer position=\"bottom-left\" autoClose={8000} pauseOnHover={false} />\n        </div>\n    );\n};\n\nexport default app;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({\n            getCLS, getFID, getFCP, getLCP, getTTFB,\n        }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const BendingDistanceWeight = {\n\n    dist: (A, B) => (((A.x - B.x) ** 2 + (A.y - B.y) ** 2) ** 0.5),\n\n    rotate: (P, Q) => ({\n        x: P.x * Math.cos(Q) - P.y * Math.sin(Q),\n        y: P.x * Math.sin(Q) + P.y * Math.cos(Q),\n    }),\n\n    extraRad: (A, B) => (((A.x >= B.x && A.y > B.y) || (A.x >= B.x && A.y < B.y)) ? Math.PI : 0),\n\n    getRadian(tanQ, A, B) {\n        return (Math.atan(tanQ) - this.extraRad(A, B) + 2 * Math.PI) % (2 * Math.PI);\n    },\n\n    getCoordinate(w, d, A, B) {\n        const tanQ = (A.y - B.y) / (A.x - B.x);\n        const Q = this.getRadian(tanQ, A, B);\n        const D = this.dist(A, B) * w;\n        const P = { x: D, y: d };\n        const { x, y } = this.rotate(P, Q);\n        return { x: x + A.x, y: y + A.y };\n    },\n\n    getWeightDistance(p, A, B) {\n        const P = { x: p.x - A.x, y: p.y - A.y };\n        const tanQ = (A.y - B.y) / (A.x - B.x);\n        const Q = this.getRadian(tanQ, A, B);\n        const { x, y } = this.rotate(P, -Q);\n        const d = this.dist(A, B);\n        return { d: y, w: x / d };\n    },\n};\n\nexport default BendingDistanceWeight;\n","const style = [\n    {\n        selector: '*',\n        style: {\n            overlayOpacity: '0',\n        },\n    },\n    {\n        selector: 'node[type = \"ordin\"]',\n        style: {\n            content: 'data(label)',\n            zIndex: 100,\n            width: 'data(style.width)',\n            height: 'data(style.height)',\n            shape: 'data(style.shape)',\n            opacity: 'data(style.opacity)',\n            backgroundColor: 'data(style.backgroundColor)',\n            borderColor: 'data(style.borderColor)',\n            borderWidth: 'data(style.borderWidth)',\n            textValign: 'center',\n            textHalign: 'center',\n        },\n    },\n    {\n        selector: 'node[type=\"special\"]',\n        style: {\n            width: 8,\n            height: 8,\n            backgroundColor: 'data(style.backgroundColor)',\n            zIndex: 1000,\n        },\n    },\n\n    {\n        selector: 'edge',\n        style: {\n            curveStyle: 'bezier',\n            targetArrowShape: 'triangle',\n        },\n    },\n    {\n        selector: 'edge[type = \"ordin\"]',\n        style: {\n            width: 'data(style.thickness)',\n            lineColor: 'data(style.backgroundColor)',\n            targetArrowColor: 'data(style.backgroundColor)',\n            curveStyle: 'segments',\n            segmentDistances: 'data(bendData.bendDistance)',\n            segmentWeights: 'data(bendData.bendWeight)',\n            edgeDistances: 'node-position',\n            lineStyle: 'data(style.shape)',\n        },\n    },\n    {\n        selector: 'edge[label]',\n        style: {\n            label: 'data(label)',\n            edgeTextRotation: 'autorotate',\n            zIndex: 999,\n            textBackgroundOpacity: 1,\n            color: '#000',\n            textBackgroundColor: '#fff',\n            textBackgroundShape: 'roundrectangle',\n            textBorderColor: '#fff',\n            textBorderWidth: 2,\n            textBorderOpacity: 1,\n        },\n    },\n    {\n        selector: '.hidden',\n        style: {\n            display: 'none',\n        },\n    },\n    {\n        selector: '.eh-handle,node[type=\"bend\"]',\n        style: {\n            height: 25,\n            width: 25,\n            opacity: 0.4,\n            borderWidth: 5,\n            borderOpacity: 0.1,\n        },\n    },\n    {\n        selector: 'node[type=\"bend\"]',\n        style: {\n            backgroundColor: '#9575cd',\n        },\n    },\n    {\n        selector: '.eh-handle',\n        style: {\n            backgroundColor: '#f50057',\n        },\n    },\n    {\n        selector: ':selected',\n        style: {\n            overlayColor: '#000',\n            overlayOpacity: 0.1,\n            overlayPadding: 5,\n        },\n    },\n\n];\n\nexport default style;\n","import style from './cytoscape-style';\n\nconst options = {\n    style: [...style],\n    zoomingEnabled: true,\n    userZoomingEnabled: true,\n    minZoom: 0.25,\n    maxZoom: 5,\n};\n\nexport default options;\n","const zealit = require('zealit');\n\nconst actionType = {\n    $$typeof: '',\n    Model_Open_Create_Node: 'OpenModal_CreateNode',\n    Model_Open_Create_Edge: 'OpenModal_CreateEdge',\n    Model_Open_Update_Edge: 'OpenModal_UpdateEdge',\n    Model_Open_Update_Node: 'OpenModal_UpdateNode',\n    Model_Close: 'CloseModal',\n    ELE_UNSELECTED: 'ELE_UNSELECTED',\n    ELE_SELECTED: 'ELE_SELECTED',\n    TURN_DRAW: 'TURN_DRAW',\n    SET_ZOOM: 'SET_ZOOM',\n    SET_PROJECT_DETAILS: 'SET_PROJECT_DETAILS',\n    SET_UNDO: 'SET_UNDO',\n    SET_REDO: 'SET_REDO',\n    ADD_GRAPH_INSTANCE: 'ADD_GRAPH_INSTANCE',\n    ADD_GRAPH: 'ADD_GRAPH',\n    ADD_GRAPH_BULK: 'ADD_GRAPH_BULK',\n    CHANGE_TAB: 'CHANGE_TAB',\n    CHANGE_RESET: 'CHANGE_RESET',\n    REMOVE_GRAPH: 'REMOVE_GRAPH',\n    NEW_GRAPH: 'NEW_GRAPH',\n    SET_SHARE_MODAL: 'SET_SHARE_MODAL',\n    SET_SETTING_MODAL: 'SET_SETTING_MODAL',\n    SET_MARKDOWN_MODAL: 'SET_MARKDOWN_MODAL',\n    SET_CONTRIBUTE_MODAL: 'SET_CONTRIBUTE_MODAL',\n    SET_FILE_REF: 'SET_FILE_REF',\n    SET_HISTORY_MODAL: 'SET_HISTORY_MODAL',\n    SET_AUTHOR: 'SET_AUTHOR',\n    IS_WORKFLOW_ON_SERVER: 'IS_WORKFLOW_ON_SERVER',\n    SET_CUR_INSTANCE: 'SET_CUR_INSTANCE',\n    SET_CUR_INDEX: 'SET_CUR_INDEX',\n    SET_ZOOM_LEVEL: 'SET_ZOOM_LEVEL',\n    SET_EDIT_DETAILS_MODAL: 'SET_EDIT_DETAILS_MODAL',\n    SET_NEW_GRAPH_MODAL: 'SET_NEW_GRAPH_MODAL',\n    SET_OPTIONS_MODAL: 'SET_OPTIONS_MODAL',\n    EDIT_TEXTFILE: 'EDIT_TEXTFILE',\n    SET_FILE_HANDLE: 'SET_FILE_HANDLE',\n    SET_DIR_NAME: 'SET_DIR_NAME',\n    SET_FILE_STATE: 'SET_FILE_STATE',\n    SET_INPUT_FILE: 'SET_INPUT_FILE',\n    SET_OPTIONS: 'SET_OPTIONS',\n    SET_FUNCTIONS: 'SET_FUNCTIONS',\n    SET_LOGS: 'SET_LOGS',\n    SET_LOGS_MESSAGE: 'SET_LOGS_MESSAGE',\n};\n\nexport default zealit(actionType);\n","import React, {\n    useCallback, useEffect, useState, createRef,\n} from 'react';\nimport './nodeDetails.css';\n// import ColorBox from './ColorBox';\nimport localStorageManager from '../../graph-builder/local-storage-manager';\n\nconst NodeDetails = ({\n    data, setData, submit, labelAllowed, state,\n}) => {\n    const inputRef = useCallback((node) => node && node.focus(), []);\n    const textRef = createRef();\n    const [widthSet] = useState(false);\n    const [mdList, setMdList] = useState([]);\n    const [mdCont, setMdCont] = useState(new Map(''));\n    const [labelName, setLabelName] = useState('');\n    const [labelFile, setLabelFile] = useState('');\n    const indexOfFile = [];\n    indexOfFile.push(0);\n\n    const setStyle = (prop) => {\n        setData({ ...data, style: { ...data.style, ...prop } });\n    };\n\n    useEffect(() => {\n        const list = mdList;\n        state.fileState.forEach((ele) => {\n            if (ele.key.toString().includes('.md')) {\n                list.push(ele);\n                setMdList(list);\n                let mdmap = new Map();\n                mdmap = mdCont;\n                const fr = new FileReader();\n                fr.onload = (x) => {\n                    const strCont = '   DESC: ';\n                    mdmap.set(ele, strCont.concat(x.target.result.slice(0, 50).replace('#', '')));\n                    setMdCont(mdmap);\n                };\n                fr.readAsText(ele.fileObj);\n            }\n        });\n    }, [state.fileState]);\n\n    useEffect(() => {\n        if (!widthSet) {\n            setStyle({\n                width: Math.max(data.style.width, Math.min(500, textRef.current.offsetWidth + 20)),\n            });\n        }\n    }, [!widthSet && data.label]);\n\n    useEffect(() => {\n        setLabelName(data.label.split(':')[0]);\n    }, [data.label]);\n\n    return (\n        <div className=\"nodeform\" onSubmit={submit}>\n            <div className=\"parent-div\" style={{ height: data.style.height }}>\n                <div\n                    className=\"node-div\"\n                    style={{\n                        ...data.style,\n                        borderRadius: data.style.shape === 'ellipse' ? '100%' : 0,\n                    }}\n                >\n                    <span ref={textRef}>{labelAllowed ? data.label : ''}</span>\n\n                </div>\n            </div>\n            <div className=\"form\" style={{ padding: 20 }}>\n                {/* <div> Shape</div>\n                <div>\n                    <label htmlFor=\"rectangle\">\n                        <input\n                            type=\"radio\"\n                            name=\"shape\"\n                            value=\"rectangle\"\n                            checked={data.style.shape === 'rectangle'}\n                            onChange={() => setStyle({ shape: 'rectangle' })}\n                        />\n                        Rectangle\n                    </label>\n                </div>\n                <div>\n                    <label htmlFor=\"ellipse\">\n                        <input\n                            type=\"radio\"\n                            name=\"shape\"\n                            value=\"ellipse\"\n                            checked={data.style.shape === 'ellipse'}\n                            onChange={() => setStyle({ shape: 'ellipse' })}\n                        />\n                        Ellipse\n                    </label>\n                </div>\n                <div /> */}\n\n                {labelAllowed ? <div> Label</div> : ''}\n                {labelAllowed ? (\n                    <>\n                        <input\n                            className=\"nodeLabel\"\n                            ref={inputRef}\n                            type=\"text\"\n                            required\n                            label=\"Node Label\"\n                            placeholder=\"Enter Node Label\"\n                            value={data.label.split(':')[0]}\n                            onChange={(e) => {\n                                if (e.target.value.slice(-1) !== ':') {\n                                    setLabelName(`${e.target.value}:`);\n                                    setData({ ...data, label: `${e.target.value}:${labelFile}` });\n                                } else {\n                                    setLabelName(e.target.value);\n                                    setData({ ...data, label: e.target.value + labelFile });\n                                }\n                            }}\n                        />\n\n                        <input\n                            className=\"nodeLabelFile\"\n                            type=\"text\"\n                            label=\"Node Label file\"\n                            placeholder=\"Select file\"\n                            value={data.label.split(':')[1]}\n                            onChange={(e) => {\n                                setLabelFile(e.target.value.split('/').pop().split('   DESC: ')[0]);\n                                if (labelName) {\n                                    let lname = labelName;\n                                    if (labelName.slice(-1) !== ':') {\n                                        setLabelName(`${labelName}:`);\n                                        lname += ':';\n                                    }\n                                    setData({\n                                        ...data,\n                                        // eslint-disable-next-line max-len\n                                        label: lname + e.target.value.split('/').pop().split('   DESC: ')[0],\n                                    });\n                                } else {\n                                    setData({\n                                        ...data,\n                                        // eslint-disable-next-line max-len\n                                        label: `:${e.target.value.split('/').pop().split('   DESC: ')[0]}`,\n                                    });\n                                }\n                            }}\n                            list=\"files\"\n                        />\n                        <datalist id=\"files\">\n                            {\n                                localStorageManager.getFileList()\n                                    // eslint-disable-next-line max-len, prefer-arrow-callback\n                                    ? state.fileState\n                                        .map((item) => {\n                                            const list = [];\n                                            const acceptedTypes = ['.v', '.c', '.cpp', '.py', '.m', '.sh'];\n                                            let index;\n                                            if (item.key.toString().includes('.md')) {\n                                                return null;\n                                            }\n                                            if (item.key.toString().split('/').length > 2) {\n                                                return null;\n                                            }\n                                            // eslint-disable-next-line max-len\n                                            if ((acceptedTypes.some((substring) => item.key.toString().includes(substring)))) {\n                                                const fileName = item.key.toString().split('.')[0].concat('.md');\n                                                // eslint-disable-next-line max-len\n                                                const matchingFile = mdList.find((ele) => ele.key.toString() === fileName);\n                                                if (mdCont.get(matchingFile)) {\n                                                    list.push(item.key.toString().concat(mdCont.get(matchingFile)));\n                                                } else {\n                                                    list.push(item.key.toString());\n                                                }\n                                                indexOfFile.push(indexOfFile[indexOfFile.length - 1] + 1);\n                                                index = indexOfFile[indexOfFile.length - 1] + 1;\n                                                /* eslint-disable */\n                                                return (\n                                                    <>\n                                                        <label htmlFor=\"dropdown\">\n                                                            <option value={list} key={index} />\n                                                        </label>\n                                                    </>\n                                                );\n                                                /* eslint-enable */\n                                            }\n                                            return null;\n                                        })\n                                    : ''\n                            }\n                        </datalist>\n                    </>\n                ) : ''}\n                {/* <div> Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style.width}\n                    onChange={(e) => {\n                        setWidthSet(true);\n                        setStyle({\n                            width: Math.min(500, e.target.value),\n                        });\n                    }}\n                /> */}\n\n                {/* <div> Height</div>\n                <input\n                    type=\"number\"\n                    value={data.style.height}\n                    onChange={(e) => setStyle({ height: Math.min(200, e.target.value) })}\n                /> */}\n\n                {/* <div> Background Color</div>\n                <ColorBox\n                    color={data.style.backgroundColor}\n                    setColor={(color) => setStyle({ backgroundColor: color })}\n                    type=\"light\"\n                /> */}\n\n                {/* <div> Border Color</div>\n                <ColorBox\n                    color={data.style.borderColor}\n                    setColor={(color) => setStyle({ borderColor: color })}\n                    type=\"dark\"\n                /> */}\n\n                {/* <div> Border Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style.borderWidth}\n                    onChange={(e) => setStyle({ borderWidth: Math.min(30, e.target.value) })}\n                /> */}\n                {/* <div> Opacity</div>\n                <input\n                    type=\"number\"\n                    step=\".01\"\n                    value={data.style.opacity}\n                    onChange={(e) => setStyle({ opacity: Math.min(1, Math.max(0, e.target.value)) })}\n                /> */}\n            </div>\n        </div>\n    );\n};\n\nexport default NodeDetails;\n","import React, { useCallback } from 'react';\n// import ColorBox from './ColorBox';\nimport './edgeDetails.css';\n\nconst Triangle = ({ size, color }) => {\n    const s = parseInt(size, 10) * 5;\n    const EqTriangle = {\n        borderLeft: `${0.8666 * s}px solid ${color}`,\n        borderBottom: `${s / 2}px solid transparent`,\n        borderTop: `${s / 2}px solid transparent`,\n        marginLeft: -1,\n    };\n    return (\n        <div style={EqTriangle} />\n    );\n};\n\nconst EdgeDetails = ({\n    data, setData, submit, labelAllowed,\n}) => {\n    // const setStyle = (prop) => setData({ ...data, style: { ...data.style, ...prop } });\n    const inputRef = useCallback((node) => node && node.focus(), []);\n    // const RadioBtn = ({ name, shape }) => (\n    //     <label htmlFor=\"ellipse\">\n    //         <input\n    //             type=\"radio\"\n    //             name=\"shape\"\n    //             value={shape}\n    //             checked={data.style.shape === shape}\n    //             onChange={() => setStyle({ shape })}\n    //         />\n    //         {name}\n    //     </label>\n    // );\n\n    return (\n        <div className=\"edgeform\" onSubmit={submit}>\n            <div className=\"par-div\">\n                <div\n                    className=\"edge-div\"\n                    style={{\n                        borderBottomWidth: data.style.thickness,\n                        borderBottomColor: data.style.backgroundColor,\n                        borderBottomStyle: data.style.shape,\n                    }}\n                />\n                <Triangle size={data.style.thickness} color={data.style.backgroundColor} />\n                <div className=\"label\">{data.label}</div>\n            </div>\n            <div className=\"form\">\n                {labelAllowed ? <div> Label</div> : ''}\n                {labelAllowed ? (\n                    <input\n                        ref={inputRef}\n                        className=\"span-rest edgeLabel\"\n                        type=\"text\"\n                        required\n                        label=\"Edge Label\"\n                        value={data.label}\n                        placeholder=\"Enter Edge Label\"\n                        onChange={(e) => setData({ ...data, label: `${e.target.value}` })}\n                    />\n                ) : ''}\n                {/* <div> Shape</div>\n                <div className=\"span-rest hascheckbox\">\n                    <div><RadioBtn name=\"Solid\" shape=\"solid\" /></div>\n                    <div><RadioBtn name=\"Dotted\" shape=\"dotted\" /></div>\n                    <div><RadioBtn name=\"Dashed\" shape=\"dashed\" /></div>\n                </div>\n                <div> Thickness</div>\n                <input\n                    type=\"number\"\n                    value={data.style.thickness}\n                    onChange={(e) => setStyle({ thickness: Math.max(0, Math.min(20, e.target.value)) })}\n                />\n                <div> Background Color</div>\n                <ColorBox\n                    color={data.style.backgroundColor}\n                    setColor={(color) => setStyle({ backgroundColor: color })}\n                    type=\"dark\"\n                /> */}\n            </div>\n        </div>\n    );\n};\n\nexport default EdgeDetails;\n","const NodeStyle = {\n    width: 100,\n    height: 50,\n    shape: 'rectangle',\n    opacity: 1,\n    backgroundColor: '#ffcc00',\n    borderColor: '#000',\n    borderWidth: 1,\n};\n\nconst EdgeStyle = {\n    thickness: 1,\n    backgroundColor: null,\n    shape: 'solid',\n};\n\nexport { NodeStyle, EdgeStyle };\n","const initialState = {\n    ModelOpen: false,\n    modalPayload: {\n        cb: () => {},\n        title: '',\n        submitText: '',\n        Children: '',\n        defaultStyle: {},\n        defaultLabel: '',\n        labelAllowed: null,\n    },\n    shareModal: false,\n    settingsModal: false,\n    editDetailsModal: false,\n    newGraphModal: false,\n    optionsModal: false,\n    markDownModal: false,\n    contributeModal: false,\n    eleSelected: false,\n    drawModeOn: true,\n    undoEnabled: false,\n    redoEnabled: false,\n    graphs: [],\n    curGraphIndex: -1,\n    viewHistory: false,\n    isWorkflowOnServer: false,\n    curGraphInstance: null,\n    zoomLevel: 100,\n    uploadedDirName: null,\n    resetEnabled: false,\n    fileState: [],\n    inputFile: '',\n    params: '',\n    maxTime: '',\n    library: '',\n    dockerCheck: false,\n    unlockCheck: false,\n    octave: false,\n    logs: false,\n    logsmessage: '',\n};\n\nconst initialGraphState = {\n    projectName: '',\n    graphID: null,\n    serverID: null,\n    graphML: null,\n    authorName: '',\n    component: null,\n    instance: null,\n    id: null,\n    fileHandle: null,\n    fileName: null,\n    built: true,\n    debugged: false,\n    ran: false,\n    destroyed: false,\n    cleared: false,\n    stopped: false,\n};\n\nexport { initialState, initialGraphState };\n","import T from './actionType';\nimport NodeDetails from '../component/modals/NodeDetails';\nimport EdgeDetails from '../component/modals/EdgeDetails';\nimport { NodeStyle, EdgeStyle } from '../config/defaultStyles';\nimport { initialGraphState } from './initialState';\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n    case T.Model_Open_Create_Node:\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Create Node',\n                submitText: 'Create Node',\n                type: 'Node',\n                Children: NodeDetails,\n                defaultStyle: NodeStyle,\n                defaultLabel: '',\n                labelAllowed: true,\n                cb: action.cb,\n            },\n        };\n    case T.Model_Open_Create_Edge:\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Create Edge',\n                submitText: 'Create Edge',\n                Children: EdgeDetails,\n                defaultStyle: EdgeStyle,\n                defaultLabel: '',\n                labelAllowed: true,\n                cb: action.cb,\n            },\n        };\n    case T.Model_Open_Update_Node: {\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Edit Node',\n                submitText: 'Edit Node',\n                type: 'Node',\n                Children: NodeDetails,\n                defaultStyle: action.style,\n                defaultLabel: action.label,\n                labelAllowed: action.labelAllowed,\n                cb: action.cb,\n            },\n        };\n    }\n    case T.Model_Open_Update_Edge: {\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Edit Edge',\n                submitText: 'Edit Edge',\n                Children: EdgeDetails,\n                defaultStyle: action.style,\n                defaultLabel: action.label,\n                labelAllowed: action.labelAllowed,\n                cb: action.cb,\n            },\n        };\n    }\n    case T.SET_CONTRIBUTE_MODAL: {\n        return { ...state, contributeModal: action.payload };\n    }\n    case T.Model_Close: return { ...state, ModelOpen: false };\n    case T.ELE_SELECTED: return { ...state, eleSelected: true, eleSelectedPayload: action.payload };\n    case T.ELE_UNSELECTED: return { ...state, eleSelected: false };\n    case T.TURN_DRAW: return { ...state, drawModeOn: action.payload };\n\n    case T.SET_UNDO: return { ...state, undoEnabled: action.payload };\n    case T.SET_REDO: return { ...state, redoEnabled: action.payload };\n\n    case T.ADD_GRAPH: {\n        let foundi = -1;\n        const graphID = action.payload.graphID || new Date().getTime().toString();\n        state.graphs.forEach((g, i) => {\n            if ((g.graphID && g.graphID === graphID) || (g.serverID && g.serverID === action.payload.serverID)) {\n                foundi = i;\n            }\n        });\n        if (foundi !== -1) {\n            return { ...state, newGraphModal: false, curGraphIndex: foundi };\n        }\n        return {\n            ...state,\n            newGraphModal: false,\n            curGraphIndex: state.graphs.length,\n            graphs: [\n                ...state.graphs,\n                {\n                    ...initialGraphState,\n                    projectName: action.payload.projectName,\n                    graphID,\n                    serverID: action.payload.serverID,\n                    graphML: action.payload.graphML,\n                    fileHandle: action.payload.fileHandle || null,\n                    fileName: action.payload.fileName,\n                    authorName: action.payload.authorName || '',\n                },\n            ],\n        };\n    }\n    case T.ADD_GRAPH_BULK: {\n        return { ...state, graphs: [...state.graphs, ...action.payload] };\n    }\n    case T.SET_CUR_INSTANCE: {\n        return { ...state, curGraphInstance: action.payload };\n    }\n    case T.SET_CUR_INDEX: {\n        return { ...state, curGraphIndex: action.payload };\n    }\n    case T.CHANGE_TAB: return { ...state, curGraphIndex: action.payload };\n\n    case T.NEW_GRAPH: return { ...state, newGraphModal: true };\n    case T.REMOVE_GRAPH: return {\n        ...state,\n        graphs: state.graphs.filter((e, i) => i !== action.payload),\n        curGraphIndex: state.curGraphIndex < action.payload\n            ? state.curGraphIndex\n            : Math.max(0, state.curGraphIndex - 1),\n    };\n\n    case T.SET_PROJECT_DETAILS: {\n        const newState = { ...state };\n        newState.graphs = newState.graphs.map((g) => (\n            g.graphID === action.payload.graphID ? { ...g, [action.payload.type]: action.payload.value }\n                : g\n        ));\n        return { ...newState };\n    }\n\n    case T.SET_SHARE_MODAL: {\n        return { ...state, shareModal: action.payload };\n    }\n\n    case T.SET_OPTIONS_MODAL: {\n        return { ...state, optionsModal: action.payload };\n    }\n\n    case T.SET_FILE_STATE: {\n        return { ...state, fileState: action.payload };\n    }\n\n    case T.SET_SETTING_MODAL: {\n        return { ...state, settingsModal: action.payload };\n    }\n\n    case T.SET_MARKDOWN_MODAL: {\n        return { ...state, markDownModal: action.payload };\n    }\n\n    case T.SET_INPUT_FILE: {\n        return { ...state, inputFile: action.payload.content, inputFileName: action.payload.fname };\n    }\n\n    case T.SET_FILE_REF: {\n        return { ...state, fileRef: action.payload };\n    }\n\n    case T.SET_OPTIONS: {\n        return {\n            ...state,\n            dockerCheck: action.payload.docker,\n            unlockCheck: action.payload.unlock,\n            params: action.payload.param,\n            maxTime: action.payload.maxT,\n            octave: action.payload.octave,\n            library: action.payload.library,\n        };\n    }\n\n    case T.SET_FILE_HANDLE: {\n        const newState = { ...state };\n        newState.graphs = newState.graphs.map((g, index) => (\n            index === action.payload.curGraphIndex ? { ...g, fileHandle: action.payload.fileHandle }\n                : g\n        ));\n        return { ...newState };\n    }\n\n    case T.SET_HISTORY_MODAL: {\n        return { ...state, viewHistory: action.payload };\n    }\n\n    case T.SET_AUTHOR: {\n        const newState = { ...state };\n        newState.graphs = newState.graphs.map((g) => (\n            g.graphID === action.payload.graphID ? { ...g, [action.payload.type]: action.payload.value } : g\n        ));\n        return { ...newState };\n    }\n\n    case T.IS_WORKFLOW_ON_SERVER: {\n        return { ...state, isWorkflowOnServer: action.payload };\n    }\n    case T.SET_ZOOM_LEVEL: {\n        return { ...state, zoomLevel: action.payload };\n    }\n    case T.SET_EDIT_DETAILS_MODAL: {\n        return { ...state, editDetailsModal: action.payload };\n    }\n    case T.SET_NEW_GRAPH_MODAL: {\n        return { ...state, newGraphModal: action.payload };\n    }\n    case T.CHANGE_RESET: {\n        return { ...state, resetEnabled: action.payload };\n    }\n    case T.SET_LOGS_MESSAGE: {\n        return { ...state, logsmessage: action.payload };\n    }\n    case T.SET_LOGS: {\n        return { ...state, logs: action.payload };\n    }\n\n    case T.EDIT_TEXTFILE: {\n        return {\n            ...state,\n            textFileModal: action.payload.show,\n            fileObj: action.payload.fileObj,\n            fileHandle: action.payload.fileHandle,\n        };\n    }\n\n    case T.SET_DIR_NAME: {\n        return { ...state, uploadedDirName: action.payload };\n    }\n\n    case T.SET_FUNCTIONS: {\n        const newState = { ...state };\n        newState.graphs[state.curGraphIndex].built = action.payload.built;\n        newState.graphs[state.curGraphIndex].debugged = action.payload.debugged;\n        newState.graphs[state.curGraphIndex].ran = action.payload.ran;\n        newState.graphs[state.curGraphIndex].cleared = action.payload.cleared;\n        newState.graphs[state.curGraphIndex].destroyed = action.payload.destroyed;\n        newState.graphs[state.curGraphIndex].stopped = action.payload.stopped;\n        return { ...newState };\n    }\n\n    default:\n        return state;\n    }\n};\nexport default reducer;\n"],"sourceRoot":""}